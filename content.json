{"meta":{"title":"老骥伏枥","subtitle":null,"description":null,"author":"彦修","url":"http://maxiaoyuelun.github.io"},"pages":[{"title":"","date":"2018-04-15T07:44:46.137Z","updated":"2018-03-25T08:12:19.455Z","comments":true,"path":"404/index.html","permalink":"http://maxiaoyuelun.github.io/404/index.html","excerpt":"","text":""},{"title":"about","date":"2018-03-26T07:48:26.000Z","updated":"2018-05-04T09:25:52.521Z","comments":true,"path":"about/index.html","permalink":"http://maxiaoyuelun.github.io/about/index.html","excerpt":"","text":"有待开发。。。"},{"title":"分类","date":"2018-03-25T07:53:49.000Z","updated":"2018-04-16T07:18:40.883Z","comments":true,"path":"categories/index.html","permalink":"http://maxiaoyuelun.github.io/categories/index.html","excerpt":"","text":""},{"title":"","date":"2018-04-26T07:11:58.000Z","updated":"2019-04-09T13:24:48.589Z","comments":true,"path":"murmurs/index.html","permalink":"http://maxiaoyuelun.github.io/murmurs/index.html","excerpt":"","text":"2019-04-09请一定记得，写审稿意见的时候，你在帮助作者提升论文，而不是在评价他们的成果。 2019-03-19读历史，越读越难发现历史的真面目，越发感觉沧海一粟，讳莫如深；弹吉他，每每到关键点，越发感觉如初学，更难说会；…… 2019-03-13当这个时候还没有毕业，此时的心态是爆炸的，但谁又能理解此时的心理。。。😂😂😂😂😂😂 2018-05-03以前觉得一眼看到头的生活很无趣，现在发现这就是生活，就连这也开始变得很奢侈。 2018-04-24打电话如果当时没明白对方说的意思，务必要把自己理解的说给对方听，如果自己理解的和对方说的不一样，要当场询问清楚，否则，既给自己带来麻烦，别人也会烦！！！切忌⚠️⚠️⚠️ 2018-04-17自信对一个人来说太重要了，有时候能起到决定性的作用，不卑不亢👊👊👊 2016-04-13On certain matters, I have very few people with whom I can talk frankly.📽️《黑暗时刻》丘吉尔 2018-03-25当今社会，说话是门艺术，会说话有时候能够事半功倍。至于如何会说话，从简单来说，就是投其所好，说对方爱听的话。有时候，你比较耿直，心直口快，以为自己很真诚，亦或以为对方是自己熟悉或者亲近的人，可以明着说话，而不用顾忌别人的感受，其实，这种情况才是要注意的，不经意间，你有可能伤害的是至亲朋友。所以，说话前三思，或者更极端点，顺着别人说，似乎永远不会犯错。有个朋友，他特别会说话，滔滔不绝，而且不令人厌烦。可见能说话，会说话多重要。会说话，就更能拉近人与人之间的距离，尤其在如今的生活工作中，电子科技如此发达，更是如此。不能因为是至亲朋友而放肆，要克制，不能图一时之快。切忌✊✊✊ 2018-01-01这里是2018年哟 2017-01-01这里是2017年哟 2016-11-29任何社会的首要目标都必须是满足人类的基本需求：食物、住所、健康、教育，因此，必须首先提高经济效率以使这些基本需求得到满足。但是，如果这些基本需求已得到满足，难道人们还必须无视个人、社会和生态的代价而一味强调经济生产率吗？对于这个基本问题，人类尚未给予应有的考虑。也正是由于这一疏忽，才使得盲目的消费主义和物质主义在全球泛滥，正如库斯托在巴黎散步时所发现的那样。📖🔖 2016-11-29我们的时代是一个问题时代，一个问题很大的时代。在科技的神奇影响下，一切都在经历着变革。如果我们愿意在生活中睁大双眼，每天都有问题等着我们去研究，去解决。📖🔖教皇保罗六世，1969年5月18日 2016-01-01这里是2016年哟"},{"title":"我的音乐","date":"2018-04-12T01:13:50.464Z","updated":"2018-04-12T01:13:50.464Z","comments":true,"path":"musics/index.html","permalink":"http://maxiaoyuelun.github.io/musics/index.html","excerpt":"","text":""},{"title":"","date":"2019-03-24T13:09:19.752Z","updated":"2019-03-24T13:09:19.752Z","comments":true,"path":"photos/index.html","permalink":"http://maxiaoyuelun.github.io/photos/index.html","excerpt":"","text":""},{"title":"标签","date":"2018-03-25T07:53:16.000Z","updated":"2018-04-16T07:18:57.025Z","comments":true,"path":"tags/index.html","permalink":"http://maxiaoyuelun.github.io/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"有关opencv的学习教程","slug":"有关opencv的学习教程","date":"2019-04-30T15:03:59.000Z","updated":"2019-04-30T15:06:54.762Z","comments":true,"path":"2019/04/30/有关opencv的学习教程/","link":"","permalink":"http://maxiaoyuelun.github.io/2019/04/30/有关opencv的学习教程/","excerpt":"LearnOpenCV","text":"LearnOpenCV","categories":[],"tags":[]},{"title":"pytorch的C版本maskrcnn","slug":"pytorch的C版本maskrcnn","date":"2019-04-30T14:10:03.000Z","updated":"2019-04-30T14:55:30.532Z","comments":true,"path":"2019/04/30/pytorch的C版本maskrcnn/","link":"","permalink":"http://maxiaoyuelun.github.io/2019/04/30/pytorch的C版本maskrcnn/","excerpt":"","text":"找了好长时间，终于找到了，苍天啊，大地啊。。。。。。Machine Learning with C++ - Mask R-CNN with PyTorch C++ Frontend Github: mask_rcnn_pytorch 可以关注Kolkir的GitHub和博客Kyrylo Kolodiazhnyi’s Blog。","categories":[{"name":"技术堆栈","slug":"技术堆栈","permalink":"http://maxiaoyuelun.github.io/categories/技术堆栈/"}],"tags":[{"name":"pytorch","slug":"pytorch","permalink":"http://maxiaoyuelun.github.io/tags/pytorch/"},{"name":"C","slug":"C","permalink":"http://maxiaoyuelun.github.io/tags/C/"},{"name":"maskrcnn","slug":"maskrcnn","permalink":"http://maxiaoyuelun.github.io/tags/maskrcnn/"}]},{"title":"有关遮挡的论文","slug":"有关遮挡的论文","date":"2019-04-29T14:40:57.000Z","updated":"2019-04-29T15:10:32.758Z","comments":true,"path":"2019/04/29/有关遮挡的论文/","link":"","permalink":"http://maxiaoyuelun.github.io/2019/04/29/有关遮挡的论文/","excerpt":"CrowdHuman: A Benchmark for Detecting Human in a Crowd Adaptive NMS: Refining Pedestrian Detection in a Crowd Reploss Loss: Detecting Pedestrians in a Crowd 这个不算遮挡DSFD: Dual Shot Face Detector","text":"CrowdHuman: A Benchmark for Detecting Human in a Crowd Adaptive NMS: Refining Pedestrian Detection in a Crowd Reploss Loss: Detecting Pedestrians in a Crowd 这个不算遮挡DSFD: Dual Shot Face Detector","categories":[],"tags":[]},{"title":"COCO比赛leaderboard","slug":"COCO比赛leaderboard","date":"2019-04-29T14:10:03.000Z","updated":"2019-04-30T14:55:56.354Z","comments":true,"path":"2019/04/29/COCO比赛leaderboard/","link":"","permalink":"http://maxiaoyuelun.github.io/2019/04/29/COCO比赛leaderboard/","excerpt":"detection-leaderboard","text":"detection-leaderboard","categories":[{"name":"技术堆栈","slug":"技术堆栈","permalink":"http://maxiaoyuelun.github.io/categories/技术堆栈/"}],"tags":[{"name":"COCO","slug":"COCO","permalink":"http://maxiaoyuelun.github.io/tags/COCO/"}]},{"title":"colaboratory","slug":"colaboratory","date":"2019-04-29T12:58:31.000Z","updated":"2019-04-29T13:27:26.083Z","comments":true,"path":"2019/04/29/colaboratory/","link":"","permalink":"http://maxiaoyuelun.github.io/2019/04/29/colaboratory/","excerpt":"薅资本主义羊毛，有人辟谣说不好用。。。 colaboratory","text":"薅资本主义羊毛，有人辟谣说不好用。。。 colaboratory","categories":[],"tags":[]},{"title":"如何部署pytorch到windows","slug":"如何部署pytorch到windows","date":"2019-04-26T15:03:42.000Z","updated":"2019-04-27T13:08:11.728Z","comments":true,"path":"2019/04/26/如何部署pytorch到windows/","link":"","permalink":"http://maxiaoyuelun.github.io/2019/04/26/如何部署pytorch到windows/","excerpt":"下载Libtorchlibtorch网址","text":"下载Libtorchlibtorch网址 在python端保存模型12345678910111213141516import torchimport torchvisionmodel=torchvision.models.resnet18(pretrained=True)example=torch.rand(1,3,224,224)model=model.eval()traced_script_module=torch.jit.trace(model,example)output=traced_script_module(torch.ones(1,3,224,224))traced_script_module.save('model-trace.pt')print(output[0,:5]) 这样保存的模型既能在CPU端使用，也能在GPU端使用。 在C++端使用模型123456789101112131415161718192021#include &lt;iostream&gt;#include &lt;torch\\script.h&gt;#include &lt;memory&gt;using namespace std;int main()&#123; cout &lt;&lt; \"Hello Libtorch\" &lt;&lt; endl; shared_ptr&lt;torch::jit::script::Module&gt; module = torch::jit::load(\"D:/VSCode/PythonProject/model-trace.pt\"); module-&gt;to(at::kCUDA); assert(module != nullptr); cout &lt;&lt; \"OK\" &lt;&lt; endl; std::vector&lt;torch::jit::IValue&gt; inputs; inputs.push_back(torch::ones(&#123; 1,3,224,224 &#125;).to(at::kCUDA)); auto output = module-&gt;forward(inputs).toTensor().to(at::kCPU); cout &lt;&lt; output.slice(1, 0, 5) &lt;&lt; endl; cout &lt;&lt; output[0][1]&lt;&lt; endl; return 0;&#125; 此代码是在GPU端的调用 附加包含目录&gt;&gt;{libtorch}/include 附加库目录&gt;&gt;{libtorch}/lib 附加依赖项&gt;&gt;c10.lib;caffe2.lib;torch.lib; 讲dll文件拷贝到exe文件目录下&gt;&gt;c10.dll;caffe2.dll;caffe2_gpu.dll;cudnn64_7.dll;torch.dll 至此生成成功。 下面是结合了opencv的部署示例。代码py端： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187from __future__ import print_function,divisionimport torchimport torch.nn as nnimport torch.optim as optimfrom torch.optim import lr_schedulerimport numpy as npimport torchvisionfrom torchvision import datasets,models,transformsimport matplotlib.pyplot as pltimport timeimport osimport copy# 在使用matplotlib的过程中，常常会需要画很多图，但是好像并不能同时展示许多图。# 这是因为python可视化库matplotlib的显示模式默认为阻塞（block）模式。# 什么是阻塞模式那？我的理解就是在plt.show()之后，程序会暂停到那儿，并不会继续执行下去。# 如果需要继续执行程序，就要关闭图片。# 那如何展示动态图或多个窗口呢？# 这就要使用plt.ion()这个函数，使matplotlib的显示模式转换为交互（interactive）模式。# 即使在脚本中遇到plt.show()，代码还是会继续执行。# plt.ion()# Just normalization for validationdata_transforms = &#123; &apos;train&apos;: transforms.Compose([ transforms.RandomResizedCrop(224), transforms.RandomHorizontalFlip(), transforms.ToTensor(), transforms.Normalize([0.485, 0.456, 0.406], [0.229, 0.224, 0.225]) ]), &apos;val&apos;: transforms.Compose([ transforms.Resize(256), transforms.CenterCrop(224), transforms.ToTensor(), transforms.Normalize([0.485, 0.456, 0.406], [0.229, 0.224, 0.225]) ]),&#125;data_dir = &apos;hymenoptera_data&apos;image_datasets = &#123;x: datasets.ImageFolder(os.path.join(data_dir, x), data_transforms[x]) for x in [&apos;train&apos;, &apos;val&apos;]&#125;dataloaders = &#123;x: torch.utils.data.DataLoader(image_datasets[x], batch_size=4, shuffle=True) for x in [&apos;train&apos;, &apos;val&apos;]&#125;dataset_sizes = &#123;x: len(image_datasets[x]) for x in [&apos;train&apos;, &apos;val&apos;]&#125;class_names = image_datasets[&apos;train&apos;].classesdevice = torch.device(&quot;cuda:0&quot; if torch.cuda.is_available() else &quot;cpu&quot;)def imshow(inp, title=None): &quot;&quot;&quot;Imshow for Tensor.&quot;&quot;&quot; inp = inp.numpy().transpose((1, 2, 0)) mean = np.array([0.485, 0.456, 0.406]) std = np.array([0.229, 0.224, 0.225]) inp = std * inp + mean inp = np.clip(inp, 0, 1) plt.imshow(inp) if title is not None: plt.title(title) plt.pause(5) # pause a bit so that plots are updated# Get a batch of training data# inputs, classes = next(iter(dataloaders[&apos;train&apos;]))# Make a grid from batch# out = torchvision.utils.make_grid(inputs)# imshow(out, title=[class_names[x] for x in classes])def train_model(model, criterion, optimizer, scheduler, num_epochs=25): since = time.time() best_model_wts = copy.deepcopy(model.state_dict()) best_acc = 0.0 for epoch in range(num_epochs): print(&apos;Epoch &#123;&#125;/&#123;&#125;&apos;.format(epoch, num_epochs - 1)) print(&apos;-&apos; * 10) # Each epoch has a training and validation phase for phase in [&apos;train&apos;, &apos;val&apos;]: if phase == &apos;train&apos;: scheduler.step() model.train() # Set model to training mode else: model.eval() # Set model to evaluate mode running_loss = 0.0 running_corrects = 0 # Iterate over data. for inputs, labels in dataloaders[phase]: inputs = inputs.to(device) labels = labels.to(device) # zero the parameter gradients optimizer.zero_grad() # forward # track history if only in train with torch.set_grad_enabled(phase == &apos;train&apos;): outputs = model(inputs) _, preds = torch.max(outputs, 1) loss = criterion(outputs, labels) # backward + optimize only if in training phase if phase == &apos;train&apos;: loss.backward() optimizer.step() # statistics running_loss += loss.item() * inputs.size(0) running_corrects += torch.sum(preds == labels.data) epoch_loss = running_loss / dataset_sizes[phase] epoch_acc = running_corrects.double() / dataset_sizes[phase] print(&apos;&#123;&#125; Loss: &#123;:.4f&#125; Acc: &#123;:.4f&#125;&apos;.format( phase, epoch_loss, epoch_acc)) # deep copy the model if phase == &apos;val&apos; and epoch_acc &gt; best_acc: best_acc = epoch_acc best_model_wts = copy.deepcopy(model.state_dict()) print() time_elapsed = time.time() - since print(&apos;Training complete in &#123;:.0f&#125;m &#123;:.0f&#125;s&apos;.format( time_elapsed // 60, time_elapsed % 60)) print(&apos;Best val Acc: &#123;:4f&#125;&apos;.format(best_acc)) # load best model weights model.load_state_dict(best_model_wts) return modeldef visualize_model(model, num_images=6): was_training = model.training model.eval() images_so_far = 0 fig = plt.figure() with torch.no_grad(): for i, (inputs, labels) in enumerate(dataloaders[&apos;val&apos;]): inputs = inputs.to(device) labels = labels.to(device) outputs = model(inputs) _, preds = torch.max(outputs, 1) for j in range(inputs.size()[0]): images_so_far += 1 ax = plt.subplot(num_images//2, 2, images_so_far) ax.axis(&apos;off&apos;) ax.set_title(&apos;predicted: &#123;&#125;&apos;.format(class_names[preds[j]])) imshow(inputs.cpu().data[j]) if images_so_far == num_images: model.train(mode=was_training) return model.train(mode=was_training)model_ft = models.resnet18(pretrained=True)num_ftrs = model_ft.fc.in_featuresmodel_ft.fc = nn.Linear(num_ftrs, 2)model_ft = model_ft.to(device)criterion = nn.CrossEntropyLoss()# Observe that all parameters are being optimizedoptimizer_ft = optim.SGD(model_ft.parameters(), lr=0.001, momentum=0.9)# Decay LR by a factor of 0.1 every 7 epochsexp_lr_scheduler = lr_scheduler.StepLR(optimizer_ft, step_size=7, gamma=0.1)model_ft = train_model(model_ft, criterion, optimizer_ft, exp_lr_scheduler,num_epochs=5)example=torch.rand(1,3,224,224)traced_script_module=torch.jit.trace(model_ft.to(&apos;cpu&apos;),example)traced_script_module.save(&apos;model-beesandants-trace.pt&apos;) 代码c++端： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869#include &lt;iostream&gt;#include &lt;torch\\script.h&gt;#include &lt;memory&gt;#include &lt;opencv2\\opencv.hpp&gt;using namespace std;using namespace cv;// resize并保持图像比例不变cv::Mat resize_with_ratio(cv::Mat&amp; img)&#123; cv::Mat temImage; int w = img.cols; int h = img.rows; float t = 1.; float len = t * std::max(w, h); int dst_w = 224, dst_h = 224; cv::Mat image = cv::Mat(cv::Size(dst_w, dst_h), CV_8UC3, cv::Scalar(128, 128, 128)); cv::Mat imageROI; if (len == w) &#123; float ratio = (float)h / (float)w; cv::resize(img, temImage, cv::Size(224, 224 * ratio), 0, 0, cv::INTER_LINEAR); imageROI = image(cv::Rect(0, ((dst_h - 224 * ratio) / 2), temImage.cols, temImage.rows)); temImage.copyTo(imageROI); &#125; else &#123; float ratio = (float)w / (float)h; cv::resize(img, temImage, cv::Size(224 * ratio, 224), 0, 0, cv::INTER_LINEAR); imageROI = image(cv::Rect(((dst_w - 224 * ratio) / 2), 0, temImage.cols, temImage.rows)); temImage.copyTo(imageROI); &#125; return image;&#125;int main()&#123; std::cout &lt;&lt; &quot;Hello Libtorch&quot; &lt;&lt; std::endl; cv::Mat image=cv::imread(&quot;D:/VSCode/PythonProject/hymenoptera_data/val/bees/26589803_5ba7000313.jpg&quot;); //cv::Mat image = cv::imread(&quot;D:/VSCode/PythonProject/hymenoptera_data/val/ants/800px-Meat_eater_ant_qeen_excavating_hole.jpg&quot;); image = resize_with_ratio(image); //cv::imshow(&quot;resized image&quot;, image); cv::Mat input; cv::cvtColor(image, input, cv::COLOR_BGR2RGB); // 下方的代码即将图像转化为Tensor，随后导入模型进行预测 torch::Tensor tensor_image = torch::from_blob(input.data, &#123; 1,input.rows, input.cols,3 &#125;, torch::kByte); tensor_image = tensor_image.permute(&#123; 0,3,1,2 &#125;); tensor_image = tensor_image.toType(torch::kFloat); tensor_image = tensor_image.div(255); tensor_image = tensor_image.to(torch::kCUDA); shared_ptr&lt;torch::jit::script::Module&gt; module = torch::jit::load(&quot;D:/VSCode/PythonProject/model-beesandants-trace.pt&quot;); module-&gt;to(at::kCUDA); assert(module != nullptr); std::cout &lt;&lt; &quot;OK&quot; &lt;&lt; std::endl; std::vector&lt;torch::jit::IValue&gt; inputs; auto result = module-&gt;forward(&#123; tensor_image &#125;).toTensor().to(at::kCPU); std::cout &lt;&lt; result &lt;&lt; std::endl; auto max_result = result.max(1, true); auto max_index = std::get&lt;1&gt;(max_result).item&lt;float&gt;(); std::cout &lt;&lt; max_index &lt;&lt; std::endl; return 0;&#125; 简单部署如上，还需要测试其他部署情况，比如识别之类的大的模型。 重要资料如何将maskrcnn_benchmark转换为pt供C++调用 应该是他讲代码重写了，然后还需要很多调试，暂时不知道能否使用。。。。。。 maskrcnn-benchmark/issues/617 scripting/demo/cpp/traced_model.cpp) scripting/demo/trace_model.py 参考文档 如何在 windows 配置 libtorch c++ 前端库？ Pytorch的C++端(libtorch)在Windows中的使用 利用Pytorch的C++前端(libtorch)读取预训练权重并进行预测","categories":[{"name":"技术堆栈","slug":"技术堆栈","permalink":"http://maxiaoyuelun.github.io/categories/技术堆栈/"}],"tags":[{"name":"c++","slug":"c","permalink":"http://maxiaoyuelun.github.io/tags/c/"},{"name":"pytorch","slug":"pytorch","permalink":"http://maxiaoyuelun.github.io/tags/pytorch/"}]},{"title":"git克隆分支","slug":"git克隆分支","date":"2019-04-26T12:56:03.000Z","updated":"2019-04-26T13:00:40.214Z","comments":true,"path":"2019/04/26/git克隆分支/","link":"","permalink":"http://maxiaoyuelun.github.io/2019/04/26/git克隆分支/","excerpt":"git clone –recursive -b 分支 master.git","text":"git clone –recursive -b 分支 master.git","categories":[],"tags":[]},{"title":"XMAN流程","slug":"XMAN流程","date":"2019-04-23T13:53:12.000Z","updated":"2019-04-23T13:59:45.197Z","comments":true,"path":"2019/04/23/XMAN流程/","link":"","permalink":"http://maxiaoyuelun.github.io/2019/04/23/XMAN流程/","excerpt":"在用工具标注好之后 D:\\science\\data\\xrayBag\\create_VOC_with_all.m用上面的代码，生成pascal_voc格式。 D:\\repo\\downloads_repo\\cocoapi\\MatlabAPI 用上面文件夹下的代码，将pascal_voc格式转换成coco格式。(参考博客里的将pascal_voc转换成coco格式文章)。 C:\\Users\\colin\\Desktop\\Xray20181001\\nanjingzhan_yolov3.m 参考上面的代码，将pascal_voc格式转换成yolo格式。","text":"在用工具标注好之后 D:\\science\\data\\xrayBag\\create_VOC_with_all.m用上面的代码，生成pascal_voc格式。 D:\\repo\\downloads_repo\\cocoapi\\MatlabAPI 用上面文件夹下的代码，将pascal_voc格式转换成coco格式。(参考博客里的将pascal_voc转换成coco格式文章)。 C:\\Users\\colin\\Desktop\\Xray20181001\\nanjingzhan_yolov3.m 参考上面的代码，将pascal_voc格式转换成yolo格式。","categories":[{"name":"技术堆栈","slug":"技术堆栈","permalink":"http://maxiaoyuelun.github.io/categories/技术堆栈/"}],"tags":[{"name":"xman","slug":"xman","permalink":"http://maxiaoyuelun.github.io/tags/xman/"}]},{"title":"MobaXterm","slug":"MobaXterm","date":"2019-04-19T12:34:51.000Z","updated":"2019-04-23T14:01:00.614Z","comments":true,"path":"2019/04/19/MobaXterm/","link":"","permalink":"http://maxiaoyuelun.github.io/2019/04/19/MobaXterm/","excerpt":"工具推荐： MobaXterm","text":"工具推荐： MobaXterm","categories":[{"name":"软件工具","slug":"软件工具","permalink":"http://maxiaoyuelun.github.io/categories/软件工具/"}],"tags":[{"name":"MobaXterm","slug":"MobaXterm","permalink":"http://maxiaoyuelun.github.io/tags/MobaXterm/"}]},{"title":"重要的代码Repository集合","slug":"重要的代码Repo集合","date":"2019-04-18T13:17:38.000Z","updated":"2019-04-23T13:17:38.000Z","comments":true,"path":"2019/04/18/重要的代码Repo集合/","link":"","permalink":"http://maxiaoyuelun.github.io/2019/04/18/重要的代码Repo集合/","excerpt":"发现好的代码收藏到这里，不断更新。。。。。。","text":"发现好的代码收藏到这里，不断更新。。。。。。 根据这边博客win10 安装maskrcnn-benchmark 教程在windows下安装成功。 谷歌官方的高质量代码。 如名字，高质量python。 有关mxnet的一些代码 李笑来 tensorflow在windows下的一些轮子 最经典的mask_rcnn的代码","categories":[{"name":"技术堆栈","slug":"技术堆栈","permalink":"http://maxiaoyuelun.github.io/categories/技术堆栈/"}],"tags":[{"name":"git","slug":"git","permalink":"http://maxiaoyuelun.github.io/tags/git/"},{"name":"repository","slug":"repository","permalink":"http://maxiaoyuelun.github.io/tags/repository/"}]},{"title":"英文学术论文写作好书推荐","slug":"英文学术论文写作好书推荐","date":"2019-03-27T15:35:14.000Z","updated":"2019-04-23T14:01:27.330Z","comments":true,"path":"2019/03/27/英文学术论文写作好书推荐/","link":"","permalink":"http://maxiaoyuelun.github.io/2019/03/27/英文学术论文写作好书推荐/","excerpt":"知乎问答：英文学术论文写作，有什么好书可以推荐? To be continued……","text":"知乎问答：英文学术论文写作，有什么好书可以推荐? To be continued……","categories":[{"name":"技术堆栈","slug":"技术堆栈","permalink":"http://maxiaoyuelun.github.io/categories/技术堆栈/"}],"tags":[{"name":"学术写作","slug":"学术写作","permalink":"http://maxiaoyuelun.github.io/tags/学术写作/"}]},{"title":"新电脑装机流程","slug":"新电脑装机流程","date":"2019-03-27T15:33:03.000Z","updated":"2019-04-23T14:01:40.014Z","comments":true,"path":"2019/03/27/新电脑装机流程/","link":"","permalink":"http://maxiaoyuelun.github.io/2019/03/27/新电脑装机流程/","excerpt":"待有时间时慢慢更新……","text":"待有时间时慢慢更新……","categories":[{"name":"技术堆栈","slug":"技术堆栈","permalink":"http://maxiaoyuelun.github.io/categories/技术堆栈/"}],"tags":[]},{"title":"写论文发现的那些神网站","slug":"写论文发现的那些神网站","date":"2019-03-27T15:29:36.000Z","updated":"2019-04-23T14:01:59.070Z","comments":true,"path":"2019/03/27/写论文发现的那些神网站/","link":"","permalink":"http://maxiaoyuelun.github.io/2019/03/27/写论文发现的那些神网站/","excerpt":"知乎问答：你写论文时发现了哪些神网站？ To be continued……","text":"知乎问答：你写论文时发现了哪些神网站？ To be continued……","categories":[{"name":"技术堆栈","slug":"技术堆栈","permalink":"http://maxiaoyuelun.github.io/categories/技术堆栈/"}],"tags":[{"name":"学术写作","slug":"学术写作","permalink":"http://maxiaoyuelun.github.io/tags/学术写作/"}]},{"title":"resnet论文结构截图","slug":"resnet论文结构截图","date":"2019-03-26T15:31:26.000Z","updated":"2019-04-23T14:02:47.197Z","comments":true,"path":"2019/03/26/resnet论文结构截图/","link":"","permalink":"http://maxiaoyuelun.github.io/2019/03/26/resnet论文结构截图/","excerpt":"","text":"","categories":[{"name":"技术堆栈","slug":"技术堆栈","permalink":"http://maxiaoyuelun.github.io/categories/技术堆栈/"}],"tags":[{"name":"resnet","slug":"resnet","permalink":"http://maxiaoyuelun.github.io/tags/resnet/"}]},{"title":"awesome开源数据集","slug":"awesome开源数据集","date":"2019-03-24T15:45:17.000Z","updated":"2019-04-23T14:03:04.223Z","comments":true,"path":"2019/03/24/awesome开源数据集/","link":"","permalink":"http://maxiaoyuelun.github.io/2019/03/24/awesome开源数据集/","excerpt":"","text":"","categories":[{"name":"技术堆栈","slug":"技术堆栈","permalink":"http://maxiaoyuelun.github.io/categories/技术堆栈/"}],"tags":[]},{"title":"提问的智慧","slug":"提问的智慧","date":"2019-03-24T15:30:56.000Z","updated":"2019-04-23T14:03:18.709Z","comments":true,"path":"2019/03/24/提问的智慧/","link":"","permalink":"http://maxiaoyuelun.github.io/2019/03/24/提问的智慧/","excerpt":"","text":"","categories":[{"name":"技术堆栈","slug":"技术堆栈","permalink":"http://maxiaoyuelun.github.io/categories/技术堆栈/"}],"tags":[]},{"title":"学术写作参考网站","slug":"学术写作参考网站","date":"2019-03-24T15:24:56.000Z","updated":"2019-04-23T14:02:28.285Z","comments":true,"path":"2019/03/24/学术写作参考网站/","link":"","permalink":"http://maxiaoyuelun.github.io/2019/03/24/学术写作参考网站/","excerpt":"coca Academic Phrasebank","text":"coca Academic Phrasebank Academic Phrasebank","categories":[{"name":"技术堆栈","slug":"技术堆栈","permalink":"http://maxiaoyuelun.github.io/categories/技术堆栈/"}],"tags":[{"name":"学术写作","slug":"学术写作","permalink":"http://maxiaoyuelun.github.io/tags/学术写作/"}]},{"title":"sota学术收集","slug":"sota学术收集","date":"2019-03-24T15:03:42.000Z","updated":"2019-04-23T14:03:29.935Z","comments":true,"path":"2019/03/24/sota学术收集/","link":"","permalink":"http://maxiaoyuelun.github.io/2019/03/24/sota学术收集/","excerpt":"Browse state-of-the-art","text":"Browse state-of-the-art","categories":[{"name":"技术堆栈","slug":"技术堆栈","permalink":"http://maxiaoyuelun.github.io/categories/技术堆栈/"}],"tags":[]},{"title":"基于yolo_v3的物体跟踪","slug":"基于yolo-v3的物体跟踪","date":"2019-03-24T14:52:52.000Z","updated":"2019-03-24T14:55:09.515Z","comments":true,"path":"2019/03/24/基于yolo-v3的物体跟踪/","link":"","permalink":"http://maxiaoyuelun.github.io/2019/03/24/基于yolo-v3的物体跟踪/","excerpt":"","text":"","categories":[],"tags":[]},{"title":"yolo_v3的pytorch版本实现","slug":"yolo-v3的pytorch版本实现","date":"2019-03-24T14:46:37.000Z","updated":"2019-03-24T14:47:33.602Z","comments":true,"path":"2019/03/24/yolo-v3的pytorch版本实现/","link":"","permalink":"http://maxiaoyuelun.github.io/2019/03/24/yolo-v3的pytorch版本实现/","excerpt":"","text":"","categories":[],"tags":[]},{"title":"tensorflow2教程","slug":"tensorflow2教程","date":"2019-03-24T13:22:31.000Z","updated":"2019-03-24T13:42:14.485Z","comments":true,"path":"2019/03/24/tensorflow2教程/","link":"","permalink":"http://maxiaoyuelun.github.io/2019/03/24/tensorflow2教程/","excerpt":"","text":"","categories":[],"tags":[]},{"title":"GAN概览","slug":"GAN概览","date":"2019-03-24T12:53:41.000Z","updated":"2019-03-24T13:34:48.196Z","comments":true,"path":"2019/03/24/GAN概览/","link":"","permalink":"http://maxiaoyuelun.github.io/2019/03/24/GAN概览/","excerpt":"可以在hexo中插入pdf文件了","text":"可以在hexo中插入pdf文件了","categories":[],"tags":[]},{"title":"博客添加pdf插件","slug":"博客添加pdf插件","date":"2019-03-24T12:48:15.000Z","updated":"2019-03-24T13:12:20.260Z","comments":true,"path":"2019/03/24/博客添加pdf插件/","link":"","permalink":"http://maxiaoyuelun.github.io/2019/03/24/博客添加pdf插件/","excerpt":"安装插件1npm install --save hexo-pdf 配置创建 book 页面1hexo new page book 编写在成的md文件中添加pdf 外部链接： 123&#123;% pdf http://7xov2f.com1.z0.glb.clouddn.com/bash_freshman.pdf %&#125;本地连接：&#123;% pdf ./pdf名字.pdf %&#125;","text":"安装插件1npm install --save hexo-pdf 配置创建 book 页面1hexo new page book 编写在成的md文件中添加pdf 外部链接： 123&#123;% pdf http://7xov2f.com1.z0.glb.clouddn.com/bash_freshman.pdf %&#125;本地连接：&#123;% pdf ./pdf名字.pdf %&#125;","categories":[],"tags":[]},{"title":"吉他教程网页","slug":"吉他教程网页","date":"2019-03-19T14:00:15.000Z","updated":"2019-03-19T14:02:55.959Z","comments":true,"path":"2019/03/19/吉他教程网页/","link":"","permalink":"http://maxiaoyuelun.github.io/2019/03/19/吉他教程网页/","excerpt":"知乎：吉他基础教程 知乎：吉他与乐理","text":"知乎：吉他基础教程 知乎：吉他与乐理","categories":[],"tags":[]},{"title":"翻牡丹亭外","slug":"翻牡丹亭外","date":"2019-03-13T13:28:18.000Z","updated":"2019-03-13T14:33:38.666Z","comments":true,"path":"2019/03/13/翻牡丹亭外/","link":"","permalink":"http://maxiaoyuelun.github.io/2019/03/13/翻牡丹亭外/","excerpt":"","text":"为救李郎离家园谁料黄榜中状元中状元 着红袍帽插宫花好啊好新鲜李郎一梦已过往风流人物啊在何方从古到今说来话不过是情而已你问我怕什么怕不能遇见你这人间有点假可我莫名爱上他荒凉一梦二十年依旧是不懂爱也不懂情写歌的人假正经啊听歌的人最无情为救李郎离家园谁料黄榜中状元中状元 着红袍帽插宫花好啊好新鲜","categories":[{"name":"音乐之声","slug":"音乐之声","permalink":"http://maxiaoyuelun.github.io/categories/音乐之声/"}],"tags":[{"name":"刘润洁","slug":"刘润洁","permalink":"http://maxiaoyuelun.github.io/tags/刘润洁/"}]},{"title":"微博图床","slug":"微博图床","date":"2019-03-13T12:36:26.000Z","updated":"2019-03-13T14:33:52.610Z","comments":true,"path":"2019/03/13/微博图床/","link":"","permalink":"http://maxiaoyuelun.github.io/2019/03/13/微博图床/","excerpt":"","text":"","categories":[{"name":"技术堆栈","slug":"技术堆栈","permalink":"http://maxiaoyuelun.github.io/categories/技术堆栈/"}],"tags":[{"name":"图床","slug":"图床","permalink":"http://maxiaoyuelun.github.io/tags/图床/"}]},{"title":"瘦身贴没用的证据","slug":"瘦身贴没用的证据","date":"2018-10-24T01:30:40.000Z","updated":"2018-10-24T01:38:08.971Z","comments":true,"path":"2018/10/24/瘦身贴没用的证据/","link":"","permalink":"http://maxiaoyuelun.github.io/2018/10/24/瘦身贴没用的证据/","excerpt":"瘦身贴翻译为slim patch或者weight loss patch，药品这一块国外还是比较正规，知道药品的英文名称，谷歌搜索就可以查看相关链接。 对于减肥这一块，以下链接说明瘦身贴没用。","text":"瘦身贴翻译为slim patch或者weight loss patch，药品这一块国外还是比较正规，知道药品的英文名称，谷歌搜索就可以查看相关链接。 对于减肥这一块，以下链接说明瘦身贴没用。 What to Know About Weight Loss Patches 26 Weight Loss Tips That Are Actually Evidence-Based Does Exercise Help You Lose Weight? The Surprising Truth","categories":[],"tags":[]},{"title":"pascal_voc数据集转coco数据集","slug":"pascal-voc数据集转coco数据集","date":"2018-09-03T06:37:05.000Z","updated":"2018-10-11T05:01:49.358Z","comments":true,"path":"2018/09/03/pascal-voc数据集转coco数据集/","link":"","permalink":"http://maxiaoyuelun.github.io/2018/09/03/pascal-voc数据集转coco数据集/","excerpt":"下载cocoapi，里面有MatlabAPI。 参考代码 1CocoUtils.convertPascalGt( &apos;D:/DataGit/VOC2007_XMAN/&apos;, &apos;2007&apos;, &apos;train&apos;, &apos;pascal_train2007.json&apos;)","text":"下载cocoapi，里面有MatlabAPI。 参考代码 1CocoUtils.convertPascalGt( &apos;D:/DataGit/VOC2007_XMAN/&apos;, &apos;2007&apos;, &apos;train&apos;, &apos;pascal_train2007.json&apos;)","categories":[],"tags":[]},{"title":"python2代码转python3","slug":"python2代码转python3","date":"2018-09-03T06:36:40.000Z","updated":"2018-10-11T01:24:39.061Z","comments":true,"path":"2018/09/03/python2代码转python3/","link":"","permalink":"http://maxiaoyuelun.github.io/2018/09/03/python2代码转python3/","excerpt":"参考资料 python2代码转python3","text":"参考资料 python2代码转python3","categories":[{"name":"技术堆栈","slug":"技术堆栈","permalink":"http://maxiaoyuelun.github.io/categories/技术堆栈/"}],"tags":[{"name":"python","slug":"python","permalink":"http://maxiaoyuelun.github.io/tags/python/"}]},{"title":"hexo-tag-video插件","slug":"hexo-tag-video插件","date":"2018-05-05T13:18:01.000Z","updated":"2018-05-05T13:19:18.537Z","comments":true,"path":"2018/05/05/hexo-tag-video插件/","link":"","permalink":"http://maxiaoyuelun.github.io/2018/05/05/hexo-tag-video插件/","excerpt":"终于找到这个插入视频的插件了，很好用 链接在此：hexo-tag-video","text":"终于找到这个插入视频的插件了，很好用 链接在此：hexo-tag-video","categories":[{"name":"软件工具","slug":"软件工具","permalink":"http://maxiaoyuelun.github.io/categories/软件工具/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"http://maxiaoyuelun.github.io/tags/hexo/"},{"name":"video","slug":"video","permalink":"http://maxiaoyuelun.github.io/tags/video/"}]},{"title":"opencv调试","slug":"opencv调试","date":"2018-05-04T04:44:49.000Z","updated":"2018-05-04T04:47:16.934Z","comments":true,"path":"2018/05/04/opencv调试/","link":"","permalink":"http://maxiaoyuelun.github.io/2018/05/04/opencv调试/","excerpt":"步骤 下载Image Watch插件，点击安装。 添加断点。 打开视图&gt;&gt;其他窗口&gt;&gt;Image Watch。 点击Local就可以实时查看图像的像素值，便于调试。 参考文献 windows-visual-studio-image-watch","text":"步骤 下载Image Watch插件，点击安装。 添加断点。 打开视图&gt;&gt;其他窗口&gt;&gt;Image Watch。 点击Local就可以实时查看图像的像素值，便于调试。 参考文献 windows-visual-studio-image-watch","categories":[{"name":"软件工具","slug":"软件工具","permalink":"http://maxiaoyuelun.github.io/categories/软件工具/"}],"tags":[{"name":"visual studio","slug":"visual-studio","permalink":"http://maxiaoyuelun.github.io/tags/visual-studio/"},{"name":"opencv","slug":"opencv","permalink":"http://maxiaoyuelun.github.io/tags/opencv/"}]},{"title":"博客与工具推荐推荐","slug":"博客与工具推荐","date":"2018-04-28T07:37:10.000Z","updated":"2019-03-24T13:49:54.900Z","comments":true,"path":"2018/04/28/博客与工具推荐/","link":"","permalink":"http://maxiaoyuelun.github.io/2018/04/28/博客与工具推荐/","excerpt":"本文主要推荐一些博客链接和工具链接，以便查找，如果需要详细说明，会单开一篇来介绍相应的工具。","text":"本文主要推荐一些博客链接和工具链接，以便查找，如果需要详细说明，会单开一篇来介绍相应的工具。 github be-a-professional-programmer hexo-github-card这是个可以展示github内repo的插件，详见：tensorflow2教程","categories":[{"name":"软件工具","slug":"软件工具","permalink":"http://maxiaoyuelun.github.io/categories/软件工具/"}],"tags":[]},{"title":"创建碎碎念","slug":"创建碎碎念","date":"2018-04-26T12:46:01.000Z","updated":"2018-04-26T12:54:08.452Z","comments":true,"path":"2018/04/26/创建碎碎念/","link":"","permalink":"http://maxiaoyuelun.github.io/2018/04/26/创建碎碎念/","excerpt":"创建碎碎念页面","text":"创建碎碎念页面 1hexo new page murmurs 在next/source/css/_variables/base.styl中添加： 1234567891011/*首先，我们要创建一个容器class*/.times &#123;display:block;margin:20px 0;&#125;/*利用ul标签的特性，设置外边框左移25px，左边边框是2px粗的实心线，颜色一般要浅一点*/.times ul &#123;margin-right:5px;margin-left:10px;border-left:1px solid #ddd;list-style-type:none;&#125;/*一般情况，通过li标签控制圆点回到时间线上，然后控制要出现的文字大小和是否粗体*/.times ul li &#123;width:100%;margin-left:-26px;line-height:20px;font-weight:narmal;&#125;.times ul li p &#123;margin-top:10px &#125;/*设置span标签的属性，让它来做时间显示，加一点边距，使时间显示离时间线远一点*/.times ul li span &#123;padding-left:7px;font-size:15px;line-height:20px;color:#555;margin-down:50px;&#125;/*注意这一行，前面的li标签后面加了一个:hover伪属性，意思是鼠标移上来，激活后面的属性，这样可以设置鼠标移动到整个时间范围的时候，时间点和时间显示会变色*/.times ul li:hover p &#123;border-bottom: 1px solid #000000;&#125; 在source/murmurs/index.md中添加： 1234567&lt;div class=&quot;times&quot;&gt;&lt;ul&gt; &lt;li&gt;&lt;span&gt;2018-01-01&lt;/span&gt;&lt;p&gt;这里是2018年哟&lt;/p&gt;&lt;/li&gt; &lt;li&gt;&lt;span&gt;2017-01-01&lt;/span&gt;&lt;p&gt;这里是2017年哟&lt;/p&gt;&lt;/li&gt; &lt;li&gt;&lt;span&gt;2016-01-01&lt;/span&gt;&lt;p&gt;这里是2016年哟&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt; 至此，初步碎碎念完成。","categories":[{"name":"技术堆栈","slug":"技术堆栈","permalink":"http://maxiaoyuelun.github.io/categories/技术堆栈/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"http://maxiaoyuelun.github.io/tags/hexo/"}]},{"title":"自动生成favcion","slug":"自动生成favcion","date":"2018-04-26T12:45:37.000Z","updated":"2018-04-26T12:52:19.137Z","comments":true,"path":"2018/04/26/自动生成favcion/","link":"","permalink":"http://maxiaoyuelun.github.io/2018/04/26/自动生成favcion/","excerpt":"链接在此：favicon-generator","text":"链接在此：favicon-generator","categories":[{"name":"软件工具","slug":"软件工具","permalink":"http://maxiaoyuelun.github.io/categories/软件工具/"}],"tags":[{"name":"next","slug":"next","permalink":"http://maxiaoyuelun.github.io/tags/next/"}]},{"title":"下载旧版本VS","slug":"下载旧版本VS","date":"2018-04-24T07:18:21.000Z","updated":"2018-04-24T07:26:46.850Z","comments":true,"path":"2018/04/24/下载旧版本VS/","link":"","permalink":"http://maxiaoyuelun.github.io/2018/04/24/下载旧版本VS/","excerpt":"链接在此：仍想使用较旧的版本？","text":"链接在此：仍想使用较旧的版本？","categories":[],"tags":[]},{"title":"自己编写CNN框架之零","slug":"自己编写CNN框架之零","date":"2018-04-19T07:28:25.000Z","updated":"2018-04-19T08:39:32.910Z","comments":true,"path":"2018/04/19/自己编写CNN框架之零/","link":"","permalink":"http://maxiaoyuelun.github.io/2018/04/19/自己编写CNN框架之零/","excerpt":"终于下定决心自己编写CNN框架了，立FLAG了！！！ 参考链接： EasyCNN的设计实现 EasyCNN Flag实现：C++从零开始开发深度学习框架 marvin marvin官网 tiny-dnn darknet kann","text":"终于下定决心自己编写CNN框架了，立FLAG了！！！ 参考链接： EasyCNN的设计实现 EasyCNN Flag实现：C++从零开始开发深度学习框架 marvin marvin官网 tiny-dnn darknet kann","categories":[{"name":"技术堆栈","slug":"技术堆栈","permalink":"http://maxiaoyuelun.github.io/categories/技术堆栈/"}],"tags":[]},{"title":"CUDA匹配SM和COMPUTE","slug":"CUDA匹配SM和COMPUTE","date":"2018-04-18T06:58:07.000Z","updated":"2018-04-18T07:16:22.203Z","comments":true,"path":"2018/04/18/CUDA匹配SM和COMPUTE/","link":"","permalink":"http://maxiaoyuelun.github.io/2018/04/18/CUDA匹配SM和COMPUTE/","excerpt":"链接在此：Compatibility Supported SM and Gencode variationsBelow are the supported sm variations and sample cards from that generation","text":"链接在此：Compatibility Supported SM and Gencode variationsBelow are the supported sm variations and sample cards from that generation Supported on CUDA 7 and later####Fermi (CUDA 3.2 and later, deprecated from CUDA 9): SM20 or SM_20, compute_30 – Older cards such as GeForce 400, 500, 600, GT-630####Kepler (CUDA 5 and later): SM30 or SM_30, compute_30 – Kepler architecture (generic – Tesla K40/K80, GeForce 700, GT-730)Adds support for unified memory programming SM35 or SM_35, compute_35 – More specific Tesla K40Adds support for dynamic parallelism. Shows no real benefit over SM30 in my experience. SM37 or SM_37, compute_37 – More specific Tesla K80Adds a few more registers. Shows no real benefit over SM30 in my experienceMaxwell (CUDA 6 and later): SM50 or SM_50, compute_50 – Tesla/Quadro M series SM52 or SM_52, compute_52 – Quadro M6000 , GeForce 900, GTX-970, GTX-980, GTX Titan X SM53 or SM_53, compute_53 – Tegra (Jetson) TX1 / Tegra X1Pascal (CUDA 8 and later) SM60 or SM_60, compute_60 – GP100/Tesla P100 – DGX-1 (Generic Pascal) SM61 or SM_61, compute_61 – GTX 1080, GTX 1070, GTX 1060, GTX 1050, GTX 1030, Titan Xp, Tesla P40, Tesla P4 SM62 or SM_62, compute_62 – Drive-PX2, Tegra (Jetson) TX2, Denver-based GPUVolta (CUDA 9 and later) SM70 or SM_70, compute_70 – Tesla V100 SM71 or SM_71, compute_71 – probably not implemented SM72 or SM_72, compute_72 – currently unknown","categories":[{"name":"技术堆栈","slug":"技术堆栈","permalink":"http://maxiaoyuelun.github.io/categories/技术堆栈/"}],"tags":[{"name":"cuda","slug":"cuda","permalink":"http://maxiaoyuelun.github.io/tags/cuda/"}]},{"title":"next添加相册gallery","slug":"next添加相册gallery","date":"2018-04-17T04:58:05.000Z","updated":"2018-04-17T06:20:21.289Z","comments":true,"path":"2018/04/17/next添加相册gallery/","link":"","permalink":"http://maxiaoyuelun.github.io/2018/04/17/next添加相册gallery/","excerpt":"链接在此：详细","text":"链接在此：详细 主要作了如下修改： /next/_config.yml添加新版本的fancybox 1234567891011vendors: # Internal path prefix. Please do not edit it. _internal: lib # Internal version: 2.1.3 jquery: # Internal version: 2.1.5 # See: http://fancyapps.com/fancybox/ fancybox: https://cdn.bootcss.com/fancybox/3.3.5/jquery.fancybox.min.js fancybox_css: https://cdn.bootcss.com/fancybox/3.3.5/jquery.fancybox.min.css /next/layout/_macro/post.swig找到如下代码修改12345678910111213141516171819202122&#123;# Gallery support #&#125;&#123;% if post.photos and post.photos.length %&#125;&lt;div class=&quot;post-gallery&quot; itemscope itemtype=&quot;http://schema.org/ImageGallery&quot;&gt; &#123;% set COLUMN_NUMBER = 3 %&#125; &#123;% for photo in post.photos %&#125; &#123;% if loop.index0 % COLUMN_NUMBER === 0 %&#125;&lt;div class=&quot;post-gallery-row&quot;&gt;&#123;% endif %&#125; &#123;###原始代码开始 &lt;a class=&quot;post-gallery-img fancybox&quot; href=&quot;&#123;&#123; url_for(photo) &#125;&#125;&quot; rel=&quot;gallery_&#123;&#123; post._id &#125;&#125;&quot; 原始代码结束###&#125; &lt;a class=&quot;post-gallery-img&quot; data-fancybox=&quot;gallery_&#123;&#123; post._id &#125;&#125;&quot; href=&quot;&#123;&#123; url_for(photo) &#125;&#125;!gumini&quot; itemscope itemtype=&quot;http://schema.org/ImageObject&quot; itemprop=&quot;url&quot;&gt; &lt;img src=&quot;&#123;&#123; url_for(photo) &#125;&#125;!guresize&quot; itemprop=&quot;contentUrl&quot;/&gt; &lt;/a&gt; &#123;% if loop.index0 % COLUMN_NUMBER === 2 %&#125;&lt;/div&gt;&#123;% endif %&#125; &#123;% endfor %&#125; &#123;# Append end tag for `post-gallery-row` when (photos size mod COLUMN_NUMBER) is less than COLUMN_NUMBER #&#125; &#123;% if post.photos.length % COLUMN_NUMBER &gt; 0 %&#125;&lt;/div&gt;&#123;% endif %&#125;&lt;/div&gt; &#123;% endif %&#125; /next/source/js/src/utils.js找到如下代码修改 123456789101112131415161718192021222324252627282930313233343536373839/*** Wrap images with fancybox support.*/wrapImageWithFancyBox: function () &#123;$(&apos;.content img&apos;) .not(&apos;[hidden]&apos;) .not(&apos;.group-picture img, .post-gallery img&apos;) .each(function () &#123; var $image = $(this); /*var imageTitle = $image.attr(&apos;title&apos;);原始*/ var $imageWrapLink = $image.parent(&apos;a&apos;); if ($imageWrapLink.size() &lt; 1) &#123; var imageLink = ($image.attr(&apos;data-original&apos;)) ? this.getAttribute(&apos;data-original&apos;) : this.getAttribute(&apos;src&apos;); $imageWrapLink = $image.wrap(&apos;&lt;a href=&quot;&apos; + imageLink + &apos;&quot;&gt;&lt;/a&gt;&apos;).parent(&apos;a&apos;); &#125; // $imageWrapLink.addClass(&apos;fancybox fancybox.image&apos;); // $imageWrapLink.attr(&apos;rel&apos;, &apos;group&apos;); // // if (imageTitle) &#123; // $imageWrapLink.append(&apos;&lt;p class=&quot;image-caption&quot;&gt;&apos; + imageTitle + &apos;&lt;/p&gt;&apos;); // // //make sure img title tag will show correctly in fancybox // $imageWrapLink.attr(&apos;title&apos;, imageTitle); if (!$imageWrapLink.attr(&apos;data-fancybox&apos;)) &#123; $imageWrapLink.attr(&apos;data-fancybox&apos;, &apos;group&apos;); &#125; &#125;); // $(&apos;.fancybox&apos;).fancybox(&#123; // helpers: &#123; // overlay: &#123; // locked: false // &#125; // &#125; $(&apos;[data-fancybox]&apos;).fancybox(&#123; &#125;);&#125;, 至此修改初步完成，后续如果需要添加，再按照上文给出的链接进行修改，本文到这一步已经够了，后面考虑自动加载云端图片文件！！！🚩🚩🚩","categories":[{"name":"技术堆栈","slug":"技术堆栈","permalink":"http://maxiaoyuelun.github.io/categories/技术堆栈/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"http://maxiaoyuelun.github.io/tags/hexo/"},{"name":"next","slug":"next","permalink":"http://maxiaoyuelun.github.io/tags/next/"}]},{"title":"hexo主题开发经验之谈","slug":"hexo主题开发经验之谈","date":"2018-04-17T02:58:28.000Z","updated":"2018-04-17T02:59:50.794Z","comments":true,"path":"2018/04/17/hexo主题开发经验之谈/","link":"","permalink":"http://maxiaoyuelun.github.io/2018/04/17/hexo主题开发经验之谈/","excerpt":"hexo主题开发经验之谈 hexo主题开发指南","text":"hexo主题开发经验之谈 hexo主题开发指南","categories":[{"name":"技术堆栈","slug":"技术堆栈","permalink":"http://maxiaoyuelun.github.io/categories/技术堆栈/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"http://maxiaoyuelun.github.io/tags/hexo/"}]},{"title":"Intellij_idea激活","slug":"Intellij-idea激活","date":"2018-04-17T01:45:35.000Z","updated":"2018-04-17T02:28:10.999Z","comments":true,"path":"2018/04/17/Intellij-idea激活/","link":"","permalink":"http://maxiaoyuelun.github.io/2018/04/17/Intellij-idea激活/","excerpt":"链接在此：IntelliJ IDEA 注册码 学生可免费申请使用：学生授权申请方式","text":"链接在此：IntelliJ IDEA 注册码 学生可免费申请使用：学生授权申请方式","categories":[{"name":"软件工具","slug":"软件工具","permalink":"http://maxiaoyuelun.github.io/categories/软件工具/"}],"tags":[{"name":"Intellij Idea","slug":"Intellij-Idea","permalink":"http://maxiaoyuelun.github.io/tags/Intellij-Idea/"}]},{"title":"hexo主题prince","slug":"hexo主题prince","date":"2018-04-16T08:15:50.000Z","updated":"2018-04-17T01:59:22.561Z","comments":true,"path":"2018/04/16/hexo主题prince/","link":"","permalink":"http://maxiaoyuelun.github.io/2018/04/16/hexo主题prince/","excerpt":"推荐一个hexo主题 链接在此：hexo-theme-prince","text":"推荐一个hexo主题 链接在此：hexo-theme-prince","categories":[{"name":"软件工具","slug":"软件工具","permalink":"http://maxiaoyuelun.github.io/categories/软件工具/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"http://maxiaoyuelun.github.io/tags/hexo/"}]},{"title":"hexo文章推荐","slug":"hexo文章推荐","date":"2018-04-16T07:49:48.000Z","updated":"2018-04-17T01:59:01.503Z","comments":true,"path":"2018/04/16/hexo文章推荐/","link":"","permalink":"http://maxiaoyuelun.github.io/2018/04/16/hexo文章推荐/","excerpt":"hexo跨博客文章推荐插件 链接在此：hexo-recommended-posts","text":"hexo跨博客文章推荐插件 链接在此：hexo-recommended-posts","categories":[{"name":"软件工具","slug":"软件工具","permalink":"http://maxiaoyuelun.github.io/categories/软件工具/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"http://maxiaoyuelun.github.io/tags/hexo/"}]},{"title":"next豆瓣插件","slug":"next豆瓣插件","date":"2018-04-16T07:08:57.000Z","updated":"2018-04-17T05:00:58.637Z","comments":true,"path":"2018/04/16/next豆瓣插件/","link":"","permalink":"http://maxiaoyuelun.github.io/2018/04/16/next豆瓣插件/","excerpt":"推荐一个使用插件将豆瓣电影、读书和游戏自动部署到自己的github博客上。 链接在此：hexo-douban","text":"推荐一个使用插件将豆瓣电影、读书和游戏自动部署到自己的github博客上。 链接在此：hexo-douban","categories":[{"name":"软件工具","slug":"软件工具","permalink":"http://maxiaoyuelun.github.io/categories/软件工具/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"http://maxiaoyuelun.github.io/tags/hexo/"},{"name":"next","slug":"next","permalink":"http://maxiaoyuelun.github.io/tags/next/"}]},{"title":"windows安装pytorch","slug":"windows安装pytorch","date":"2018-04-05T04:40:15.000Z","updated":"2018-04-05T05:06:37.601Z","comments":true,"path":"2018/04/05/windows安装pytorch/","link":"","permalink":"http://maxiaoyuelun.github.io/2018/04/05/windows安装pytorch/","excerpt":"江湖传言，tensorflow适合工业，pytorch适合科研，所以，来一波呗","text":"江湖传言，tensorflow适合工业，pytorch适合科研，所以，来一波呗 参考资料 Windows下安装PyTorch0.3.0","categories":[],"tags":[]},{"title":"Love Like Magic","slug":"Love-Like-Magic","date":"2018-03-27T10:41:01.000Z","updated":"2019-03-13T14:39:24.968Z","comments":true,"path":"2018/03/27/Love-Like-Magic/","link":"","permalink":"http://maxiaoyuelun.github.io/2018/03/27/Love-Like-Magic/","excerpt":"翻到这么首歌，还不错！！！","text":"翻到这么首歌，还不错！！！","categories":[{"name":"音乐之声","slug":"音乐之声","permalink":"http://maxiaoyuelun.github.io/categories/音乐之声/"}],"tags":[{"name":"张国荣","slug":"张国荣","permalink":"http://maxiaoyuelun.github.io/tags/张国荣/"}]},{"title":"朝鲜战争基本常识问答","slug":"朝鲜战争基本常识问答","date":"2018-03-26T05:08:44.000Z","updated":"2018-03-26T05:23:36.163Z","comments":true,"path":"2018/03/26/朝鲜战争基本常识问答/","link":"","permalink":"http://maxiaoyuelun.github.io/2018/03/26/朝鲜战争基本常识问答/","excerpt":"一、三八线是条什么线？它是“国际公认”的朝鲜半岛南北政权的政治分治线吗？答：非也！三八线是1945年8月由美国提出，以朝鲜国土北纬三十八度线作为美、苏两国对日军事行动和受降范围的临时分界线，三八线以北为苏军接受日军投降区，以南为美军受降区。三八线是一条受降临时分界线，仅此而已。说这条线是“国际公认”的朝鲜南北的政治分治线，没有任何国际法依据，而且不为朝鲜半岛南北双方政权所承认。 换言之，三八线具有约束苏美军队的意义，却没有约束朝鲜半岛南北双方的意义。中国领导人决策出兵参战的前提是“美国军队越过三八线”，而不是“韩国军队越过三八线”，这是原因之一。而美国军队率先越过三八线，是打破这个约束的始作俑者。","text":"一、三八线是条什么线？它是“国际公认”的朝鲜半岛南北政权的政治分治线吗？答：非也！三八线是1945年8月由美国提出，以朝鲜国土北纬三十八度线作为美、苏两国对日军事行动和受降范围的临时分界线，三八线以北为苏军接受日军投降区，以南为美军受降区。三八线是一条受降临时分界线，仅此而已。说这条线是“国际公认”的朝鲜南北的政治分治线，没有任何国际法依据，而且不为朝鲜半岛南北双方政权所承认。 换言之，三八线具有约束苏美军队的意义，却没有约束朝鲜半岛南北双方的意义。中国领导人决策出兵参战的前提是“美国军队越过三八线”，而不是“韩国军队越过三八线”，这是原因之一。而美国军队率先越过三八线，是打破这个约束的始作俑者。 二、朝鲜战争是北方侵略了南方吗？答：朝鲜战争是一场以民族统一为目的的内战，没有“侵略”不“侵略”之分。正如中国国共内战既不能说国民党侵略了共产党，也不能说共产党侵略了国民党，美国内战既不能说南方侵略了北方，也不能说北方侵略了南方一样。美国军队直接介入朝鲜内战，才是名符其实的“侵略”行为。 三、联合国是否有权利干预朝鲜内战？答：没有权利。联合国是一个国际组织，不是“世界政府”。与一个国家的政府有着本质的区别，它没有干预一个国家内部事务权利和依据。实际上，《联合国宪章》就明确规定：“不得干涉本质上属于任何国家内部管辖之事件”。联合国安理会关于武装干预朝鲜的决议是在安理会常任理事国有缺席，而美国军队已经先斩后奏率先介入的情况下作出的，开了一个毫无道理的先例，是一个非法决议。所以从朝鲜战争以后，再也没有“联合国军”名义的军事行动，就是这种方式已为历史进程所否定的反证。 尤其需要特别说明的是，朝鲜南北方政权都没有加入联合国，都不是联合国成员国，联合国出兵干预，不伦不类，无根无基，没有任何法理依据，本身就是对《联合国宪章》的粗暴践踏。 四、“联合国军”是一支维持和平部队吗？答：不是！“联合国维持和平行动”的概念产生于朝鲜战争之后，而且有其特定涵义和规范。联合国成立之时，就设有军事观察员，并逐步形成了维和部队，在1956年建立第一支联合国维和部队时，联合国秘书长哈马舍尔德曾经提出了著名的维和三原则： 第一，维和行动不得妨碍有关当事国之权利、要求和立场，需保持中立，不得偏袒冲突中的任何一方； 第二，维和行动必须征得有关各方的一致同意才能实施； 第三，维和部队只携带轻武器，只有自卫时方可使用武力。 人们把这三项原则概括为中立的原则、同意的原则和自卫的原则，并称之为哈马舍尔德三原则。哈马合尔德三原则是联合国传统维和行动的基本准则。80年代未期以前的维和行动，都是以哈马舍尔德三原则为基本依据的。哈马吉尔德三原则对联合国近四十年的维和行动具有重要的指导意义。秘书长啥马舍尔德之所以就联合国维和行动提出这三项基本原则，主要是因为联合国建立时制定的《联合国宪章》没有关于维和行动的规定。以哈马舍尔德原则为基础，传统维和行动大体遵循以下一些基本原则： 1.维和行动由联合国安理会授权和组织．特殊情况下由联合国大会组织，具体由秘书长控制和指挥。 2.维和行动必须征得冲突各方政府以及直接有关的各方的同意。具体讲，维和部队的规模、进驻的起始和结束时间、进驻的地域等部必须征得有关各方的一致同意特别是进驻国的同意。 3.维和部队的军事人员由会员国自愿提供。军事观察员不携带武器、维和部队携带轻型防御性武器。 4.维和部队除自卫外，不得使用武力。 5.严守中立。不能支待一方反对另一方。 6.不得干涉驻在国内部事务，不能介入内部冲突。 “联合国军”的决策和行动不符合其中任何一条。 五、美国政府只有解决朝鲜问题而没有染指中国的意图吗？答：中国有句老话：察其言，观其行。美国军队事实上已经侵犯了中国领土（台湾），介入了中国内战（出兵台湾即介入中国内战），而且其地面武装力量已经越过三八线直趋中国国门，“联合国军”总司令已经提出：“无论如何，如果我们不去利用鸭绿江的自然防御功能，那么这种西部低洼，东中部崎岖的地形是不适于我们的防御体系的。这条江是整个朝鲜绝无仅有的天然屏障，但如果仅仅依赖于此作为唯一的天然防线，则无论是军事还是政治的防御能力都不足以维护韩国的领土完整。……只是占领鸭绿江以南地区旋即停止推进，我们根本就不可能找到一个可有效控制所有通向北朝鲜的路径的位置”。 而同时期，美国空军的炸弹已经落到中国的城市和乡村。这已经不是意图而是实实在在的事实，这在任何一个国家包括美利坚合众国自己，都绝不会视为一种友好表示而只能认为是不怀好意的侵略行动。 美国前国务卿亨利·基辛格先生也曾在其著作《大外交》中指出：“毛泽东有理由认为，如果他不在朝鲜阻挡美国，他或许会在中国领土上与美军交战。最起码，他没有理由去作出相反的结论。” 1989年5月5日，美国军事历史学家约翰·托兰（著有《漫长的战斗》）在中国人民解放军军事科学院与他的中国同行们交流时说：“中国出兵朝鲜是出于国家利益的考虑，是不得已的。如果苏联打到墨西哥，那么美国在5分钟之内就会决定出兵。” 六、中国军队出兵援朝的决策真正原因是什么？答：保家卫国！中国人民志愿军入朝参战，是在中国领土主权受到侵犯，“联合国军”打到鸭绿江边，战火已烧到中国边境城市的情况下发生的，是侵略凶焰已经直接威胁到我们的国家安全环境的情况下发生的，是在中国政府再三警告言之有预有理有节先礼后兵而侵略者仍然置若罔闻肆无忌惮得寸进尺一意孤行的情况下发生的。严肃一点的美国学者或军人──既或是与中国军队交过手的美国军人，都不否认中国军队出兵援朝的合理性。 其次，对盟友和战友危难之际履行一个社会主义大国的国际主义义务也是一个重要原因，弱者对付强者最有效的武器就是自身的团结与互助，一个负责任的社会主义大国首先应该对自己的战友和盟友负责！受人涓埃之恩，必当涌泉相报，这是中华民族代代传承的道义火矩和优良传统，中朝两国人民在过去反对帝国主义侵略的共同斗争曾经相濡以沫相互支援共挽民族危亡，中国人民革命斗争的旗帜也浸染着朝鲜志士的鲜血，共同的境遇共同的命运使中朝两大民族同病相怜，共同的利益共同的愿望使中朝两国人民生死相依。可以说，没有任何两个毗邻民族能够比中朝两大民族更能深刻体验和感受唇亡齿寒之迫，户破堂危之急。勿需对历史作太久远的回顾，灭亡了朝鲜的日本得寸进尺染指中国最终迫使中华民族发出“最后的吼声”，对中国人民就足具史鉴来者之功效。 七、中国军队出兵援朝延缓了解放台湾吗？答：这种说法颠倒了因果关系，中国军队出兵援朝是在美国军队进占台湾之后，阻碍中国人民完成祖国统一大业的是美国军队。这个因果关系应该不难分清。 八、朝鲜民主主义人民共和国经济状况不佳，战后发展远不如大韩民国，是否证实中国人民志愿军入朝参战是错误的？答：没有道理。打个比方，你向银行货款购房，银行是否因此就要对你终生的行为和经济状况负责？你购了房，银行得了利，你后来又把房卖了，银行是否必须为你的卖房行为负责？或者再打个比方，你见义勇为救了一个人，是否意味着你必须对此人此后所有行为负责？更何况，朝鲜民主主义人民共和国在安全环境受到了严重威胁，生存环境受到了严重制约的情况下，取得举世瞩目的建设成就，朝鲜人民既或在经济上遭受了严重困难的日子里仍然享受着令世人羡慕的各种基本福利制度，劳动群众的基本生存权利得到了相当切实有效的保障，这也是不容忽视的事实！ 九、有人说：“中国军队出兵援朝有合理性，但打过三八线就是侵略。”这种说法有无道理？答：没有道理。 第一，来而不往非礼也，寇能往，我亦能往！ 第二，除恶务尽，第二次世界大战中，苏美英军队直捣柏林为中国军队作出了极好的榜样。至于没有达到这个目的，那是中国军队本事不够，家伙也不行，与该不该打过去没有关系！ 第三，三八线的本质涵义是只有约束美苏的意义，而无约束其它人的意义。 十、抗美援朝延缓了中国的国际交往，延缓了经济建设和对外开放。答：此问与第七问一样，属因果颠倒。再者，战争胜利鼓舞了人民斗志，在抗美援朝战争期间，中国完成了国民经济恢复，在近代史上，第一次将军费降到了国家财政支出的一半以下，同时还完成了清匪反霸，消灭百万国民党残余部队，进军西藏完成祖国大陆统一的壮举。应该说抗美援朝促进了新中国的建设。至于对外开放交流，抗美援朝战争为三十年后的改革开放奠定了安全环境。没有志愿军将士用枪炮与霸权实现的交流，就没有后来在平等基础上的和平对话。没有“打”开路，就没有“和”临头！对强权者，敢战，方能言和！ 十一、有人将德国分治与朝鲜半岛分裂相提并论，有无法理依据？答：没有！德国是第二次世界大战的战败国，不光要享受盟国分区占领的待遇，还要接受盟国的强行管制。1945年6月5日，苏美英法在柏林签署了击败德国、对德分区占领和管制德国的三个宣言，决定了德国彻底的非武装化和非军事化的问题，明确了盟国有权在德国任何部分或全部驻扎军队及设置民事机构，行使最高权力。同是也明确了盟国可以采取他们认为对于和平与安全所需要的步骤。 而朝鲜是日本帝国主义的殖民地，是帝国主义侵略战争的受害者而不是加害者，朝鲜人民在反法西斯战争胜利后理应获得独立自由和解放——这也是开罗宣言中包括美国在内的各大国为之作出的承诺，而不是占领、约束和强行管制，更不是再次受到侵略战争的戗害！ 十二、有人称，朝鲜战争中苏联占了大便宜，因而中国出兵参战是错误的，此话似乎有理？答：这是一个低智商问题，与当今时髦的市场经济理念格格不入——这与做生意的道理一样，大本钱挣大钱，小本钱挣小钱，不能因为有大本钱的挣了大钱，只有小本钱的连小钱也不挣了——更何况挣来的还未必是小钱。比如第二次世界大战中国出了大力，占的便宜不大，甚至还被人出卖权益，而美国人却占了大便宜，那么是否可以认为中国抗战也是错误的？ 十三、美国即然出兵占领了中国台湾，为什么中国不出兵台湾而出兵朝鲜？答：又是一个低智商问题。谁规定了别人打我头我也只能打他头的道理？德国轰炸英国的脑袋伦敦，邱吉尔却在打量人家“柔软的下腹部”。同理，美国人卡中国人脖子，中国人就朝踢美国人的裤裆狠命一脚——如此而已！ 十四、有人占了中国的外蒙古，中国为什么不出兵？答：新中国接过的是国民党反动政府的破产家业，同时也承担了国民党反动政府留下的历史债务，而且也尽其可能清理得足够干净了。新中国必须为已经取得的国家利益以及能够争取到的国家权益承担全责，世人没有理由要求他们能够清偿所有的历史债务——尤其是扔下这个破产家业再也不承但任何实际责任的前朝败家子！ 十五、中国军队在朝鲜战争中伤亡大于美军，所以美军是胜利者！答：不胜其理！即或此说前提成立，推论仍属荒谬。评价战争胜负的首要前提是战争的目的达到与否及达到的程度，而不仅仅是人头账。苏德战争德军伤亡低于苏军，是否可以认为德军是胜利者？越南战争越南军民伤亡200～300万，美军伤亡30余万，美国人是否敢说自己是胜利者？ 另外，中朝军队面对的是整个“联合国军”和韩军，做算术题时忽略这些被加数，是一种难以原谅的选择性遗忘！ 十六、毛泽东送儿子上前线是镀金。答：既然这是个天大的好事儿，将来再有战争或抗洪救灾之类的好事情时，建议首先安排出此语者自己或其儿女到炮火下或洪水中去镀它一金，或烈火焚身，或洪水没顶？新中国决定出兵入朝参战时，连许多身经百战的将帅都没有把握一定胜利，新中国领导人甚至还准备应付美国军队进入中国——“就当中国革命晚胜利几年”！如果有人硬要说毛泽东此时送子上前线是去“镀金”，那不是卯足了劲儿在夸毛泽东料事如神，硬把毛泽东再往神坛上推么？ 再者，如果毛泽东不送儿子上前线呢？你是否能够接受而不再赘言？你又会不会诅咒毛泽东让别人的孩子当炮灰，自家儿子在家躲清闲？横竖毛泽东都是一肚子私欲？而毛岸英就因为有毛泽东这个老子，横竖都该死，——哪怕他是为国捐躯？ 这还有理可讲么？不是天赋人权么？不是上帝面前人人平等么？哪儿去啦？ 十七、为什么要用志愿军名义，是因为中国人胆小不敢向美国宣战！答：这是幼儿智力问题且有睁眼瞎之嫌！美利坚合众国正规军劈头盖脑挨了一顶臭揍，明知出招者乃货真价实训练有素的中国正规八路，却仍然忍气吞声不敢堂而皇之宣战接招，不光是胆小，且已气短。至于中国人为何使用志愿军名义，那是中国人民高兴中国人民愿意，中国人民乐意在没有官方名义的前提下充分表达自己的“自由意志”。 十八、中国军队有苏联撑腰，胜之不武！答：中国军队将美国军队从鸭绿江赶回三八线，基本上凭的是手中的“万国牌武器”。苏式武器是运动战后期四五次战役才开始陆续装备部队，苏联空军只掩护清川江以北部分交通线，且大规模参战是在五一年夏季以后，而此时战场大格局已经奠定。 另外，国民党军队有美国家伙撑腰还有力量优势，仍然败到了台湾？是不是败之很武？ 顺便说一句，美国军队有联合国旗号壮胆，却被迫与人议和，与之对等议和者还是一个根本不被联合国承认的国家，实在是和之无脸！ 十九、中国军队打人海战术，胜之不武！答：战争是一种资源较量。各打各的资源，穷人的资源是人，富人的资源是钱──钱能买来“火海战术”。中国军队在“火海战术”下还能集中和机动优势兵力打歼灭战，是战争指导艺术高超的体现。中国军队战略上是“人海战术”，战术上是“小兵群战术”，对此，前美第八集团军司令官马克斯韦尔·泰勒将军对中国军队有极高评价。 二十、在今天这个和平发展的新时代应该多讲如何避免战争，而不应津津乐道于过去的战争。答：同意！所以说“好战必亡”的道理应该多讲给战争能力极其强大而自身受战争戗害极少的国家听。“忘战必倾”的道理应该多讲给战争能力不够强大且自身受战争戗害极多的国家听。具体地说，军事机器最强大而自身受战争戗害极少的美利坚合众国不应津津乐道过去的战争，而要多听听“好战必亡”的道理；军事机器不够强大且自身受战争戗害太多的中华人民共和国需要多多回顾过去的战争，且须多念念“忘战必倾”的道理。这样才有可能避免战争再起。 名词解释：朝鲜战争：1950年6月—1953年7月，是朝鲜半岛上的朝韩之间的民族内战。 抗美援朝：1950年10月—1953年7月，是中国人民支援朝鲜人民抗击美国侵略的群众性运动。","categories":[{"name":"闲话桑麻","slug":"闲话桑麻","permalink":"http://maxiaoyuelun.github.io/categories/闲话桑麻/"}],"tags":[{"name":"转载","slug":"转载","permalink":"http://maxiaoyuelun.github.io/tags/转载/"}]},{"title":"说话","slug":"说话","date":"2018-03-25T11:52:46.000Z","updated":"2018-04-28T07:39:57.875Z","comments":true,"path":"2018/03/25/说话/","link":"","permalink":"http://maxiaoyuelun.github.io/2018/03/25/说话/","excerpt":"Welcome to my blog, enter password to read.","text":"Welcome to my blog, enter password to read. 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","categories":[{"name":"闲话桑麻","slug":"闲话桑麻","permalink":"http://maxiaoyuelun.github.io/categories/闲话桑麻/"}],"tags":[]},{"title":"强制删除工具Geek Uninstaller","slug":"强制删除工具Geek-Uninstaller","date":"2018-03-22T02:45:08.000Z","updated":"2018-03-25T12:02:26.661Z","comments":true,"path":"2018/03/22/强制删除工具Geek-Uninstaller/","link":"","permalink":"http://maxiaoyuelun.github.io/2018/03/22/强制删除工具Geek-Uninstaller/","excerpt":"介绍一个强力删除windows软件的小工具，只有2M大小。官方网址在此 经测试，QQ拼音输入法还是不能完全删除，这锅得QQ来背。太流氓！！！不过这款软件还是很好用！ 参考资料 2M强力“卸载神器”，从此对流氓软件说“不”","text":"介绍一个强力删除windows软件的小工具，只有2M大小。官方网址在此 经测试，QQ拼音输入法还是不能完全删除，这锅得QQ来背。太流氓！！！不过这款软件还是很好用！ 参考资料 2M强力“卸载神器”，从此对流氓软件说“不”","categories":[{"name":"软件工具","slug":"软件工具","permalink":"http://maxiaoyuelun.github.io/categories/软件工具/"}],"tags":[]},{"title":"Jackie Chan 成龙","slug":"Jackie-Chan-成龙","date":"2018-03-19T14:37:16.000Z","updated":"2018-05-05T13:19:47.030Z","comments":true,"path":"2018/03/19/Jackie-Chan-成龙/","link":"","permalink":"http://maxiaoyuelun.github.io/2018/03/19/Jackie-Chan-成龙/","excerpt":"想开篇来聊一聊成龙。 读了这么多书，总想着写东西首先得规划怎么写，采用什么框架写，才不至于流水账形式。 对于成龙来说，看着他的电影长大，喜欢李连杰的飘逸，可惜李连杰老了，再不复当年之勇，光环慢慢退却；而成龙，还时常活跃在视线中，他还是那个能打能给人带来欢乐的影人，虽然偶尔也发现他也是个六十多岁的老头了，但对他的欣赏仍旧没有改变，反倒随着时间的推移，越来越爱。为了了解他，特地去知乎上搜了：如何评价成龙？从众网友的文字中不难发现，大家都很爱成龙，他超越了同时代的其他影人，成为了旗帜，成了龙。","text":"想开篇来聊一聊成龙。 读了这么多书，总想着写东西首先得规划怎么写，采用什么框架写，才不至于流水账形式。 对于成龙来说，看着他的电影长大，喜欢李连杰的飘逸，可惜李连杰老了，再不复当年之勇，光环慢慢退却；而成龙，还时常活跃在视线中，他还是那个能打能给人带来欢乐的影人，虽然偶尔也发现他也是个六十多岁的老头了，但对他的欣赏仍旧没有改变，反倒随着时间的推移，越来越爱。为了了解他，特地去知乎上搜了：如何评价成龙？从众网友的文字中不难发现，大家都很爱成龙，他超越了同时代的其他影人，成为了旗帜，成了龙。 这首歌，是我比较喜欢的大哥的一首歌，歌词平淡，很生活化。其实在众多华语音乐人来说，成龙的标签很明显，这跟他的从师经历有很大的关系。师从京剧名家，京剧表演已经深深烙印在他的灵魂里，无论拍戏还是唱歌，都能发现京剧对他的影响，他很好的把传统与现代结合，独树一帜。 这个B站链接有问题，可以直接点进去观看。终于可以了，用swf格式，就可以内嵌播放了。 这部电影揭示了成家班的特效制作，作为影人，成龙将成家班做到了专业化，这也是他走出去回来给自己带来的变化。","categories":[{"name":"闲话桑麻","slug":"闲话桑麻","permalink":"http://maxiaoyuelun.github.io/categories/闲话桑麻/"}],"tags":[{"name":"成龙","slug":"成龙","permalink":"http://maxiaoyuelun.github.io/tags/成龙/"}]},{"title":"教你用文件HASH特征码下载Torrent种子文件","slug":"教你用文件HASH特征码下载Torrent种子文件","date":"2018-03-17T13:20:33.000Z","updated":"2019-03-17T13:22:13.497Z","comments":true,"path":"2018/03/17/教你用文件HASH特征码下载Torrent种子文件/","link":"","permalink":"http://maxiaoyuelun.github.io/2018/03/17/教你用文件HASH特征码下载Torrent种子文件/","excerpt":"","text":"你需要一个HASH(特征码) 比如：8242fb388f8e56a0b6b405ba369c61cfe8c5bc42 在你HASH值前加上磁力链接前缀：magnet:?xt=urn:btih: 得到这样的Magnet link(磁力链接)：magnet:?xt=urn:btih:8242fb388f8e56a0b6b405ba369c61cfe8c5bc42 简单吧，你只需要有个HASH值就可以下载任何文件！ 复制到迅雷、BT等下载工具里下载吧。","categories":[{"name":"技术堆栈","slug":"技术堆栈","permalink":"http://maxiaoyuelun.github.io/categories/技术堆栈/"}],"tags":[{"name":"Torrent","slug":"Torrent","permalink":"http://maxiaoyuelun.github.io/tags/Torrent/"}]},{"title":"一人之下","slug":"一人之下","date":"2018-03-16T14:23:25.000Z","updated":"2018-04-15T07:16:31.095Z","comments":true,"path":"2018/03/16/一人之下/","link":"","permalink":"http://maxiaoyuelun.github.io/2018/03/16/一人之下/","excerpt":"国漫崛起时，最近被一部国漫《一人之下》实力圈粉，尤其喜欢剧内的各种方言配音，当然少不了各种人物角色歌曲，下面即是网易云的链接：","text":"国漫崛起时，最近被一部国漫《一人之下》实力圈粉，尤其喜欢剧内的各种方言配音，当然少不了各种人物角色歌曲，下面即是网易云的链接： 诸葛青","categories":[{"name":"音乐之声","slug":"音乐之声","permalink":"http://maxiaoyuelun.github.io/categories/音乐之声/"}],"tags":[{"name":"一人之下","slug":"一人之下","permalink":"http://maxiaoyuelun.github.io/tags/一人之下/"}]},{"title":"女朋友要带回家","slug":"女朋友要带回家","date":"2018-01-14T06:51:20.000Z","updated":"2018-05-05T13:20:33.509Z","comments":true,"path":"2018/01/14/女朋友要带回家/","link":"","permalink":"http://maxiaoyuelun.github.io/2018/01/14/女朋友要带回家/","excerpt":"这是昨晚翻B站突然听到的很老的歌，谭杰希的《女朋友要带回家》，还是一个小女生唱的，以前自己玩尤克里里也唱过，那还是刚学那会，现在这么老，唱这么苏的歌有点不好意思唱了，所以每次尽量选择励志的歌来学习，学了好久，至今还是扫弦君。。。大半夜听这么苏的歌很想拿起吉他啊。。。","text":"这是昨晚翻B站突然听到的很老的歌，谭杰希的《女朋友要带回家》，还是一个小女生唱的，以前自己玩尤克里里也唱过，那还是刚学那会，现在这么老，唱这么苏的歌有点不好意思唱了，所以每次尽量选择励志的歌来学习，学了好久，至今还是扫弦君。。。大半夜听这么苏的歌很想拿起吉他啊。。。","categories":[{"name":"音乐之声","slug":"音乐之声","permalink":"http://maxiaoyuelun.github.io/categories/音乐之声/"}],"tags":[{"name":"谭杰希","slug":"谭杰希","permalink":"http://maxiaoyuelun.github.io/tags/谭杰希/"},{"name":"郑湫泓","slug":"郑湫泓","permalink":"http://maxiaoyuelun.github.io/tags/郑湫泓/"}]},{"title":"RNN生成古诗","slug":"RNN生成古诗","date":"2018-01-07T12:11:38.000Z","updated":"2018-01-07T12:24:38.172Z","comments":true,"path":"2018/01/07/RNN生成古诗/","link":"","permalink":"http://maxiaoyuelun.github.io/2018/01/07/RNN生成古诗/","excerpt":"利用RNN生成古诗，看看生成的样子。 隐室令帆出水令，猎人宜道意初干。 鸣波太众岚彩禁，易郭香鸣栈堕风。 风竹出茏寒透匣，碧榛终乱异宫祠。 迷坛金石人难到，骏退多候快逐连。 千里战旗亭万匝，望烟川色耀光辉。 异人不敢传秘著，形骸情无念太平。","text":"利用RNN生成古诗，看看生成的样子。 隐室令帆出水令，猎人宜道意初干。 鸣波太众岚彩禁，易郭香鸣栈堕风。 风竹出茏寒透匣，碧榛终乱异宫祠。 迷坛金石人难到，骏退多候快逐连。 千里战旗亭万匝，望烟川色耀光辉。 异人不敢传秘著，形骸情无念太平。 参考资料","categories":[{"name":"技术堆栈","slug":"技术堆栈","permalink":"http://maxiaoyuelun.github.io/categories/技术堆栈/"}],"tags":[{"name":"tensorflow","slug":"tensorflow","permalink":"http://maxiaoyuelun.github.io/tags/tensorflow/"},{"name":"RNN","slug":"RNN","permalink":"http://maxiaoyuelun.github.io/tags/RNN/"}]},{"title":"关于微博图床","slug":"关于微博图床","date":"2018-01-06T13:30:07.000Z","updated":"2018-05-04T05:39:18.938Z","comments":true,"path":"2018/01/06/关于微博图床/","link":"","permalink":"http://maxiaoyuelun.github.io/2018/01/06/关于微博图床/","excerpt":"今天发现，上传到微博上的照片，即使客户端删除之后，服务器中还保存副本，链接依然有效，所以考虑到安全问题，有关个人信息的图片还是不要上传到微博上。","text":"今天发现，上传到微博上的照片，即使客户端删除之后，服务器中还保存副本，链接依然有效，所以考虑到安全问题，有关个人信息的图片还是不要上传到微博上。","categories":[{"name":"软件工具","slug":"软件工具","permalink":"http://maxiaoyuelun.github.io/categories/软件工具/"}],"tags":[{"name":"微博","slug":"微博","permalink":"http://maxiaoyuelun.github.io/tags/微博/"},{"name":"WeiBO","slug":"WeiBO","permalink":"http://maxiaoyuelun.github.io/tags/WeiBO/"},{"name":"图床","slug":"图床","permalink":"http://maxiaoyuelun.github.io/tags/图床/"}]},{"title":"晚婚","slug":"晚婚","date":"2017-12-29T05:03:20.000Z","updated":"2018-04-15T06:53:36.898Z","comments":true,"path":"2017/12/29/晚婚/","link":"","permalink":"http://maxiaoyuelun.github.io/2017/12/29/晚婚/","excerpt":"突然听到李宗盛的《晚婚》，感觉比江蕙的更好听，唱出了那种岁月沉淀，饱含沧桑。以前很喜欢李宗盛的歌，基本去KTV必点他的歌，这首歌也让我单曲循环了好久，此刻就在。","text":"突然听到李宗盛的《晚婚》，感觉比江蕙的更好听，唱出了那种岁月沉淀，饱含沧桑。以前很喜欢李宗盛的歌，基本去KTV必点他的歌，这首歌也让我单曲循环了好久，此刻就在。 (function(){var player = new DPlayer({\"container\":document.getElementById(\"dplayer3\"),\"video\":{\"url\":\"http://hc.yinyuetai.com/uploads/videos/common/253A015C7271945908E10EBCE654E07D.mp4\"}});window.dplayers||(window.dplayers=[]);window.dplayers.push(player);})() 大叔说：我从来不想独身，却有预感晚婚。快30的年头，这已经不是预感了。少不听李宗盛，听了他这么多年，越来越觉得他的词不经岁月打磨，很难到这个境界。他唱歌带吟带唱，像独白、诉说，又或低吟。往往令人情不自禁，所以，今天分享这首，听歌的人每个人感受都不一样，歌者需要的就是拨动人的心弦。 岁月如歌，年华残酷。","categories":[{"name":"音乐之声","slug":"音乐之声","permalink":"http://maxiaoyuelun.github.io/categories/音乐之声/"}],"tags":[{"name":"李宗盛","slug":"李宗盛","permalink":"http://maxiaoyuelun.github.io/tags/李宗盛/"}]},{"title":"摄影笔记手机摄影入门","slug":"摄影笔记手机摄影入门","date":"2017-12-22T07:48:59.000Z","updated":"2018-01-04T03:56:36.453Z","comments":true,"path":"2017/12/22/摄影笔记手机摄影入门/","link":"","permalink":"http://maxiaoyuelun.github.io/2017/12/22/摄影笔记手机摄影入门/","excerpt":"这是摘选自摄影笔记的内容，在自己的博客中留存。","text":"这是摘选自摄影笔记的内容，在自己的博客中留存。 手机摄影入门","categories":[{"name":"琴棋书画","slug":"琴棋书画","permalink":"http://maxiaoyuelun.github.io/categories/琴棋书画/"}],"tags":[{"name":"摄影","slug":"摄影","permalink":"http://maxiaoyuelun.github.io/tags/摄影/"}]},{"title":"月供是怎么回事","slug":"转月供是怎么回事","date":"2017-12-06T05:17:06.000Z","updated":"2017-12-06T15:35:31.026Z","comments":true,"path":"2017/12/06/转月供是怎么回事/","link":"","permalink":"http://maxiaoyuelun.github.io/2017/12/06/转月供是怎么回事/","excerpt":"买房、买车，人生大事，抛开全款，你了解月供几何？","text":"买房、买车，人生大事，抛开全款，你了解月供几何？ 参考文献 月供是怎么回事？","categories":[{"name":"技术堆栈","slug":"技术堆栈","permalink":"http://maxiaoyuelun.github.io/categories/技术堆栈/"}],"tags":[{"name":"转载","slug":"转载","permalink":"http://maxiaoyuelun.github.io/tags/转载/"}]},{"title":"转傅立叶白话分析","slug":"转傅立叶白话分析","date":"2017-12-05T08:50:01.000Z","updated":"2017-12-06T05:17:10.782Z","comments":true,"path":"2017/12/05/转傅立叶白话分析/","link":"","permalink":"http://maxiaoyuelun.github.io/2017/12/05/转傅立叶白话分析/","excerpt":"本文以简明的语言向读者阐述了傅立叶分析的基本原理，适合入门。","text":"本文以简明的语言向读者阐述了傅立叶分析的基本原理，适合入门。 参考文献 傅里叶分析之掐死教程（完整版）更新于2014.06.06","categories":[{"name":"技术堆栈","slug":"技术堆栈","permalink":"http://maxiaoyuelun.github.io/categories/技术堆栈/"}],"tags":[{"name":"转载","slug":"转载","permalink":"http://maxiaoyuelun.github.io/tags/转载/"},{"name":"傅立叶","slug":"傅立叶","permalink":"http://maxiaoyuelun.github.io/tags/傅立叶/"}]},{"title":"转从LeNet到DenseNet","slug":"转从LeNet到DenseNet","date":"2017-12-05T08:46:30.000Z","updated":"2017-12-05T08:49:08.804Z","comments":true,"path":"2017/12/05/转从LeNet到DenseNet/","link":"","permalink":"http://maxiaoyuelun.github.io/2017/12/05/转从LeNet到DenseNet/","excerpt":"本文详细介绍了CNN各网络的发展史，值得一读。","text":"本文详细介绍了CNN各网络的发展史，值得一读。 参考文献 从LeNet-5到DenseNet","categories":[{"name":"技术堆栈","slug":"技术堆栈","permalink":"http://maxiaoyuelun.github.io/categories/技术堆栈/"}],"tags":[{"name":"转载","slug":"转载","permalink":"http://maxiaoyuelun.github.io/tags/转载/"}]},{"title":"南京美食记","slug":"南京美食记","date":"2017-12-05T06:26:23.000Z","updated":"2017-12-05T08:46:34.547Z","comments":true,"path":"2017/12/05/南京美食记/","link":"","permalink":"http://maxiaoyuelun.github.io/2017/12/05/南京美食记/","excerpt":"平时无聊，总想着去哪吃，会看到一些网友推荐，过后再想吃的时候又忘了，所以，特开此文广记南京美食，采取完成任务列表模式，当然，现在一家都没吃过，开篇啦！！！","text":"平时无聊，总想着去哪吃，会看到一些网友推荐，过后再想吃的时候又忘了，所以，特开此文广记南京美食，采取完成任务列表模式，当然，现在一家都没吃过，开篇啦！！！ 正餐 尤广记牛杂王 大蔬无界 泽锅草原牛肉火锅 米桃餐厅 饮品 甜荟 ​","categories":[{"name":"闲话桑麻","slug":"闲话桑麻","permalink":"http://maxiaoyuelun.github.io/categories/闲话桑麻/"}],"tags":[{"name":"美食","slug":"美食","permalink":"http://maxiaoyuelun.github.io/tags/美食/"},{"name":"南京","slug":"南京","permalink":"http://maxiaoyuelun.github.io/tags/南京/"}]},{"title":"牛排常识","slug":"牛排常识","date":"2017-12-04T12:54:25.000Z","updated":"2017-12-05T06:26:40.219Z","comments":true,"path":"2017/12/04/牛排常识/","link":"","permalink":"http://maxiaoyuelun.github.io/2017/12/04/牛排常识/","excerpt":"常听别人说起某某某牛排，那么各种牛排的区别是什么，本博文假他人之手娓娓道来。","text":"常听别人说起某某某牛排，那么各种牛排的区别是什么，本博文假他人之手娓娓道来。 先来一张我大蔚蓝海岸尼斯柠檬节的神牛镇题 法国人虽然没有西班牙人对牛如此有感情把牛当成国家图腾（法兰西喜欢大公鸡+ +), 但是对于个个吃货的法国来说牛排和牛肉简直就是人生活下去的动力之一。所以在吃牛上法国的讲究都是世界牛肉研究的领头羊。在做牛排这事上还是得看法国人的，所以基本牛肉在牛身上的位置专业单词都是法语基础，英语的单词都是直接引用法语词汇换成英语发音而已。下文有些专业单词我就直接用法语写了。 只是牛排的话小牛肉veau 是最好的牛排食材既兼顾鲜嫩多汁而且肉的弹性也非常完美，但是牛肉的做法十分复杂，根据肉质不同用法也不尽相同。 在硕士一年级修味嗅觉分析的时候专门研究过牛排的口感和味道不同，还写了一篇论文。 把当时的论文用图先放出来，文字的话看完今晚的世界杯翻译过来 : D 世界杯看完了，意大利万岁，我又赢了一顿日本料理 : D 在讨论味道的时候不先讨论牛的品种和产地都是耍流氓，我的论文第一部分就是对各个AOC产地保护的法国牛种的讨论和确定它们各自的特点。 这些都是被欧盟承认的法国产区保护的独特牛种，其中最后一种白色的charolaise 白牛肉质最为鲜美，在广阔的特种牧草放牧长大，并且本身肉质就以肉内血脂细腻出名。是在世界范围内都是很出名不可多得的高大上牛肉。 好漂亮的牛牛，么么嗒 :》 其他的高品质牛肉还有人尽皆知的日本和牛，澳洲牛肉，匈牙利牛肉等等，这些牛肉某些部位脂肪肌肉比例搭配完美直接sashimi 是最好的选择，牛排浪费了。 比如这道法国牛肉名菜：tartare du boeuf。 也是被各种排名文章和传说中的仰望星空派一样放在绝对不要点的外国菜里面，排名还挺高。 有一次在巴黎歌剧院附近的HIPOPOTAMUS 吃饭，旁边两个中国情侣游客看到法国人点的这个，立马眼睛瞪得牛大开始议论：哎呀，妈呀，生肉哎，那个中国人能吃这个呀！话音还没落，服务员就给我上了一道一样的，他俩的表情别说多精彩了 : p 法国的tartare du boeuf 做法不够细腻，牛肉块比较大，主要靠搭配不同的SAUCE来调味。而意大利的做法更加适合想要品尝一下牛肉原味而又不是吃肉老饕的人，用剁碎的牛肉搭配各种香草，味道很好，比更加出名的意大利生牛肉切片CARPACIO 更有肉质风味。（有点像生吃牛肉饺子馅:》) 回到正题讨论牛排的不同部位口感： 一只牛可以吃的部位不要太多，我们得确定牛身上那些部分是可以煎牛排的：从表中我们可以看到3，4，5，7，9,20,21,22,23,24 这几个部位都是用来做煎牛排的，那么这些部位叫什么名字呢？ 部位三entrecôte 是肋排，是最经典的煎牛排部位。 肋排肋排必然是排骨肉啦。 跟猪肉一样，肋排口感不够细腻，但是咬头很好，很咬口，而且不会有含牛筋那种藕断丝连嚼不烂的感觉。 最重要的是肋排一般比较便宜比较大块，饭店里动辄350G 或者500G的大肋排，适合我这种食肉动物。 部位五六七味道相近，但等级不同 部位六就是传说中的菲利（法语filet）牛排，是牛排中最顶级的部位。腰内肉部分牛腰肉（英语tenderloin），最嫩处切出，是牛脊上的肉，形状头大尾小，脂肪含量少，适合三分熟，吸吮甜美的肉汁，肉质鲜嫩，菲力牛排包裹在牛腹腔中，所以肌肉都没运动到，故肌肉纤维不粗。是牛排中单价最高的。 五七两个部分比较复杂，5 faux filet 就是接近于菲利牛排的牛胸脊肉部分，口感与菲利牛排类似，但是鲜嫩度较低，弹性较好和肉质稍稍偏硬但不会让人觉得咀嚼困难。 这两个部分在美国英国等地叫法不同，或者翻译成沙朗牛排或者西冷牛排。沙朗牛排在美国指牛后腰脊柱两侧的肉，肉质细嫩，价格高。其中顶部（top sirloin）的肉质最好，价格最高，一般会标明。 沙朗牛排在英国、香港等地指牛胸脊肉部分，肉质细嫩度次于菲利牛排，售价也较低于菲力牛排，上端部分的西冷牛排较为鲜嫩，售价亦稍高。 filet 菲利是除了小牛肉这种高级食材外做牛排最好最高价的部位，基本都是各个牛排屋的拿手绝活。 二十，二十一两个部位比较相近常常放到一起讨论，这两个部位是牛肉中最少见的部分。基本不会在大的超市里销售，肉店老板会留给识货或相熟的大厨朋友。 ONGLET是膈柱肌肉， 可以做牛排，但是一定要避免过度煎烤。因为肌肉纤维较长，如果全熟会导致牛排过硬难以切割，更别说下口了。 HAMPE 是靠近大腿内侧的腹部肉， 一般情况下不会直接煎成牛排，因为肌肉纤维太长外表看起来都很明显。 但这个部位可以做成最好的steak haché 碎肉牛排，不会因为肉质过软导致剁碎后牛肉失去弹性。碎肉牛排就是一般汉堡包会使用的牛排。是不是高档汉堡就看其中的肉排是不是HAMPE做的就可以了。 这两个部位一般是被认为最接近下水的牛肉，所以不是牛肉老饕根本不会关注这两个部位的口感。 23，24 bavette 是牛的腰腹部细肉， bavette à l’échalote 是一道用小洋葱做的传统法国名菜。 这个部位牛排做法比较奇特，厨师用非常热的手在肉的两端各放几分钟，牛排的内心必须是全生的。因为这个部分筋非常多，如果烤熟就太过难咬。但如果做的适当，可以说是牛身上味道最丰富的一个部位。 24 flanchet是腹肉，相当少见用来做牛排的一个部分。因为作为牛身体脂肪最多的部位，应该说油脂能增加牛排香味。可是此处油脂含量过高，导致牛排煎起来较生会油腻，煎熟又会导致牛排肉质因为煎烤时间过长而过老难以下口，所以通常是做牛排牛肉中最后一个选择。 2 basses cotes 牛上脑 或者翻译成牛眼肉，也是我个人最喜欢的一个部位。 不光是做牛排，就算是中国的传统火锅，牛上脑也是最棒的刷锅肉材！ 肉质绵软细腻，肥瘦相宜，如若切片生吃，可算是慢慢在口中融化的感觉异常美妙。 普罗旺斯的AIX 我住的城市里有一家韩国烧烤，提供匈牙利牛上脑烧烤，每次去朋友们都是烟熏火绕异常热闹，而只有我自己慢慢品味上脑在口中融化纠缠的感觉。每次被人笑话把韩餐吃成日料 : ) 大家下次在高档火锅店确定是内蒙牛肉的上脑薄切片肉可以试试用清淡调料腌制一下，然后生食，享受如同西班牙火腿的如丝织般的性感。 如果用牛上脑做牛排，比较适合的是5成熟。外表的虽然已熟透，但下口没有阻碍感，内部的汁水会浸满过舌，略微甜甜又不腥腻，咀嚼起来丝毫不用力，微微咬动已经满口肉香。有点像吃鲑鱼子寿司挤破鱼子的快感。 而相较于菲利（filet）牛上脑体积比较大，价格并不昂贵，是非常具有性价比的牛排部位。 参考文献 不同部位的牛肉有什么区别，做出的牛排口感有何差异？ - 晨曦的回答 - 知乎","categories":[{"name":"琴棋书画","slug":"琴棋书画","permalink":"http://maxiaoyuelun.github.io/categories/琴棋书画/"}],"tags":[{"name":"牛排","slug":"牛排","permalink":"http://maxiaoyuelun.github.io/tags/牛排/"}]},{"title":"各种咖啡种类区别","slug":"各种咖啡种类区别","date":"2017-12-04T12:43:26.000Z","updated":"2017-12-04T12:54:37.482Z","comments":true,"path":"2017/12/04/各种咖啡种类区别/","link":"","permalink":"http://maxiaoyuelun.github.io/2017/12/04/各种咖啡种类区别/","excerpt":"平时听说各种咖啡，还有各种区别，听起来头大，在此笔记。","text":"平时听说各种咖啡，还有各种区别，听起来头大，在此笔记。","categories":[{"name":"琴棋书画","slug":"琴棋书画","permalink":"http://maxiaoyuelun.github.io/categories/琴棋书画/"}],"tags":[{"name":"咖啡","slug":"咖啡","permalink":"http://maxiaoyuelun.github.io/tags/咖啡/"}]},{"title":"本地编辑markdown工具Typora","slug":"本地编辑markdown工具Typora","date":"2017-12-04T06:42:12.000Z","updated":"2018-03-22T03:28:53.814Z","comments":true,"path":"2017/12/04/本地编辑markdown工具Typora/","link":"","permalink":"http://maxiaoyuelun.github.io/2017/12/04/本地编辑markdown工具Typora/","excerpt":"推荐一个本地编辑markdown的工具，在各平台下都有版本。 官方网址为：Typora","text":"推荐一个本地编辑markdown的工具，在各平台下都有版本。 官方网址为：Typora","categories":[{"name":"软件工具","slug":"软件工具","permalink":"http://maxiaoyuelun.github.io/categories/软件工具/"}],"tags":[{"name":"markdown","slug":"markdown","permalink":"http://maxiaoyuelun.github.io/tags/markdown/"},{"name":"typora","slug":"typora","permalink":"http://maxiaoyuelun.github.io/tags/typora/"}]},{"title":"windows绝赞应用","slug":"windows绝赞应用","date":"2017-12-04T06:37:41.000Z","updated":"2017-12-04T12:54:40.233Z","comments":true,"path":"2017/12/04/windows绝赞应用/","link":"","permalink":"http://maxiaoyuelun.github.io/2017/12/04/windows绝赞应用/","excerpt":"","text":"「Windows 绝赞应用」项目由 @EMLVIRUS 发起，旨在帮用户提供优秀的 Windows 应用以免除繁琐的搜寻工作。我们姑且可以将其理解为一份人工维护的优质 Windows 应用推荐榜单，前往 该项目的 GitBook 页面 即可在线进行阅读和索引。 Windows绝赞应用","categories":[{"name":"技术堆栈","slug":"技术堆栈","permalink":"http://maxiaoyuelun.github.io/categories/技术堆栈/"}],"tags":[{"name":"转载","slug":"转载","permalink":"http://maxiaoyuelun.github.io/tags/转载/"}]},{"title":"一千年以后","slug":"一千年以后","date":"2017-11-26T06:07:06.000Z","updated":"2018-05-04T11:53:58.838Z","comments":true,"path":"2017/11/26/一千年以后/","link":"","permalink":"http://maxiaoyuelun.github.io/2017/11/26/一千年以后/","excerpt":"感叹养猪家音乐越来越办不下去了，现在基本是企鹅一家独大，好多养猪家的歌曲现在都听不了了，于是悄悄下了企鹅家的QQ音乐，其实现在对企鹅家的东西不是太排斥，尽管年少曾骂过。企鹅家的音乐有个不好的地方，就是我不方便在自己的网页中嵌入代码。不像养猪家那么人性化，比如，我今天听到一千年之后，就想在自己的网页中嵌入这段音乐，可惜只有链接。这时候又念叨养猪家的东西好啊！！！","text":"感叹养猪家音乐越来越办不下去了，现在基本是企鹅一家独大，好多养猪家的歌曲现在都听不了了，于是悄悄下了企鹅家的QQ音乐，其实现在对企鹅家的东西不是太排斥，尽管年少曾骂过。企鹅家的音乐有个不好的地方，就是我不方便在自己的网页中嵌入代码。不像养猪家那么人性化，比如，我今天听到一千年之后，就想在自己的网页中嵌入这段音乐，可惜只有链接。这时候又念叨养猪家的东西好啊！！！ 越老越怀念以前，可能是单身或者在学校的时间久了，有太多的时间迷茫和感伤，所以就听歌吧！！！ 不知道一年之后的自己是什么样子，也许也许，板凳坐久了总想出去看看，想多了也就看淡了，现在少年老成的词也许已经不合适了，人到中年了哈！！！","categories":[{"name":"音乐之声","slug":"音乐之声","permalink":"http://maxiaoyuelun.github.io/categories/音乐之声/"}],"tags":[]},{"title":"一些资料翻译收集","slug":"一些资料翻译收集","date":"2017-11-25T13:31:44.000Z","updated":"2017-11-25T13:34:28.325Z","comments":true,"path":"2017/11/25/一些资料翻译收集/","link":"","permalink":"http://maxiaoyuelun.github.io/2017/11/25/一些资料翻译收集/","excerpt":"参考资料1.Scikit-Learn 中文文档第一期校验完成，邀请你来参与维护，一起走的更远 | ApacheCN2.3.4.5.","text":"参考资料1.Scikit-Learn 中文文档第一期校验完成，邀请你来参与维护，一起走的更远 | ApacheCN2.3.4.5.","categories":[{"name":"技术堆栈","slug":"技术堆栈","permalink":"http://maxiaoyuelun.github.io/categories/技术堆栈/"}],"tags":[{"name":"tensorflow","slug":"tensorflow","permalink":"http://maxiaoyuelun.github.io/tags/tensorflow/"},{"name":"转载","slug":"转载","permalink":"http://maxiaoyuelun.github.io/tags/转载/"},{"name":"scikit-learn","slug":"scikit-learn","permalink":"http://maxiaoyuelun.github.io/tags/scikit-learn/"},{"name":"elastic","slug":"elastic","permalink":"http://maxiaoyuelun.github.io/tags/elastic/"}]},{"title":"在python下利用opencv读取图片","slug":"在python下利用opencv读取图片","date":"2017-11-23T07:46:17.000Z","updated":"2017-11-24T06:07:49.982Z","comments":true,"path":"2017/11/23/在python下利用opencv读取图片/","link":"","permalink":"http://maxiaoyuelun.github.io/2017/11/23/在python下利用opencv读取图片/","excerpt":"","text":"1234567891011import numpy as npimport cv2img=cv2.imread('filename')print(type(img))#&lt;class 'numpy.ndarray'&gt;cv2.imshow('window_name',img)cv2.waitKey(0)cv2.destroyWindow('window_name') 注意opencv读出来的img格式直接是numpy.ndarray格式，可以用numpy直接操作。 参考资料1不是用opencv读取图像的，可以尝试看看，以供学习。 参考资料1.python 读取并显示图片的两种方法","categories":[{"name":"技术堆栈","slug":"技术堆栈","permalink":"http://maxiaoyuelun.github.io/categories/技术堆栈/"}],"tags":[{"name":"python","slug":"python","permalink":"http://maxiaoyuelun.github.io/tags/python/"},{"name":"opencv","slug":"opencv","permalink":"http://maxiaoyuelun.github.io/tags/opencv/"},{"name":"numpy","slug":"numpy","permalink":"http://maxiaoyuelun.github.io/tags/numpy/"}]},{"title":"win10安装django错误集","slug":"win10安装django错误集","date":"2017-11-20T10:46:37.000Z","updated":"2017-11-20T10:48:44.429Z","comments":true,"path":"2017/11/20/win10安装django错误集/","link":"","permalink":"http://maxiaoyuelun.github.io/2017/11/20/win10安装django错误集/","excerpt":"在cmd中创建第一个项目吧。 django-admin startproject mysite(千万不要使用django-admin.py startproject mysite这样老是打开django-admin.py文件，仅纪念踩过的坑) cd mysite,运行python manage.py runserver,打开浏览器输入http://127.0.0.1:8000/,下面就开始开发你的网站吧 参考资料1.window10下安装Django","text":"在cmd中创建第一个项目吧。 django-admin startproject mysite(千万不要使用django-admin.py startproject mysite这样老是打开django-admin.py文件，仅纪念踩过的坑) cd mysite,运行python manage.py runserver,打开浏览器输入http://127.0.0.1:8000/,下面就开始开发你的网站吧 参考资料1.window10下安装Django","categories":[{"name":"技术堆栈","slug":"技术堆栈","permalink":"http://maxiaoyuelun.github.io/categories/技术堆栈/"}],"tags":[{"name":"django","slug":"django","permalink":"http://maxiaoyuelun.github.io/tags/django/"}]},{"title":"转PyQt5教程","slug":"转PyQt5教程","date":"2017-11-20T08:50:13.000Z","updated":"2017-12-04T06:11:34.262Z","comments":true,"path":"2017/11/20/转PyQt5教程/","link":"","permalink":"http://maxiaoyuelun.github.io/2017/11/20/转PyQt5教程/","excerpt":"参考资料 PyQt5","text":"参考资料 PyQt5","categories":[{"name":"技术堆栈","slug":"技术堆栈","permalink":"http://maxiaoyuelun.github.io/categories/技术堆栈/"}],"tags":[{"name":"python","slug":"python","permalink":"http://maxiaoyuelun.github.io/tags/python/"},{"name":"转载","slug":"转载","permalink":"http://maxiaoyuelun.github.io/tags/转载/"},{"name":"PyQt5","slug":"PyQt5","permalink":"http://maxiaoyuelun.github.io/tags/PyQt5/"}]},{"title":"彻底卸载VisualStudio","slug":"彻底卸载VisualStudio","date":"2017-11-20T06:19:28.000Z","updated":"2018-03-22T03:29:01.187Z","comments":true,"path":"2017/11/20/彻底卸载VisualStudio/","link":"","permalink":"http://maxiaoyuelun.github.io/2017/11/20/彻底卸载VisualStudio/","excerpt":"有个插件叫TotalUninstaller，启用这个插件就可以完全删除visual studio的版本！在此mark，在我的百度网盘里有留存！","text":"有个插件叫TotalUninstaller，启用这个插件就可以完全删除visual studio的版本！在此mark，在我的百度网盘里有留存！ 参考资料 教你彻底卸载Visual Studio 2015","categories":[{"name":"软件工具","slug":"软件工具","permalink":"http://maxiaoyuelun.github.io/categories/软件工具/"}],"tags":[{"name":"转载","slug":"转载","permalink":"http://maxiaoyuelun.github.io/tags/转载/"}]},{"title":"转：目标检测系列博客","slug":"转目标检测系列博客","date":"2017-11-20T02:24:57.000Z","updated":"2017-12-05T08:46:34.547Z","comments":true,"path":"2017/11/20/转目标检测系列博客/","link":"","permalink":"http://maxiaoyuelun.github.io/2017/11/20/转目标检测系列博客/","excerpt":"晓雷机器学习笔记 RCNN-将CNN引入目标检测的开山之作 SPPNet-引入空间金字塔池化改进RCNN Fast R-CNN Faster R-CNN 图解YOLO SSD YOLO2 Learning Machine keras版faster-rcnn算法详解(1.RPN计算) keras版faster-rcnn算法详解(2.roi计算及其他) 机器学习随笔 Faster R-CNN 刘航呈 R-CNN学习总结 Fast R-CNN学习总结 Faster R-CNN学习总结","text":"晓雷机器学习笔记 RCNN-将CNN引入目标检测的开山之作 SPPNet-引入空间金字塔池化改进RCNN Fast R-CNN Faster R-CNN 图解YOLO SSD YOLO2 Learning Machine keras版faster-rcnn算法详解(1.RPN计算) keras版faster-rcnn算法详解(2.roi计算及其他) 机器学习随笔 Faster R-CNN 刘航呈 R-CNN学习总结 Fast R-CNN学习总结 Faster R-CNN学习总结","categories":[{"name":"技术堆栈","slug":"技术堆栈","permalink":"http://maxiaoyuelun.github.io/categories/技术堆栈/"}],"tags":[{"name":"深度学习","slug":"深度学习","permalink":"http://maxiaoyuelun.github.io/tags/深度学习/"}]},{"title":"自己动手做聊天机器人","slug":"自己动手做聊天机器人","date":"2017-07-22T12:48:52.000Z","updated":"2017-07-23T03:51:37.888Z","comments":true,"path":"2017/07/22/自己动手做聊天机器人/","link":"","permalink":"http://maxiaoyuelun.github.io/2017/07/22/自己动手做聊天机器人/","excerpt":"自己动手做聊天机器人","text":"自己动手做聊天机器人","categories":[{"name":"技术堆栈","slug":"技术堆栈","permalink":"http://maxiaoyuelun.github.io/categories/技术堆栈/"}],"tags":[]},{"title":"RNN资料收集","slug":"RNN资料收集","date":"2017-07-22T12:32:51.000Z","updated":"2017-07-23T03:51:37.857Z","comments":true,"path":"2017/07/22/RNN资料收集/","link":"","permalink":"http://maxiaoyuelun.github.io/2017/07/22/RNN资料收集/","excerpt":"Recurrent Neural Networks Tutorial, Part 1 – Introduction to RNNs Recurrent Neural Networks Tutorial, Part 2 – Implementing a RNN with Python, Numpy and Theano Recurrent Neural Networks Tutorial, Part 3 – Backpropagation Through Time and Vanishing Gradients Recurrent Neural Network Tutorial, Part 4 – Implementing a GRU/LSTM RNN with Python and Theano","text":"Recurrent Neural Networks Tutorial, Part 1 – Introduction to RNNs Recurrent Neural Networks Tutorial, Part 2 – Implementing a RNN with Python, Numpy and Theano Recurrent Neural Networks Tutorial, Part 3 – Backpropagation Through Time and Vanishing Gradients Recurrent Neural Network Tutorial, Part 4 – Implementing a GRU/LSTM RNN with Python and Theano 另外WILDML的一些博客： Implementing a Neural Network from Scratch in Python – An Introduction Speeding up your Neural Network with Theano and the GPU Understanding Convolutional Neural Networks for NLP Implementing a CNN for Text Classification in TensorFlow Attention and Memory in Deep Learning and NLP Deep Learning for Chatbots, Part 1 – Introduction Deep Learning for Chatbots, Part 2 – Implementing a Retrieval-Based Model in Tensorflow RNNs in Tensorflow, a Practical Guide and Undocumented Features Learning Reinforcement Learning (with Code, Exercises and Solutions)","categories":[{"name":"技术堆栈","slug":"技术堆栈","permalink":"http://maxiaoyuelun.github.io/categories/技术堆栈/"}],"tags":[{"name":"rnn","slug":"rnn","permalink":"http://maxiaoyuelun.github.io/tags/rnn/"}]},{"title":"安装latex","slug":"安装latex","date":"2017-07-22T05:30:29.000Z","updated":"2017-07-23T03:51:37.888Z","comments":true,"path":"2017/07/22/安装latex/","link":"","permalink":"http://maxiaoyuelun.github.io/2017/07/22/安装latex/","excerpt":"本文主要记录下安装使用latex的两个软件： miktex texmaker 首先安装miktex，然后再安装texmaker。","text":"本文主要记录下安装使用latex的两个软件： miktex texmaker 首先安装miktex，然后再安装texmaker。 参考文献 Miktex 2.9+Texmaker 4.4.1安装及中英PDF生成过程","categories":[{"name":"技术堆栈","slug":"技术堆栈","permalink":"http://maxiaoyuelun.github.io/categories/技术堆栈/"}],"tags":[{"name":"latex","slug":"latex","permalink":"http://maxiaoyuelun.github.io/tags/latex/"}]},{"title":"如果我爱你","slug":"如果我爱你","date":"2017-07-21T04:57:34.000Z","updated":"2018-05-04T11:50:26.642Z","comments":true,"path":"2017/07/21/如果我爱你/","link":"","permalink":"http://maxiaoyuelun.github.io/2017/07/21/如果我爱你/","excerpt":"最近新上的剧《春风十里》的主题曲，最近越来越喜欢周冬雨了。以前不待见这么个演员，从老谋子选角山楂树开始，觉得老谋子怎么选了个这么样的女演员，长得不怎么好看，眼镜如此之小。现如今再看，真为当时的自己感到羞愧，如此以貌取人。近段时间，从《七月与安生》到《喜欢你》，本来我不喜欢的电影，愣是凭着周冬雨的戏让我坚持看了下来，从此开始喜欢上这个有点神经再细看又如此美丽的演员。新剧《春风十里》估计符合她这几部剧一贯的风格，调皮、青涩、生动，只她演过的那几部戏，就深深吸引了我。这是她和张一山为《春风十里》而唱的主题曲，尽管唱功不是那么完美，但是由这两人唱出来平添了许多的韵味，有初恋的那种单纯，有春风化雨的细腻，有怦然心跳的悸动。如果我爱你……","text":"最近新上的剧《春风十里》的主题曲，最近越来越喜欢周冬雨了。以前不待见这么个演员，从老谋子选角山楂树开始，觉得老谋子怎么选了个这么样的女演员，长得不怎么好看，眼镜如此之小。现如今再看，真为当时的自己感到羞愧，如此以貌取人。近段时间，从《七月与安生》到《喜欢你》，本来我不喜欢的电影，愣是凭着周冬雨的戏让我坚持看了下来，从此开始喜欢上这个有点神经再细看又如此美丽的演员。新剧《春风十里》估计符合她这几部剧一贯的风格，调皮、青涩、生动，只她演过的那几部戏，就深深吸引了我。这是她和张一山为《春风十里》而唱的主题曲，尽管唱功不是那么完美，但是由这两人唱出来平添了许多的韵味，有初恋的那种单纯，有春风化雨的细腻，有怦然心跳的悸动。如果我爱你…… 音悦台 (function(){var player = new DPlayer({\"container\":document.getElementById(\"dplayer1\"),\"video\":{\"url\":\"http://hc.yinyuetai.com/uploads/videos/common/E62E015D3ECA5CF4408B7E2AB8AE5F6A.mp4?sc=281fab630288fdbe&br=774&vid=2910410&aid=14997&area=ML&vst=0\"}});window.dplayers||(window.dplayers=[]);window.dplayers.push(player);})()","categories":[{"name":"音乐之声","slug":"音乐之声","permalink":"http://maxiaoyuelun.github.io/categories/音乐之声/"}],"tags":[{"name":"周冬雨","slug":"周冬雨","permalink":"http://maxiaoyuelun.github.io/tags/周冬雨/"},{"name":"张一山","slug":"张一山","permalink":"http://maxiaoyuelun.github.io/tags/张一山/"}]},{"title":"Matlab常用函数及技巧","slug":"Matlab常用函数及技巧","date":"2017-07-17T06:05:02.000Z","updated":"2017-04-07T05:16:02.000Z","comments":true,"path":"2017/07/17/Matlab常用函数及技巧/","link":"","permalink":"http://maxiaoyuelun.github.io/2017/07/17/Matlab常用函数及技巧/","excerpt":"本文记录常用matlab函数以及技巧，不定时更新。","text":"本文记录常用matlab函数以及技巧，不定时更新。 regexpTBD strrepTBD imwriteimwrite(参数变量,’保存名称.保存格式’); 如果参数变量是double类型的，在保存的时候切记将参数变量除以参数变量的动态范围以归一化到[0,1]，这样才能正确保存为bmp或者jpg等格式。 var/cov方差/协方差 dirdir(路径); 遍历变量路径下的文件和文件夹 isdir判断dir得到的struct是否是文件夹 fread/fopen/fclose12345678fid = fopen(路径);if fid &gt; 0 data = fread(fid,[高 宽],存储格式); fclose(fid);else error('文件未能打开');end fullfile1234fullfile(变量1,变量2,变量3,变量4);&gt; &gt; 变量1/变量2/变量3/变量4 strcat1234strcat(变量1,变量2,变量3,变量4);&gt; &gt; 变量1变量2变量3变量4 num2str123456num2str(变量,'%04d') % 整数补充到4位，不足前面加零num2str(2,'%04d')&gt; &gt; 0002 ginput12[x y] = ginput(2); % 手动在图上选取2个点 corr计算矩阵列向量相关系数函数 movefile/copyfile移动文件/复制文件 参考文献 matlab imwrite 保存图像详解 方差var、协方差cov、协方差矩阵（浅谈）-（一） 方差var、协方差cov、协方差矩阵（浅谈）-（二）_函数var 方差var、协方差cov、协方差矩阵（浅谈）（三）_函数cov","categories":[{"name":"技术堆栈","slug":"技术堆栈","permalink":"http://maxiaoyuelun.github.io/categories/技术堆栈/"}],"tags":[{"name":"matlab","slug":"matlab","permalink":"http://maxiaoyuelun.github.io/tags/matlab/"}]},{"title":"protobuf生成c++代码详解(初稿)","slug":"protobuf生成cplusplus代码详解","date":"2017-07-13T08:49:50.000Z","updated":"2017-07-23T03:51:37.873Z","comments":true,"path":"2017/07/13/protobuf生成cplusplus代码详解/","link":"","permalink":"http://maxiaoyuelun.github.io/2017/07/13/protobuf生成cplusplus代码详解/","excerpt":"本文翻译自C++ Generated Code","text":"本文翻译自C++ Generated Code 本文描述了protocol缓冲编译器为指定的protocol定义生成的C++代码。proto2和proto3生成代码之间的任何区别都会突出显示。请注意，这些差异在生成代码中，而不在base classes/interfaces，这两个版本的base classes/interfaces都相同。在阅读本文档之前，您应该阅读proto2语言指南和/或proto3语言指南。 Compiler Invocationprotocol缓冲区编译器在使用--cpp_out=命令行时生成C++输出。该--cpp_out=选项的参数是编译器生成C++代码输出的目录。编译器为每个.proto文件输入创建头文件和实现文件。输出文件的名称通过获取.proto文件的名称并进行两次更改来实现： 源文件扩展名.proto被替换为.pb.h或.pb.cc，即为头或实现文件。 proto路径（用--proto_path=或-I命令行标志指定）被输出路径（用--cpp_out=标志指定）替换。 假设你调用编译器如下： 1protoc --proto_path=src --cpp_out=build/gen src/foo.proto src/bar/baz.proto 编译器将读取这些文件src/foo.proto和src/bar/baz.proto，产生四个输出文件：build/gen/foo.pb.h，build/gen/foo.pb.cc，build/gen/bar/baz.pb.h，build/gen/bar/baz.pb.cc。编译器根据需要自动创建目录将build/gen/bar，但不会创建build或build/gen，它们必须已经存在（即需要自己创建）。 Packages如果.proto文件包含一个package声明，则文件的全部内容将被放置在相应的C++命名空间中。例如，给出package声明： 1package foo.bar; 文件中的所有声明将在foo::bar命名空间中。 Messages给出一个简单的消息声明：1message Foo &#123;&#125; protocol缓冲区编译器生成一个由google::protobuf::Message公开派生的类Foo。这个类是一个具体的类，没有纯虚函数等待实现。根据优化模式，Message中的虚函数但不是纯虚函数可以被Foo覆盖也可以不被覆盖。默认情况下，Foo以最大速度实现所有函数的专门版本。但是，如果.proto文件包含该行： 1option optimize_for = CODE_SIZE; 那么Foo将仅覆盖功能所需的最小的一组方法，并依赖其余的基于反射的实现。这显著减少了生成的代码，但也降低了性能。或者，如果.proto文件包含： 1option optimize_for = LITE_RUNTIME; 那么Foo将包括所有方法的快速实现，将实现该google::protobuf::MessageLite接口，该接口只包含Message方法的子集。特别地，它不支持描述符或映射。但是，在这种模式下，生成的代码只需要链接libprotobuf-lite.so（libprotobuf-lite.lib在Windows上），而不是libprotobuf.so（libprotobuf.lib）。lite库比完整的库小得多，更适合资源有限的系统，如手机。 你不能创建自己的Foo子类。如果您将此类子类化并覆盖虚函数，则覆盖可能会被忽略，因为许多生成的方法调用都将被去虚拟化以提高性能。 Message接口定义了检查、处理、读取或写入整个message的方法，包括解析和序列化到二进制字符串。除了这些方法，Foo类还定义了以下方法： 1234567Foo()：默认构造函数。~Foo()：默认析构函数。Foo(const Foo&amp; other)：拷贝构造函数。Foo&amp; operator=(const Foo&amp; other)：赋值运算。void Swap(Foo* other)：用另一个消息交换内容。const UnknownFieldSet&amp; unknown_fields() const：返回解析此消息时遇到的一组未知字段。UnknownFieldSet* mutable_unknown_fields()：返回指向解析此消息时遇到的未知字段的可变集的指针。 该类还定义了以下静态方法： 12345static const Descriptor* descriptor()- 返回类型的描述符。这包含有关类型的信息，包括它的字段和它们的类型。这可以用映射以编程方式检查字段。static const Foo&amp; default_instance()- 返回一个const单例实例Foo与新构造的实例相同Foo（所有单个字段未设置，所有重复字段都为空）。请注意，消息的默认实例可以被用作工厂通过调用其New()方法。 message可以在另一个message中声明。例如：1message Foo &#123; message Bar &#123; &#125; &#125; 在这种情况下，编译器生成两个类：Foo和Foo_Bar。另外，编译器会在Foo类下生成一个typedef ： 1typedef Foo_Bar Bar; 这意味着您可以使用嵌套类型的类，就像它是嵌套类Foo::Bar一样。但是，请注意，C++不允许向前声明嵌套类型。如果要在另一个文件中转发声明并使用该声明，则必须将其标识为Foo_Bar。 Fields除了上一节中描述的方法之外，protocol缓冲区编译器为.proto文件中的消息中定义的每个字段生成一组访问方法。 除了访问器方法之外，编译器还会为包含其字段编号的每个字段生成一个整数常量。常数名称是字母k，后跟字段名称转换为驼峰法，后跟FieldNumber。例如，给定该字段optional int32 foo_bar = 5;;编译器将生成常量static const int kFooBarFieldNumber = 5;。 对于返回const引用的字段访问器，当对消息进行下一个修改访问时，该引用可能会无效。这包括调用任何const字段的任何非访问者，通过其他方法（例如，使用该消息作为参数）调用const继承Message或修改消息的任何非方法Swap()。相应地，如果在此期间没有对消息进行任何修改访问，返回引用的地址只能在访问器的不同调用中保持相同。 对于返回指针的字段访问器，当对消息进行下一个修改或不修改访问时，该指针可能无效。这包括，不管const是什么，调用任何字段的任何访问者，Message通过其他方式调用继承或访问消息的任何方法（例如，通过使用复制构造函数复制消息）。相应地，返回的指针的值不能保证在访问器的两个不同调用中是相同的。 Singular Numeric Fields (proto2)对于任一这些字段定义： 12optional int32 foo = 1;required int32 foo = 1; 编译器将生成以下访问器方法： 1234bool has_foo() const：返回true是否设置了该字段。int32 foo() const：返回字段的当前值。如果未设置该字段，则返回默认值。void set_foo(int32 value)：设置字段的值。调用后，has_foo()将返回true并foo()返回value。void clear_foo()：清除字段的值。调用它后，has_foo()将返回false并foo()返回默认值。 对于其他数字字段类型（包括bool），int32将根据标量值类型表替换为相应的C++类型。 Singular Numeric Fields (proto3)对于此字段定义：1int32 foo = 1; 编译器将生成以下访问器方法： 123int32 foo() const：返回字段的当前值。如果未设置该字段，则返回0。void set_foo(int32 value)：设置字段的值。调用后，foo()会返回value。void clear_foo()：清除字段的值。调用这个之后，foo()会返回0。 对于其他数字字段类型（包括bool），int32将根据标量值类型表替换为相应的C++类型。 Singular String Fields (proto2)对于任何这些字段定义： 1234optional string foo = 1;required string foo = 1;optional bytes foo = 1;required bytes foo = 1; 编译器将生成以下访问器方法： 12345678910111213141516171819202122232425bool has_foo() const：返回true是否设置了该字段。const string&amp; foo() const：返回字段的当前值。如果未设置该字段，则返回默认值。void set_foo(const string&amp; value)：设置字段的值。调用后，has_foo()将返回true并foo()返回一份value。void set_foo(const char* value)：使用C风格的以null结尾的字符串设置字段的值。调用后，has_foo()将返回true并foo()返回一份value。void set_foo(const char* value, int size)：像上面一样，但是字符串大小是明确给出的，而不是通过寻找一个空终止符字节来确定。string* mutable_foo()：返回指向可变string对象的指针，该对象存储字段的值。如果在调用之前未设置该字段，则返回的字符串将为空（而不是默认值）。调用它后，has_foo()将返回true并foo()返回任何写入给定字符串的值。void clear_foo()：清除字段的值。调用它后，has_foo()将返回false并foo()返回默认值。void set_allocated_foo(string* value)：将string对象设置为字段，并释放前一个字段值（如果存在）。如果string指针不是NULL，消息将获取所分配的string对象的所有权并has_foo()返回true。否则，如果value是NULL，行为与调用相同clear_foo()。string* release_foo()：释放字段的所有权并返回string对象的指针。调用该string函数后，调用者将获取已分配对象的所有权，has_foo()将返回false，并foo()返回默认值。 Singular String Fields (proto3)对于任何这些字段定义： 12string foo = 1;bytes foo = 1; 编译器将生成以下访问器方法： 123456789101112131415161718192021const string&amp; foo() const：返回字段的当前值。如果未设置该字段，则返回空字符串/空字节。void set_foo(const string&amp; value)：设置字段的值。调用后，foo()会返回一份value。void set_foo(const char* value)：使用C风格的以null结尾的字符串设置字段的值。调用后，foo()会返回一份value。void set_foo(const char* value, int size)：像上面一样，但是字符串大小是明确给出的，而不是通过寻找一个空终止符字节来确定。string* mutable_foo()：返回指向可变string对象的指针，该对象存储字段的值。如果在调用之前未设置该字段，则返回的字符串将为空。调用它之后，foo()将返回写入给定字符串的任何值。void clear_foo()：清除字段的值。调用这个之后，foo()将返回空字符串/空字节。void set_allocated_foo(string* value)：将string对象设置为字段，并释放前一个字段值（如果存在）。如果string指针不是NULL，该消息将占用所分配string对象的所有权。否则，如果value是NULL，行为与调用相同clear_foo()。string* release_foo()：释放字段的所有权并返回string对象的指针。调用该方法后，调用者将获取已分配string对象的所有权，并foo()返回空字符串/空字节。 Singular Enum Fields (proto2)给定枚举类型： 1234enum Bar &#123; BAR_VALUE = 0; OTHER_VALUE = 1;&#125; 对于任一这些字段定义： 12optional Bar foo = 1;required Bar foo = 1; 编译器将生成以下访问器方法： 12345678bool has_foo() const：返回true是否设置了该字段。Bar foo() const：返回字段的当前值。如果未设置该字段，则返回默认值。void set_foo(Bar value)：设置字段的值。调用后，has_foo()将返回true并foo()返回value。在调试模式（即NDEBUG未定义）中，如果value与定义的任何值不匹配Bar，则此方法将中止该过程。void clear_foo()：清除字段的值。调用它后，has_foo()将返回false并foo()返回默认值。 Singular Enum Fields (proto3)给定枚举类型： 1234enum Bar &#123; BAR_VALUE = 0; OTHER_VALUE = 1;&#125; 对于此字段定义： 1Bar foo = 1; 编译器将生成以下访问器方法：12345Bar foo() const：返回字段的当前值。如果未设置该字段，则返回默认值（0）。void set_foo(Bar value)：设置字段的值。打电话后，foo()会返回value。void clear_foo()：清除字段的值。调用该命令后，foo()将返回默认值。 Singular Embedded Message Fields给定消息类型： 1message Bar &#123;&#125; 对于任何这些字段定义： 123//proto2optional Bar foo = 1;required Bar foo = 1; 12//proto3Bar foo = 1; 编译器将生成以下访问器方法：12345678910111213141516bool has_foo() const：返回true是否设置了该字段。const Bar&amp; foo() const：返回字段的当前值。如果未设置该字段，则返回一个不设置Bar其字段（可能Bar::default_instance()）的字段。Bar* mutable_foo()：返回指向可变Bar对象的指针，该对象存储字段的值。如果在调用之前没有设置该字段，则返回Bar的字段将不会设置任何字段（即它将与新分配的相同Bar）。调用这个之后，has_foo()将返回true并foo()返回对同一个实例的引用Bar。void clear_foo()：清除字段的值。调用它后，has_foo()将返回false并foo()返回默认值。void set_allocated_foo(Bar* bar)：将Bar对象设置为字段，并释放前一个字段值（如果存在）。如果Bar指针不是NULL，消息将获取所分配的Bar对象的所有权并has_foo()返回true。否则，如果Bar是NULL，行为与调用相同clear_foo()。Bar* release_foo()：释放字段的所有权并返回Bar对象的指针。调用该Bar函数后，调用者将获取已分配对象的所有权，has_foo()将返回false，并foo()返回默认值。 Repeated Numeric Fields对于此字段定义： 1repeated int32 foo = 1; 编译器将生成以下访问器方法：12345678910111213141516int foo_size() const：返回字段中当前的元素数。int32 foo(int index) const：返回给定基于零的索引的元素。使用[0，foo_size（））之外的索引调用此方法会产生未定义的行为。void set_foo(int index, int32 value)：设置给定基于零的索引的元素的值。void add_foo(int32 value)：用给定的值追加一个新元素到该字段。void clear_foo()：从字段中删除所有元素。调用后，foo_size()将返回零。const RepeatedField&lt;int32&gt;&amp; foo() const：返回RepeatedField存储字段元素的底层。这个容器类提供了类似STL的迭代器和其他方法。RepeatedField&lt;int32&gt;* mutable_foo()：返回指向RepeatedField存储字段元素的底层mutable的指针。这个容器类提供了类似STL的迭代器和其他方法。对于其他数字字段类型（包括bool），int32将根据标量值类型表替换为相应的C ++类型。 Repeated String Fields对于任一这些字段定义： 12repeated string foo = 1;repeated bytes foo = 1; 编译器将生成以下访问器方法：12345678910111213141516171819202122232425int foo_size() const：返回字段中当前的元素数。const string&amp; foo(int index) const：返回给定基于零的索引的元素。使用[0，foo_size（））之外的索引调用此方法会产生未定义的行为。void set_foo(int index, const string&amp; value)：设置给定基于零的索引的元素的值。void set_foo(int index, const char* value)：使用C风格的以null结尾的字符串来设置给定基于零的索引处的元素的值。void set_foo(int index, const char* value, int size)：像上面一样，但是字符串大小是明确给出的，而不是通过寻找一个空终止符字节来确定。string* mutable_foo(int index)：返回一个指向可变string对象的指针，该对象在给定的基于零的索引处存储元素的值。使用[0，foo_size（））之外的索引调用此方法会产生未定义的行为。void add_foo(const string&amp; value)：用给定的值追加一个新元素到该字段。void add_foo(const char* value)：使用C风格的以null结尾的字符串向字段添加一个新元素。void add_foo(const char* value, int size)：像上面一样，但是字符串大小是明确给出的，而不是通过寻找一个空终止符字节来确定。string* add_foo()：添加一个新的空字符串元素并返回一个指针。void clear_foo()：从字段中删除所有元素。调用后，foo_size()将返回零。const RepeatedPtrField&lt;string&gt;&amp; foo() const：返回RepeatedPtrField存储字段元素的底层。这个容器类提供了类似STL的迭代器和其他方法。RepeatedPtrField&lt;string&gt;* mutable_foo()：返回指向RepeatedPtrField存储字段元素的底层mutable的指针。这个容器类提供了类似STL的迭代器和其他方法。 Repeated Enum Fields给定枚举类型： 1234enum Bar &#123; BAR_VALUE = 0; OTHER_VALUE = 1;&#125; 对于此字段定义： 1repeated Bar foo = 1; 编译器将生成以下访问器方法：12345678910111213int foo_size() const：返回字段中当前的元素数。Bar foo(int index) const：返回给定基于零的索引的元素。使用[0，foo_size（））之外的索引调用此方法会产生未定义的行为。void set_foo(int index, Bar value)：设置给定基于零的索引的元素的值。在调试模式（即NDEBUG未定义）中，如果value与定义的任何值不匹配Bar，则此方法将中止该过程。void add_foo(Bar value)：用给定的值追加一个新元素到该字段。在调试模式（即NDEBUG未定义）中，如果value与定义的任何值不匹配Bar，则此方法将中止该过程。void clear_foo()：从字段中删除所有元素。调用后，foo_size()将返回零。const RepeatedField&lt;int&gt;&amp; foo() const：返回RepeatedField存储字段元素的底层。这个容器类提供了类似STL的迭代器和其他方法。RepeatedField&lt;int&gt;* mutable_foo()：返回指向RepeatedField存储字段元素的底层mutable的指针。这个容器类提供了类似STL的迭代器和其他方法。 Repeated Embedded Message Fields给定消息类型： 1message Bar &#123;&#125; 对于此字段定义： 1repeated Bar foo = 1; 编译器将生成以下访问器方法： 12345678910111213int foo_size() const：返回字段中当前的元素数。const Bar&amp; foo(int index) const：返回给定基于零的索引的元素。使用[0，foo_size（））之外的索引调用此方法会产生未定义的行为。Bar* mutable_foo(int index)：返回一个指向可变Bar对象的指针，该对象在给定的基于零的索引处存储元素的值。使用[0，foo_size（））之外的索引调用此方法会产生未定义的行为。Bar* add_foo()：添加一个新元素并返回一个指针。返回的Bar将不会设置任何字段（即它将与新分配的相同Bar）。void clear_foo()：从字段中删除所有元素。调用后，foo_size()将返回零。const RepeatedPtrField&lt;Bar&gt;&amp; foo() const：返回RepeatedPtrField存储字段元素的底层。这个容器类提供了类似STL的迭代器和其他方法。RepeatedPtrField&lt;Bar&gt;* mutable_foo()：返回指向RepeatedPtrField存储字段元素的底层mutable的指针。这个容器类提供了类似STL的迭代器和其他方法。 Oneof Numeric Fields对于这个oneof字段定义：1234oneof_name &#123; int32 foo = 1; ...&#125; 编译器将生成以下访问器方法：123456789101112bool has_foo() const（仅限于proto2）：true如果一个情况下返回kFoo。int32 foo() const：如果是一个case，则返回该字段的当前值kFoo。否则返回默认值。void set_foo(int32 value)：- 如果设置了同一个任何一个字段，则调用clear_oneof_name()。- 设置此字段的值，并将其中的一个设置为kFoo。- has_foo()（仅原型2）将返回true，foo()将返回value，并oneof_name_case()返回kFoo。void clear_foo()：- 如果不是，情况不会改变kFoo。- 如果一个情况是kFoo，清除字段的值和一个case。has_foo()（仅限proto2）将返回false，foo()将返回默认值并oneof_name_case()返回ONEOF_NAME_NOT_SET。 对于其他数字字段类型（包括bool）， int32将根据标量值类型表替换为相应的C ++类型。 Oneof String Fields对于任何这些oneof字段定义：12345678oneof_name &#123; string foo = 1; ...&#125;oneof_name &#123; bytes foo = 1; ...。&#125; 编译器将生成以下访问器方法：12345678910111213141516171819202122232425262728293031323334bool has_foo() const（仅限于proto2）：true如果一个情况下返回kFoo。const string&amp; foo() const：如果一种情况，则返回该字段的当前值kFoo。否则返回默认值。void set_foo(const string&amp; value)：- 如果设置了同一个任何一个字段，则调用clear_oneof_name()。- 设置此字段的值，并将其中的一个设置为kFoo。- has_foo()（仅原始2）将返回true，foo()将返回value并oneof_name_case()返回kFoo。void set_foo(const char* value)：- 如果设置了同一个任何一个字段，则调用clear_oneof_name()。- 使用C风格的空值终止的字符串设置字段的值，并将其中的一个设置为kFoo。- has_foo()（仅原始2）将返回true，foo()将返回value并oneof_name_case()返回kFoo。void set_foo(const char* value, int size)：像上面一样，但是字符串大小是明确给出的，而不是通过寻找一个空终止符字节来确定。string* mutable_foo()：- 如果设置了同一个任何一个字段，则调用clear_oneof_name()。- kFoo将一个case设置为并返回一个指向可变字符串对象的指针，该对象存储字段的值。如果一个情况不在kFoo调用之前，则返回的字符串将为空（而不是默认值）。- has_foo()（仅原型2）将返回true，foo()将返回任何写入给定字符串的值，oneof_name_case()并返回kFoo。void clear_foo()：- 如果一个案件不是kFoo，任何事情都不会改变。- 如果一个案例是kFoo，释放字段并清除一个case。has_foo()（仅原型2）将返回false，foo()将返回默认值，并oneof_name_case()返回ONEOF_NAME_NOT_SET。void set_allocated_foo(string* value)：- 电话clear_oneof_name()。- 如果字符串指针不是NULL：将字符串对象设置为字段并将其设置为一个kFoo。该消息将获取已分配的字符串对象的所有权，has_foo()（仅原型2）将返回true并oneof_name_case()返回kFoo。- 如果字符串指针是NULL，has_foo()（仅原型2）将返回false并oneof_name_case()返回ONEOF_NAME_NOT_SET。string* release_foo()：- NULL如果一个情况不是返回kFoo。- 清除一个情况，释放该字段的所有权并返回字符串对象的指针。调用这个之后，调用者占用所分配的字符串对象，has_foo()（仅原型2）将返回false，foo()将返回默认值，并oneof_name_case()返回ONEOF_NAME_NOT_SET。 Oneof Enum Fields给定枚举类型： 1234enum Bar &#123; BAR_VALUE = 0; OTHER_VALUE = 1;&#125; 对于oneof字段定义： 1234oneof oneof_name &#123; Bar foo = 1; ...&#125; 编译器将生成以下访问器方法： 12345678910111213bool has_foo() const（仅限于proto2）：true如果一个情况下返回kFoo。Bar foo() const：如果是一个case，则返回该字段的当前值kFoo。否则返回默认值。void set_foo(Bar value)：- 如果设置了同一个任何一个字段，则调用clear_oneof_name()。- 设置此字段的值，并将其中的一个设置为kFoo。- has_foo()（仅原型2）将返回true，foo()将返回value并oneof_name_case()返回kFoo。- 在调试模式（即NDEBUG未定义）中，如果value与定义的任何值不匹配Bar，则此方法将中止该过程。void clear_foo()：- 如果一个案件不是，任何事情都不会改变kFoo。- 如果一个案例是kFoo，清除字段的值和一个case。has_foo()（仅限proto2）将返回false，foo()将返回默认值并oneof_name_case()返回ONEOF_NAME_NOT_SET。 Oneof Embedded Message Fields给定消息类型： 1message Bar &#123;&#125; 对于oneof字段定义： 1234oneof oneof_name &#123; Bar foo = 1; ...&#125; 编译器将生成以下访问器方法：123456789101112131415161718192021bool has_foo() const：如果一个case返回true kFoo。const Bar&amp; foo() const：如果是一个case，则返回该字段的当前值kFoo。否则返回Bar::default_instance()。Bar* mutable_foo()：- 如果设置了同一个任何一个字段，则调用clear_oneof_name()。- kFoo将一个情况设置为并返回一个指向可变的Bar对象的指针，该对象存储该字段的值。如果一个情况不在kFoo调用之前，则返回的栏将不会设置任何字段（即它将与新分配的Bar相同）。- 调用这个之后，has_foo()会返回true，foo()将返回一个引用到同一个实例Bar并oneof_name_case()返回kFoo。void clear_foo()：- 如果一个案件不是，任何事情都不会改变kFoo。- 如果一个情况相等kFoo，则释放该字段并清除该情况。has_foo()将返回false，foo()将返回默认值并oneof_name_case()返回ONEOF_NAME_NOT_SET。void set_allocated_foo(Bar* bar)：- 电话clear_oneof_name()。- 如果Bar指针不是NULL：将Bar对象设置为字段并将其设置为一个kFoo。该消息占用所分配的Bar对象，has_foo（）将返回true，而oneof_name_case（）将返回kFoo。- 如果指针是NULL，has_foo()将返回false并oneof_name_case()返回ONEOF_NAME_NOT_SET。（行为就像调用clear_oneof_name()）Bar* release_foo()：- NULL如果一个情况不是返回kFoo。- 如果一种情况是kFoo，清除一种情况，释放该字段的所有权并返回该Bar对象的指针。调用这个之后，调用者占用所分配的Bar对象，has_foo()将返回false，foo()将返回默认值并oneof_name_case()返回ONEOF_NAME_NOT_SET。 Map Fields对于此Map字段定义： 1map&lt;int32, int32&gt; weight = 1; 编译器将生成以下访问器方法：12const google::protobuf::Map&lt;int32, int32&gt;&amp; weight();：返回一个不可变的Map。google::protobuf::Map&lt;int32, int32&gt;* mutable_weight();：返回一个可变的Map。 一个google::protobuf::Map是用于存储映射字段的协议缓冲区中使用的特殊容器类型。从下面的界面可以看出，它使用常用的子集std::map和std::unordered_map方法。 1234567891011121314151617181920212223242526272829303132333435363738394041template&lt;typename Key, typename T&gt; &#123;class Map &#123; // Member types typedef Key key_type; typedef T mapped_type; typedef ... value_type; // Iterators iterator begin(); const_iterator begin() const; const_iterator cbegin() const; iterator end(); const_iterator end() const; const_iterator cend() const; // Capacity int size() const; bool empty() const; // Element access T&amp; operator[](const Key&amp; key); const T&amp; at(const Key&amp; key) const; T&amp; at(const Key&amp; key); // Lookup int count(const Key&amp; key) const; const_iterator find(const Key&amp; key) const; iterator find(const Key&amp; key); // Modifiers pair&lt;iterator, bool&gt; insert(const value_type&amp; value); template&lt;class InputIt&gt; void insert(InputIt first, InputIt last); size_type erase(const Key&amp; Key); iterator erase(const_iterator pos); iterator erase(const_iterator first, const_iterator last); void clear(); // Copy Map(const Map&amp; other); Map&amp; operator=(const Map&amp; other);&#125; 添加数据的最简单的方法是使用普通的地图语法，例如： 12std::unique_ptr&lt;ProtoName&gt; my_enclosing_proto(new ProtoName);(*my_enclosing_proto-&gt;mutable_weight())[my_key] = my_value; pair&lt;iterator, bool&gt; insert(const value_type&amp; value)将隐含地导致value_type实例的深层副本。将新值插入到一个最有效的方法google::protobuf::Map如下： 1T&amp; operator[](const Key&amp; key): map[new_key] = new_mapped; 使用google::protobuf::Map标准Map google::protobuf::Map支持相同的迭代器API的std::map和std::unordered_map。如果您不想google::protobuf::Map直接使用，可以google::protobuf::Map通过执行以下操作转换为标准Map： 12std::map&lt;int32, int32&gt; standard_map(message.weight().begin(), message.weight().end()); 请注意，这将使整个Map的深层副本。 您还可以google::protobuf::Map按照以下方式从标准映射构建一个： 1google::protobuf::Map&lt;int32, int32&gt; weight(standard_map.begin(), standard_map.end()); 解析未知值 在线上，.proto映射等效于每个key/value对的映射条目消息，而映射本身是映射条目的重复字段。像普通消息类型一样，解析的映射条目消息可能具有未知字段：例如，int64定义为映射的映射中的类型字段map&lt;int32, string&gt;。 如果Map条目消息的有线格式中有未知字段，则它们将被丢弃。 如果Map条目消息的有线格式中有一个未知的枚举值，那么它在proto2和proto3中的处理方式不同。在proto2中，将整个map条目消息放入包含消息的未知字段集中。在proto3中，它被放入一个映射字段，就像它是一个已知的枚举值一样。 Any给出一个Any这样的字段： 123456import &quot;google/protobuf/any.proto&quot;;message ErrorStatus &#123; string message = 1; google.protobuf.Any details = 2;&#125; 在我们生成的代码中，该details字段的getter返回一个实例google::protobuf::Any。这提供了以下特殊方法来打包和解压缩Any的值： 123456789101112131415161718class Any &#123; public: // Packs the given message into this Any using the default type URL // prefix “type.googleapis.com”. void PackFrom(const google::protobuf::Message&amp; message); // Packs the given message into this Any using the given type URL // prefix. void PackFrom(const google::protobuf::Message&amp; message, const string&amp; type_url_prefix); // Unpacks this Any to a Message. Returns false if this Any // represents a different protobuf type or parsing fails. bool UnpackTo(google::protobuf::Message* message) const; // Returns true if this Any represents the given protobuf type. template&lt;typename T&gt; bool Is() const;&#125; Oneof给定一个这样的定义： 12345oneof_name &#123; int32 foo_int = 4; string foo_string = 9; ...&#125; 编译器将生成以下C++枚举类型： 12345enum OneofNameCase &#123; kFooInt = 4, kFooString = 9, ONEOF_NAME_NOT_SET = 0&#125; 另外，它会产生这种方法：1OneofNameCase oneof_name_case() const：返回指定哪个字段被设置的枚举。ONEOF_NAME_NOT_SET如果没有设置它们返回。 编译器还生成以下私有方法，它在一个字段访问器中使用： 1void clear_oneof_name()：如果一个字段集使用一个指针（Message或String），并设置一个case，则释放该对象ONEOF_NAME_NOT_SET。 Enumerations给定一个枚举定义，如： 12345enum Foo &#123; VALUE_A = 0; VALUE_B = 5; VALUE_C = 1234;&#125; 协议缓冲区编译器将生成一个Foo使用相同值进行调用的C++枚举类型。此外，编译器将生成以下函数： 123456789101112131415const EnumDescriptor* Foo_descriptor()：返回类型的描述符，其中包含有关此枚举类型定义的值的信息。bool Foo_IsValid(int value)：true如果给定的数值与其中一个Foo定义的值匹配，则返回。在上面的例子中，true如果输入为0,5或1234 ，则返回。const string&amp; Foo_Name(int value)：返回给定数值的名称。如果不存在这样的值，则返回一个空字符串。如果多个值具有此数字，则返回第一个定义的值。在上面的例子中，Foo_Name(5)会返回\"VALUE_B\"。bool Foo_Parse(const string&amp; name, Foo* value)：如果name是此枚举的有效值名称，则将该值分配value并返回true。否则返回false。在上面的例子中，Foo_Parse(\"VALUE_C\", &amp;someFoo)将返回true并设置someFoo为1234。const Foo Foo_MIN：枚举的最小有效值（示例中为VALUE_A）。const Foo Foo_MAX：枚举的最大有效值（在示例中为VALUE_C）。const int Foo_ARRAYSIZE：总是定义为Foo_MAX + 1。 将整数转换为proto2枚举时要小心。 如果将整数转换为proto2枚举值，则该整数必须是枚举以外的有效值之一，否则结果可能未定义。如果有疑问，请使用生成的Foo_IsValid()函数来测试该转换是否有效。将proto2消息的枚举类型字段设置为无效值可能会导致断言失败。如果在解析proto2消息时读取一个无效的枚举值，它将被视为未知字段。这些语义在proto3中已经改变了。只要适用于int32，就可以将任何整数转换为proto3枚举值。在解析proto3消息并由枚举字段访问器返回时，也将保留无效的枚举值。 在switch语句中使用proto3枚举时要小心。Proto3枚举是打开的枚举类型，可能的值超出了指定符号的范围。在解析proto3消息并由枚举字段访问器返回时，将不会识别到枚举值。在没有默认情况下的proto3枚举上的switch语句将无法捕获所有情况，即使列出了所有已知字段。这可能会导致意外的行为，包括数据损坏和运行时崩溃。始终添加默认情况，或者Foo_IsValid(int)在交换机外部显式调用以处理未知的枚举值。 您可以在消息类型中定义一个枚举。在这种情况下，协议缓冲区编译器会生成代码，使得它看起来是枚举类型本身被声明为嵌套在消息的类中。在Foo_descriptor()与Foo_IsValid()函数声明为静态方法。实际上，枚举类型本身及其值在全局范围内被声明为具有变量名称，并且通过typedef和一系列常量定义导入到类的范围内。这只是为了避免声明排序的问题。不要依赖于被破坏的顶级名称; 假装枚举真的嵌套在消息类中。 Extensions (proto2 only)给定一个扩展范围的消息： 123message Foo &#123; extensions 100 to 199;&#125; 该协议缓冲编译器将产生一些额外的方法Foo： HasExtension()，ExtensionSize()，ClearExtension()，GetExtension()，SetExtension()，MutableExtension()，AddExtension()，SetAllocatedExtension()和ReleaseExtension()。作为其第一参数，这些方法中的每一个都采用标识扩展字段的扩展标识符（如下所述）。剩余的参数和返回值与对于与扩展标识符相同类型的普通（非扩展）字段生成的相应存取器方法的参数和返回值完全相同。（GetExtension()对应于没有特殊前缀的访问器） 给定一个扩展定义： 1234extend Foo &#123; optional int32 bar = 123; repeated int32 repeated_bar = 124;&#125; 对于单个扩展字段bar，协议缓冲区编译器生成一个调用的扩展标识符 bar，您可以使用它们Foo的扩展访问器来访问此扩展，如下所示： 1234567Foo foo;assert(!foo.HasExtension(bar));foo.SetExtension(bar, 1);assert(foo.HasExtension(bar));assert(foo.GetExtension(bar) == 1);foo.ClearExtension(bar);assert(!foo.HasExtension(bar)); 类似地，对于重复的扩展字段repeated_bar，编译器生成一个调用的扩展标识符repeated_bar，您也可以使用Foo扩展名的扩展名： 12345678Foo foo;for (int i = 0; i &lt; kSize; ++i) &#123; foo.AddExtension(repeated_bar, i)&#125;assert(foo.ExtensionSize(repeated_bar) == kSize)for (int i = 0; i &lt; kSize; ++i) &#123; assert(foo.GetExtension(repeated_bar, i) == i)&#125; （扩展名标识符的确切实现是复杂的，涉及神奇使用模板 - 但是，您不需要担心扩展名标识符如何使用它们。） 扩展可以被声明为嵌套在另一种类型之内。例如，一个常见的模式是做这样的事情： 12345message Baz &#123; extend Foo &#123; optional Baz foo_ext = 124; &#125;&#125; 在这种情况下，扩展名标识符foo_ext被声明嵌套在里面Baz。可以使用如下： 123Foo foo;Baz* baz = foo.MutableExtension(Baz::foo_ext);FillInMyBaz(baz); Arena AllocationArena分配是一个仅C++功能，可帮助您优化内存使用情况，并在使用协议缓冲区时提高性能。在您.proto的C++生成的代码中添加额外的代码来使用Arena分配。您可以在“Arena分配指南”中了解有关竞技场分配API的更多信息。 Services如果.proto文件包含以下行： 1option cc_generic_services = true; 然后，协议缓冲区编译器将根据本节中所述的文件中找到的服务定义生成代码。然而，所生成的代码可能是不期望的，因为它不与任何特定的RPC系统相关联，并且因此需要针对一个系统进行编码的更多级别的间接代码。如果您不希望生成此代码，请将此行添加到文件中： 1option cc_generic_services = false; 如果不给出上述任何一行，则该选项默认 false为通用服务已被弃用。（请注意，在2.4.0之前，该选项默认为true） 基于.proto语言服务定义的RPC系统应该提供插件来为系统生成代码。这些插件可能要求抽象服务被禁用，以便它们可以生成自己的同名的类。插件是新版本2.3.0（2010年1月）。 本节的其余部分描述了启用抽象服务时协议缓冲区编译器生成的内容。 Interface给定服务定义： 123service Foo &#123; rpc Bar(FooRequest) returns(FooResponse);&#125; 协议缓冲区编译器将生成一个类Foo来表示此服务。 Foo将为服务定义中定义的每个方法设置虚拟方法。在这种情况下，该方法Bar定义为： 12virtual void Bar(RpcController* controller, const FooRequest* request, FooResponse* response, Closure* done); 参数等同于参数Service::CallMethod()，除了method参数是隐含的，request和response指定其确切类型。 这些生成的方法是虚的，但不是纯虚的。默认实现只需调用一个controller-&gt;SetFailed()错误消息，指示该方法未实现，然后调用回调done。实现自己的服务时，您必须对此生成的服务进行子类化，并根据需要实现其方法。 Foo子类Service接口。协议缓冲区编译器自动生成方法的实现Service如下： GetDescriptor：返回服务的ServiceDescriptor。 CallMethod：根据提供的方法描述符确定正在调用哪个方法，并直接调用它，将请求和响应消息对象降级到正确的类型。 GetRequestPrototype和GetResponsePrototype：返回给定方法的正确类型的请求或响应的默认实例。 还会生成以下静态方法： static ServiceDescriptor descriptor()：返回类型的描述符，其中包含有关此服务具有哪些方法及其输入和输出类型的信息。 Stub协议缓冲区编译器还生成每个服务接口的“stub”实现，由客户端希望向执行服务的服务器发送请求使用。对于Foo服务（上），Foo_Stub将定义存根实现。与嵌套消息类型一样，使用typedef Foo_Stub也可以被称为Foo::Stub。 Foo_Stub是一个子类Foo也实现了以下方法：123Foo_Stub(RpcChannel* channel)：构造在给定通道上发送请求的新存根。Foo_Stub(RpcChannel* channel, ChannelOwnership ownership)：构造一个新的存根，在给定的通道上发送请求，并且可能拥有该通道。如果ownership是，Service::STUB_OWNS_CHANNEL当存根对象被删除时，它也会删除该通道。RpcChannel* channel()：返回此存根的通道，传递给构造函数。 存根附加地将每个服务的方法实现为通道周围的包装器。调用一种方法简单地调用channel-&gt;CallMethod()。 协议缓冲库不包括RPC实现。但是，它包括将生成的服务类连接到您选择的任意任意RPC实现所需的所有工具。您只需要提供RpcChannel和的实现RpcController。有关service.h详细信息，请参阅文档。 Plugin Insertion Points要扩展C ++代码生成器的输出的代码生成器插件可以使用给定的插入点名称插入以下类型的代码。除非另有说明，否则每个插入点都显示在.pb.cc文件和.pb.h文件中。 includes：包含指令。 namespace_scope：属于文件包/命名空间但不在任何特定类中的声明。出现在所有其他命名空间范围代码之后。 global_scope：属于文件命名空间之外的顶层的声明。出现在文件的最后端。 class_scope:TYPENAME：属于消息类的成员声明。 TYPENAME是完整的原名，例如package.MessageType。在课后所有其他公开声明后出现。此插入点仅显示在.pb.h文件中。 不要生成依赖于标准代码生成器声明的私有类成员的代码，因为这些实现细节可能会在将来版本的协议缓冲区中更改。","categories":[{"name":"技术堆栈","slug":"技术堆栈","permalink":"http://maxiaoyuelun.github.io/categories/技术堆栈/"}],"tags":[{"name":"c++","slug":"c","permalink":"http://maxiaoyuelun.github.io/tags/c/"},{"name":"protobuf","slug":"protobuf","permalink":"http://maxiaoyuelun.github.io/tags/protobuf/"},{"name":"google","slug":"google","permalink":"http://maxiaoyuelun.github.io/tags/google/"}]},{"title":"批处理git命令","slug":"批处理git命令","date":"2017-07-13T04:55:35.000Z","updated":"2017-07-23T03:51:37.888Z","comments":true,"path":"2017/07/13/批处理git命令/","link":"","permalink":"http://maxiaoyuelun.github.io/2017/07/13/批处理git命令/","excerpt":"每次更新博客，都需要输入大量指令来同步github，那么是否可以批处理这些命令使之自动之行？ 当然可以。","text":"每次更新博客，都需要输入大量指令来同步github，那么是否可以批处理这些命令使之自动之行？ 当然可以。 比如，我在hexo文件夹下有hexo博客文件，那么我只需在此创建upload.sh文件并输入： 12345678hexo cleanhexo ghexo dgit statusgit add -Agit add -ugit commit -m \"Update at $(date)\"git push origin master:mydesktop 创建好之后，在git bash中输入： 1./upload.sh 就会自动执行这一系列指令，省去了好多麻烦，敲一下，等待、喝杯咖啡、去个洗手间！！！","categories":[{"name":"技术堆栈","slug":"技术堆栈","permalink":"http://maxiaoyuelun.github.io/categories/技术堆栈/"}],"tags":[{"name":"git","slug":"git","permalink":"http://maxiaoyuelun.github.io/tags/git/"},{"name":"bash","slug":"bash","permalink":"http://maxiaoyuelun.github.io/tags/bash/"}]},{"title":"windows右键cmd","slug":"windows右键cmd","date":"2017-07-13T04:54:28.000Z","updated":"2017-07-23T03:51:37.873Z","comments":true,"path":"2017/07/13/windows右键cmd/","link":"","permalink":"http://maxiaoyuelun.github.io/2017/07/13/windows右键cmd/","excerpt":"在使用windows操作系统的时候，常常需要win+R打开cmd窗口，在此特记简单快捷方法如下： 按住shift键在指定文件夹下右击鼠标出现“在此处打开命令窗口(W)”，点击此，就会在指定文件夹下打开cmd。","text":"在使用windows操作系统的时候，常常需要win+R打开cmd窗口，在此特记简单快捷方法如下： 按住shift键在指定文件夹下右击鼠标出现“在此处打开命令窗口(W)”，点击此，就会在指定文件夹下打开cmd。","categories":[{"name":"技术堆栈","slug":"技术堆栈","permalink":"http://maxiaoyuelun.github.io/categories/技术堆栈/"}],"tags":[{"name":"windows","slug":"windows","permalink":"http://maxiaoyuelun.github.io/tags/windows/"}]},{"title":"glog初步体验","slug":"glog初步体验","date":"2017-07-13T04:09:05.000Z","updated":"2017-07-13T05:20:05.000Z","comments":true,"path":"2017/07/13/glog初步体验/","link":"","permalink":"http://maxiaoyuelun.github.io/2017/07/13/glog初步体验/","excerpt":"最近看caffe源码，希望对源码中的每个知识点都吃透，遇到不会的记录。今天仅记录glog的一段测试代码，详细TBD。","text":"最近看caffe源码，希望对源码中的每个知识点都吃透，遇到不会的记录。今天仅记录glog的一段测试代码，详细TBD。 123456789101112131415#include &lt;iostream&gt;#include &lt;glog\\logging.h&gt;using namespace std;using namespace google;int main()&#123; google::InitGoogleLogging(\"\"); google::SetLogDestination(google::GLOG_INFO, \"./myInfo\"); LOG(INFO) &lt;&lt; \"This is a message!\"; int a = 2; CHECK_GT(a, 3) &lt;&lt; \"a is little than 3!\"; google::ShutdownGoogleLogging(); return 0;&#125;","categories":[{"name":"技术堆栈","slug":"技术堆栈","permalink":"http://maxiaoyuelun.github.io/categories/技术堆栈/"}],"tags":[{"name":"google","slug":"google","permalink":"http://maxiaoyuelun.github.io/tags/google/"},{"name":"glog","slug":"glog","permalink":"http://maxiaoyuelun.github.io/tags/glog/"}]},{"title":"类之虚函数,纯虚函数和普通函数","slug":"类之虚函数纯虚函数和普通函数","date":"2017-07-07T09:03:54.000Z","updated":"2017-07-23T03:51:37.888Z","comments":true,"path":"2017/07/07/类之虚函数纯虚函数和普通函数/","link":"","permalink":"http://maxiaoyuelun.github.io/2017/07/07/类之虚函数纯虚函数和普通函数/","excerpt":"本篇文章主要介绍了C++中的普通成员函数、虚函数以及纯虚函数,非常的详细，有需要的朋友可以参考下。 普通成员函数是静态编译的，没有运行时多态，只会根据指针或引用的“字面值”类对象，调用自己的普通函数； 虚函数为了重载和多态的需要，在基类中定义的，即便定义为空； 纯虚函数是在基类中声明的虚函数，它可以再基类中有定义，且派生类必须定义自己的实现方法。","text":"本篇文章主要介绍了C++中的普通成员函数、虚函数以及纯虚函数,非常的详细，有需要的朋友可以参考下。 普通成员函数是静态编译的，没有运行时多态，只会根据指针或引用的“字面值”类对象，调用自己的普通函数； 虚函数为了重载和多态的需要，在基类中定义的，即便定义为空； 纯虚函数是在基类中声明的虚函数，它可以再基类中有定义，且派生类必须定义自己的实现方法。 假设我们有三个类Person、Teacher、Student它们之间的关系如下： 类的关系图 Demo-1根据这个类图，我们有下面的代码实现 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849#ifndef __OBJEDT_H__#define __OBJEDT_H__#include &lt;string&gt;#include &lt;iostream&gt;class Person&#123;public: Person(const string&amp; name, int age) : m_name(name), m_age(age)&#123;&#125; void ShowInfo()&#123; cout &lt;&lt; \"姓名：\" &lt;&lt; m_name &lt;&lt; endl; cout &lt;&lt; \"年龄：\" &lt;&lt; m_age &lt;&lt; endl; &#125;protected: string m_name; //姓名 int m_age; //年龄&#125;;class Teacher : public Person&#123;public: Teacher(const string&amp; name, int age, const string&amp; title): Person(name, age), m_title(title)&#123;&#125; void ShowInfo()&#123; cout &lt;&lt; \"姓名：\" &lt;&lt; m_name &lt;&lt; endl; cout &lt;&lt; \"年龄：\" &lt;&lt; m_age &lt;&lt; endl; cout &lt;&lt; \"职称：\" &lt;&lt; m_title &lt;&lt; endl; &#125;private: string m_title; //职称&#125;;class Student : public Person&#123;public: Student(const string&amp; name, int age, int studyId): Person(name, age), m_studyId(studyId)&#123;&#125; void ShowInfo()&#123; cout &lt;&lt; \"姓名：\" &lt;&lt; m_name &lt;&lt; endl; cout &lt;&lt; \"年龄：\" &lt;&lt; m_age &lt;&lt; endl; cout &lt;&lt; \"学号：\" &lt;&lt; m_studyId &lt;&lt; endl; &#125;private: int m_studyId; //学号&#125;;#endif //__OBJEDT_H__ 测试代码： 1234567891011121314void test()&#123; Person* pPerson = new Person(\"张三\", 22); Teacher* pTeacher = new Teacher(\"李四\", 35, \"副教授\"); Student* pStudent = new Student(\"王五\", 18, 20151653); pPerson-&gt;ShowInfo(); cout &lt;&lt; endl; pTeacher-&gt;ShowInfo(); cout &lt;&lt; endl; pStudent-&gt;ShowInfo(); cout &lt;&lt; endl; delete pPerson; delete pTeacher; delete pStudent;&#125; 结果： 12345678910姓名：张三 年龄：22姓名：李四 年龄：35 职称：副教授姓名：王五 年龄：18 学号：20151653 说明：这里的ShowInfo就是一个普通的函数。pPerson、pTeacher和pStudent三个对象调用ShowInfo分别展示自己的信息。我们知道：父类的指针是可以指向子类的对象的。我们把上面的测试代码稍微改一下： Demo-21234567891011121314void test()&#123; Person* pPerson = new Person(&quot;张三&quot;, 22); Person* pTeacher = new Teacher(&quot;李四&quot;, 35, &quot;副教授&quot;); Person* pStudent = new Student(&quot;王五&quot;, 18, 20151653); pPerson-&gt;ShowInfo(); cout &lt;&lt; endl; pTeacher-&gt;ShowInfo(); cout &lt;&lt; endl; pStudent-&gt;ShowInfo(); cout &lt;&lt; endl; delete pPerson; delete pTeacher; delete pStudent;&#125; 结果： 12345678姓名：张三 年龄：22姓名：李四 年龄：35姓名：王五 年龄：18 这时，pTeacher和pStudent只输出了姓名和年龄，并没有输出子类所具有的特性(职称和学号)。 这应该不是你期望的结果，你可能期望pTeacher和pStudent输出老师和学生的完整信息，这时就需要用虚函数。 虚函数 我们把Person中的ShowInfo成员改成虚函数(在前面加上virtual)，代码如下： Demo-3123456789101112class Person&#123;public: Person(const string&amp; name, int age) : m_name(name), m_age(age)&#123;&#125; virtual void ShowInfo()&#123; cout &lt;&lt; &quot;姓名：&quot; &lt;&lt; m_name &lt;&lt; endl; cout &lt;&lt; &quot;年龄：&quot; &lt;&lt; m_age &lt;&lt; endl; &#125;protected: string m_name; //姓名 int m_age; //年龄&#125;; 在执行上面[Demo-2]中的测试代码，得到我们想到的结果： 12345678910姓名：张三 年龄：22姓名：李四 年龄：35 职称：副教授姓名：王五 年龄：18 学号：20151653 虚函数用法要点： 虚函数的声明方式：virtual RETURN_TYPE functionName(ARGS 参数列表); 虚函数作用：现实C++中的多态，进行动态绑定(父类指针可指向子类的对象)，直到运行时才知道要调用哪个版本(哪个类定义)的函数； 我们必要对虚函数进行定义； 一旦父类的成员函数声明virtual，其子类的函数不管有没有声明为virtual，都是虚函数； 如果虚函数使用默认实参，父类和子类定义的默认实参最好一致。 Demo-4针对第4点说明： 12345678910111213141516class Person&#123;public: Person(const string&amp; name, int age) : m_name(name), m_age(age)&#123;&#125; virtual void ShowInfo()&#123; cout &lt;&lt; &quot;姓名：&quot; &lt;&lt; m_name &lt;&lt; endl; cout &lt;&lt; &quot;年龄：&quot; &lt;&lt; m_age &lt;&lt; endl; &#125; string GetName(); //正确，普通函数如果不被使用，可以只有声明没有定义 virtual int GetAge(); //错误，虚函数必须要有定义，即使是一个空实现,因为编译器无法确定会使用哪个函数protected: string m_name; //姓名 int m_age; //年龄&#125;; Demo-5针对第5点进行说明：设计我们的类如下定义。1234567891011121314151617181920212223class Person&#123;public: virtual void SetAge(int age = 0)&#123; m_age = age; &#125; //... 省略&#125;;class Teacher : public Person&#123;public: virtual void SetAge(int age = 1)&#123; m_age = age; &#125; //... 省略&#125;;class Student : public Person&#123;public: virtual void SetAge(int age = 2)&#123; m_age = age; &#125; //... 省略&#125;; 测试1： 1234567891011121314151617181920void test()&#123; Person* pPerson = new Person(&quot;张三&quot;, 22); Teacher* pTeacher = new Teacher(&quot;李四&quot;, 35, &quot;副教授&quot;); Student* pStudent = new Student(&quot;王五&quot;, 18, 20151653); pPerson-&gt;SetAge(); pTeacher-&gt;SetAge(); pStudent-&gt;SetAge(); pPerson-&gt;ShowInfo(); cout &lt;&lt; endl; pTeacher-&gt;ShowInfo(); cout &lt;&lt; endl; pStudent-&gt;ShowInfo(); cout &lt;&lt; endl; delete pPerson; delete pTeacher; delete pStudent;&#125; 结果： 12345678910姓名：张三 年龄：0姓名：李四 年龄：1 职称：副教授姓名：王五 年龄：2 学号：20151653 测试2： 123456789101112131415161718192021void test()&#123; Person* pPerson = new Person(&quot;张三&quot;, 22); Person* pTeacher = new Teacher(&quot;李四&quot;, 35, &quot;副教授&quot;); Person* pStudent = new Student(&quot;王五&quot;, 18, 20151653); pPerson-&gt;SetAge(); pTeacher-&gt;SetAge(); pStudent-&gt;SetAge(); pPerson-&gt;ShowInfo(); cout &lt;&lt; endl; pTeacher-&gt;ShowInfo(); cout &lt;&lt; endl; pStudent-&gt;ShowInfo(); cout &lt;&lt; endl; delete pPerson; delete pTeacher; delete pStudent;&#125; 结果： 12345678910姓名：张三 年龄：0姓名：李四 年龄：0 职称：副教授姓名：王五 年龄：0 学号：20151653 纯虚函数在上面的例子中，我们假设所有的人都要工作，但不同的人工作的方式不同。 于是我们就要强制要求继承自Person的子类都要有工作的方法，这就需要纯虚函数。 定义如下： Demo-61234567class Person&#123;public: //... 省略 virtual void DoWork() = 0; //... 省略&#125;; 但此时我们编译 1Person* pPerson = new Person(&quot;张三&quot;, 22); 这句话时会报错:1error C2259: ‘Person&apos; : cannot instantiate abstract class 这是因为我们并没有为Person实现DoWork方法，而包含纯虚函数的类是一个抽象的类，抽象类不能被实例化。 于是我们在子类中对它实现如下： Demo-712345678910111213141516171819class Teacher : public Person&#123;public: //... 省略 virtual void DoWork()&#123; cout &lt;&lt; &quot;教书...&quot; &lt;&lt; endl; &#125; //... 省略&#125;;class Student : public Person&#123;public: //... 省略 virtual void DoWork()&#123; cout &lt;&lt; &quot;学习...&quot; &lt;&lt; endl; &#125; //... 省略&#125;; 没用DoWork方法: 123456789101112void test()&#123; Person* pTeacher = new Teacher(&quot;李四&quot;, 35, &quot;副教授&quot;); Person* pStudent = new Student(&quot;王五&quot;, 18, 20151653); pTeacher-&gt;DoWork(); cout &lt;&lt; endl; pStudent-&gt;DoWork(); cout &lt;&lt; endl; delete pTeacher; delete pStudent;&#125; 结果： 12教书…学习… 纯虚函数用法要点： 纯虚函数的声明方式：1virtual RETURN_TYPE functionName(ARGS 参数列表) = 0; 含有纯虚函数的类是一个抽象的类，抽象类不能被实例化。 包含纯虚函数的抽象类常用来当作对外的接口，说明这个类有什么功能，而没有具体的实现，基体的实现交由子类完成。 通过以上对普通成员函数、虚函数以及纯虚函数的介绍，希望可以对大家有所帮助。 参考资料 原文链接C++之普通成员函数、虚函数以及纯虚函数的区别与用法要点","categories":[{"name":"技术堆栈","slug":"技术堆栈","permalink":"http://maxiaoyuelun.github.io/categories/技术堆栈/"}],"tags":[{"name":"c","slug":"c","permalink":"http://maxiaoyuelun.github.io/tags/c/"},{"name":"c++","slug":"c","permalink":"http://maxiaoyuelun.github.io/tags/c/"}]},{"title":"白衬衫","slug":"白衬衫","date":"2017-07-06T08:48:27.000Z","updated":"2018-04-15T07:17:04.453Z","comments":true,"path":"2017/07/06/白衬衫/","link":"","permalink":"http://maxiaoyuelun.github.io/2017/07/06/白衬衫/","excerpt":"袁野夕的《白衬衫》","text":"袁野夕的《白衬衫》","categories":[{"name":"音乐之声","slug":"音乐之声","permalink":"http://maxiaoyuelun.github.io/categories/音乐之声/"}],"tags":[{"name":"袁野夕","slug":"袁野夕","permalink":"http://maxiaoyuelun.github.io/tags/袁野夕/"}]},{"title":"VS创建动态链接库DLL","slug":"VS创建动态链接库DLL","date":"2017-07-06T08:47:08.000Z","updated":"2017-07-23T03:51:37.857Z","comments":true,"path":"2017/07/06/VS创建动态链接库DLL/","link":"","permalink":"http://maxiaoyuelun.github.io/2017/07/06/VS创建动态链接库DLL/","excerpt":"官网链接：演练：创建和使用动态链接库 (C++)","text":"官网链接：演练：创建和使用动态链接库 (C++)","categories":[{"name":"技术堆栈","slug":"技术堆栈","permalink":"http://maxiaoyuelun.github.io/categories/技术堆栈/"}],"tags":[{"name":"visual studio","slug":"visual-studio","permalink":"http://maxiaoyuelun.github.io/tags/visual-studio/"},{"name":"dll","slug":"dll","permalink":"http://maxiaoyuelun.github.io/tags/dll/"}]},{"title":"matlab中的P代码","slug":"matlab中的P代码","date":"2017-06-23T08:26:32.000Z","updated":"2017-07-23T03:51:37.873Z","comments":true,"path":"2017/06/23/matlab中的P代码/","link":"","permalink":"http://maxiaoyuelun.github.io/2017/06/23/matlab中的P代码/","excerpt":"TBD 简单来说就是matlab中的加密代码，比M文件的优先级高，在和M文件同时存在时，优先调用P文件。","text":"TBD 简单来说就是matlab中的加密代码，比M文件的优先级高，在和M文件同时存在时，优先调用P文件。","categories":[{"name":"技术堆栈","slug":"技术堆栈","permalink":"http://maxiaoyuelun.github.io/categories/技术堆栈/"}],"tags":[{"name":"matlab","slug":"matlab","permalink":"http://maxiaoyuelun.github.io/tags/matlab/"}]},{"title":"一别经年","slug":"一别经年","date":"2017-06-20T01:31:27.000Z","updated":"2018-05-04T05:39:39.588Z","comments":true,"path":"2017/06/20/一别经年/","link":"","permalink":"http://maxiaoyuelun.github.io/2017/06/20/一别经年/","excerpt":"半夜，被鼻炎折磨，以致于睡不着，辗转反侧，手机本是放下复又拿起。APP翻来覆去，直至终于没啥可看。 半夜，总是怀念。","text":"半夜，被鼻炎折磨，以致于睡不着，辗转反侧，手机本是放下复又拿起。APP翻来覆去，直至终于没啥可看。 半夜，总是怀念。 这学期没回过家，端午假期，于是早就计划利用假期回一趟。开始一切都好，而后母亲大人告诉我你陪你爸去医院看看，才知道父亲身体出了点状况。人到中年，难免会有这样或那样的病，作为人子而且是独生子女听到这样的话有点慌，毕竟没有经历过。焦躁，无助。正是农忙时，家里早已没有地了，只有屋前屋后的菜地，平时上班的父母还折腾点农作物，恰逢农忙，父亲执意要等农忙之后再去看。其实没啥可忙，就那点地，用我的话说，这还没你们一天的工资多呢。作为从那个年代走过来的父亲，多少会对我的言语反感，其实我也是关心则乱。无奈，本来在家甩手掌柜的我，也操起家伙帮他把作物收上来。用父亲的话说，他不弄，等他做完手术只有我妈一个人弄，她哪弄得过来，上班那么累。父亲还是心疼母亲的。于是执意倔强在手术前把该弄的弄好了。为此，我不得不延长假期。工作日就陪父亲去医院，医生说了手术，意料之中。于是就准备着，其实我也不知道准备什么，第一次经历。尽管医生说小手术，但还是担心，后来看是多余的。第一天手术叫了叔伯过来帮忙看着点，从进手术室开始无奈心慌，母亲也请了假，不知道她当时的心理。一小时过后，医生出来，手术顺利。期间我跑上跑下忙来忙去缓解自己紧张的情绪。后来就是漫长的陪床，也有埋怨父母不早点来看。后来静下来想想，又没多说什么，多说无益。总之，这个假期的经历难忘。父亲第三天就能下地慢慢走动了，于是父母开始催我回学校。用室友的话说，谁不心疼自己的孩子。而怕母亲忙不过来，所以一直待到快出院才回南京。父母年纪越大，开始越像小孩。我们之间的角色开始慢慢对调。这时，才感觉父母老了，头上已经有了白发，岁月无情镌刻了道道皱纹。此时才真正理解朱自清的背影所要表达的情感。 一别经年，曾是少年。 快到而立之年的我，难免怅然若失。身边好友一个个成家立业，回头看看自己，还在为自己心中的那点执着奋斗。现在回想，其实读不读这个博士都没有关系，工作只是工作，人还有其他追求。有时我走在路上，透过镜片看人来人往，有时也会想这个合适吗，然后擦肩而过。 习惯独来独往之后，可以肆无忌惮做想做的事，比如死宅。死宅之后，看了好多电影，弹了好多首歌，最后又吃了好多外卖。于是在体重飙升之后，又急忙开始跑步减肥。美其名曰，锻炼身体。于是开始收集网上的教程，指望能够毕其功于一役。可是，哪有这么美得好事。凡事因果，总有轮回。最近异形上映了，筹划着去看啊，然后瞅着一个人去没意思就没有然后了。有时，也会更新博客，想记录点滴，提笔忘词，遂又作罢，本来生活博客硬是写成了技术札记。也算是小有所得，无心插柳。 现在应该三更天了吧，鼻炎折磨好多了，明天应该快好了吧，俗话病来如山倒。外面还有三两毕业生在说话，以前的我大概也是这样。一别经年，三号路，下马坊，你曾是少年。 丁酉丙午戊寅仅此小记聊慰长夜。","categories":[{"name":"琴棋书画","slug":"琴棋书画","permalink":"http://maxiaoyuelun.github.io/categories/琴棋书画/"}],"tags":[]},{"title":"visio安装配套","slug":"visio安装配套","date":"2017-06-15T01:25:58.000Z","updated":"2017-07-23T03:51:37.873Z","comments":true,"path":"2017/06/15/visio安装配套/","link":"","permalink":"http://maxiaoyuelun.github.io/2017/06/15/visio安装配套/","excerpt":"某由于实验室电脑即将坏掉，赶紧在自己的电脑上装上office套装，奈何以前装了好多次，好多流程还得重复试一遍，特此笔记，原谅老年人的健忘症。 由于是在学校，很多东西有学校特供版本，免去查找各种破解工具，某在学校微软正版化下载office 2013 professional plus安装后，不知道该装2013 32位还是64位版本，经测试之后，需下载32位版本进行安装。 好了，装完用学校的激活工具激活就可以开心的写论文了！！！👏👏👏👏👏👏👏👏","text":"某由于实验室电脑即将坏掉，赶紧在自己的电脑上装上office套装，奈何以前装了好多次，好多流程还得重复试一遍，特此笔记，原谅老年人的健忘症。 由于是在学校，很多东西有学校特供版本，免去查找各种破解工具，某在学校微软正版化下载office 2013 professional plus安装后，不知道该装2013 32位还是64位版本，经测试之后，需下载32位版本进行安装。 好了，装完用学校的激活工具激活就可以开心的写论文了！！！👏👏👏👏👏👏👏👏","categories":[{"name":"技术堆栈","slug":"技术堆栈","permalink":"http://maxiaoyuelun.github.io/categories/技术堆栈/"}],"tags":[{"name":"office","slug":"office","permalink":"http://maxiaoyuelun.github.io/tags/office/"},{"name":"visio","slug":"visio","permalink":"http://maxiaoyuelun.github.io/tags/visio/"}]},{"title":"Chrome油猴脚本","slug":"Chrome油猴脚本","date":"2017-06-13T08:07:46.000Z","updated":"2017-12-04T06:08:28.674Z","comments":true,"path":"2017/06/13/Chrome油猴脚本/","link":"","permalink":"http://maxiaoyuelun.github.io/2017/06/13/Chrome油猴脚本/","excerpt":"跑程序之间，给大家推荐一个小程序，叫油猴脚本，这是应用在浏览器中的脚本，很方便，安装很简单，在此不作介绍。 说说优点吧，可以跳过视频广告，可以直接观看VIP视频，还有诸多好处等你发现！！！！！！","text":"跑程序之间，给大家推荐一个小程序，叫油猴脚本，这是应用在浏览器中的脚本，很方便，安装很简单，在此不作介绍。 说说优点吧，可以跳过视频广告，可以直接观看VIP视频，还有诸多好处等你发现！！！！！！","categories":[{"name":"技术堆栈","slug":"技术堆栈","permalink":"http://maxiaoyuelun.github.io/categories/技术堆栈/"}],"tags":[{"name":"chrome","slug":"chrome","permalink":"http://maxiaoyuelun.github.io/tags/chrome/"}]},{"title":"Windows10安装多版本Python","slug":"Windows10安装多版本Python","date":"2017-06-11T12:55:31.000Z","updated":"2017-07-23T03:51:37.873Z","comments":true,"path":"2017/06/11/Windows10安装多版本Python/","link":"","permalink":"http://maxiaoyuelun.github.io/2017/06/11/Windows10安装多版本Python/","excerpt":"本文主要简要记录在同一台windows10系统的电脑上安装多版本python用于科学计算。","text":"本文主要简要记录在同一台windows10系统的电脑上安装多版本python用于科学计算。 记录主要服务以后。 由于anaconda集成了大量的python库，所以在此用anaconda代替。 在anaconda官网下载最新的64位版本并安装，直到本文开始，python版本为3.6，注意：在安装过程中勾选上conda添加到系统路径以及python作为系统默认python版本。 上面这一步很简单，接下来完全是命令行操作。 123456789101112131415# 创建一个名为python35的环境，指定Python版本是3.5（不用管是3.5.x，conda会为我们自动寻找3.5.x中的最新版本）conda create -n python35 python=3.5# 或者用如下命令安装所有conda包conda create -n python35 python=3.5 anaconda # 安装好后，使用activate激活某个环境activate python35 # for Windows# 如果想返回默认的python 3.6环境，运行deactivate python35 # for Windows# 删除一个已有的环境conda remove --name python35 --all 就是如此简单，如果需要安装2.7版本也一样。 参考资料 Anaconda使用总结","categories":[{"name":"技术堆栈","slug":"技术堆栈","permalink":"http://maxiaoyuelun.github.io/categories/技术堆栈/"}],"tags":[{"name":"python","slug":"python","permalink":"http://maxiaoyuelun.github.io/tags/python/"},{"name":"anaconda","slug":"anaconda","permalink":"http://maxiaoyuelun.github.io/tags/anaconda/"}]},{"title":"邂逅日本","slug":"邂逅日本","date":"2017-05-15T11:42:31.000Z","updated":"2018-05-04T05:19:11.060Z","comments":true,"path":"2017/05/15/邂逅日本/","link":"","permalink":"http://maxiaoyuelun.github.io/2017/05/15/邂逅日本/","excerpt":"TBD","text":"TBD 借开会时机，日本一游。 历史原因，本人对日本并无好感，总认为是一个无廉耻的民族。经此一游，某些方面改变自己的认识，从短暂的几天经历来说，至少日本人在表面上做的还是值得称赞的。我这里说表面上，因为时间短暂，不敢下最终结论，可能他们仅仅表现在表面上。如《菊与刀》所述，他们的另一面在短暂的时间里并不能完全体会到。 先这样吧，工作时间到了。","categories":[{"name":"琴棋书画","slug":"琴棋书画","permalink":"http://maxiaoyuelun.github.io/categories/琴棋书画/"}],"tags":[]},{"title":"caffe学习资料收集","slug":"caffe学习资料收集","date":"2017-04-25T12:37:10.000Z","updated":"2017-07-13T04:10:10.000Z","comments":true,"path":"2017/04/25/caffe学习资料收集/","link":"","permalink":"http://maxiaoyuelun.github.io/2017/04/25/caffe学习资料收集/","excerpt":"一些有关caffe的资料收集，不定期更新！","text":"一些有关caffe的资料收集，不定期更新！ simshang博客 FCN in Caffe Fully Convolutional Networks PyCaffe in Practice caffe如何自定义网络以及自定义层python版 caffe如何自定义网络以及自定义层（python）（一） caffe如何自定义网络以及自定义层（python）（二） caffe如何自定义网络以及自定义层（python）（三） caffe如何自定义网络以及自定义层（python）（四） caffe如何自定义网络以及自定义层（python）（五） caffe如何自定义网络以及自定义层（python）（六） Caffe学习记录 caffe windows 学习第一步：编译和安装（vs2012+win 64) caffe windows学习：第一个测试程序 Caffe学习系列(1)：安装配置ubuntu14.04+cuda7.5+caffe+cudnn Caffe学习系列(2)：数据层及参数 Caffe学习系列(3)：视觉层（Vision Layers)及参数 Caffe学习系列(4)：激活层（Activiation Layers)及参数 Caffe学习系列(5)：其它常用层及参数 Caffe学习系列(6)：Blob,Layer and Net以及对应配置文件的编写 Caffe学习系列(7)：solver及其配置 Caffe学习系列(8)：solver优化方法 Caffe学习系列(9)：运行caffe自带的两个简单例子 Caffe学习系列(10)：命令行解析 Caffe学习系列(11)：图像数据转换成db（leveldb/lmdb)文件 Caffe学习系列(12)：训练和测试自己的图片 Caffe学习系列(13)：数据可视化环境（python接口)配置 Caffe学习系列(14)：初识数据可视化 Caffe学习系列(15)：计算图片数据的均值 Caffe学习系列(16)：caffemodel可视化 Caffe学习系列(17)：模型各层数据和参数可视化 Caffe学习系列(18): 绘制网络模型 Caffe学习系列(19): 绘制loss和accuracy曲线 Caffe学习系列(20)：用训练好的caffemodel来进行分类 Caffe学习系列(21)：caffe图形化操作工具digits的安装与运行 Caffe学习系列(22)：caffe图形化操作工具digits运行实例 Caffe学习系列(23)：如何将别人训练好的model用到自己的数据上 caffe的python接口学习（1）：生成配置文件 caffe的python接口学习（2）：生成solver文件 caffe的python接口学习（3）：训练模型（training) caffe的python接口学习（4）：mnist实例—手写数字识别 caffe的python接口学习（5）：生成deploy文件 caffe的python接口学习（6）：用训练好的模型（caffemodel）来分类新的图片 caffe的python接口学习（7）：绘制loss和accuracy曲线 caffe的python接口学习（8）：caffemodel中的参数及特征的抽取 caffe代码阅读 caffe代码阅读1：blob的实现细节-2016.3.14 caffe代码阅读2：common的实现细节-2016.3.14 caffe代码阅读3：data_reader、internalthread以及blocking_queue的实现细节-2016.3.15 caffe代码阅读4：DataTransformer以及io的实现细节-2016.3.16 caffe代码阅读5：Layer的实现细节-2016.3.17 caffe代码阅读6：Filler的实现细节-2016.3.18 caffe代码阅读7：LayerRegistry的实现细节-2016.3.18 caffe代码阅读8: Data_layers的实现细节（各个数据读取层的实现细节） 2016.3.25-28 caffe代码阅读9：SyncedMemory的实现细节-2016.3.28 caffe代码阅读10：Caffe中卷积的实现细节（涉及到BaseConvolutionLayer、ConvolutionLayer、im2col等）-2016.4.3 Caffe代码阅读11：absval_layer层的实现 Caffe各版本与源码全透析 大魔导师：从零开始山寨caffe 从零开始山寨Caffe·零：必先利其器 从零开始山寨Caffe·壹：仰望星空与脚踏实地 从零开始山寨Caffe·贰：主存模型 从零开始山寨Caffe·叁：全局线程管理器 从零开始山寨Caffe·肆：线程系统 从零开始山寨Caffe·伍：Protocol Buffer简易指南 从零开始山寨Caffe·陆：IO系统(一) 从零开始山寨Caffe·柒：KV数据库 从零开始山寨Caffe·捌：IO系统(二) 从零开始山寨Caffe·玖：BlobFlow 从零开始山寨Caffe·拾：IO系统(三) 从零开始山寨Caffe·拾贰：IO系统(四) caffe使用gdb单步调试及源码阅读 （Caffe，LeNet）IDE单步调试（一） （Caffe，LeNet）网络训练流程（二） （Caffe，LeNet）初始化训练网络（三） （Caffe，LeNet）初始化测试网络（四） （Caffe，LeNet）前向计算（五） （Caffe，LeNet）反向传播（六） （Caffe，LeNet）权值更新（七） （Caffe）基本类Blob，Layer，Net（一） （Caffe）基本类Solver、Caffe、Batch（二） （Caffe）基本类InternalThread（三） （Caffe）基本类DataReader、QueuePair、Body（四） （Caffe）基本类Filter（五） 知乎专栏：黑客与画家 深度学习源码解读-ch0-talk is cheap 深度学习源码解读-ch1-JSON is awesome 深度学习源码解读-ch3-部署 Caffe 网络 深度学习源码解读-ch4-Caffe 中的设计模式 知乎专栏：无痛的机器学习 Caffe代码阅读——层次结构 Caffe源码阅读——Net组装 Caffe代码阅读——Solver Caffe源码阅读——DataLayer&amp;Data Transformer 知乎专栏：晓雷机器学习笔记 caffe源码解析-开篇 caffe源码解析-命令行接口 caffe源码解析-solver_factory Caffe Source Code AnalysisCSDN博客：joshua_1988 VS2013配置Caffe卷积神经网络工具（64位Windows 7）——准备依赖库 VS2013配置Caffe卷积神经网络工具（64位Windows 7）——建立工程","categories":[{"name":"技术堆栈","slug":"技术堆栈","permalink":"http://maxiaoyuelun.github.io/categories/技术堆栈/"}],"tags":[{"name":"caffe","slug":"caffe","permalink":"http://maxiaoyuelun.github.io/tags/caffe/"}]},{"title":"世界末日","slug":"世界末日","date":"2017-04-22T10:17:49.000Z","updated":"2019-03-13T14:38:56.417Z","comments":true,"path":"2017/04/22/世界末日/","link":"","permalink":"http://maxiaoyuelun.github.io/2017/04/22/世界末日/","excerpt":"翻微博突然听见这首歌，有点感慨。网易没有外链，找了个视频。","text":"翻微博突然听见这首歌，有点感慨。网易没有外链，找了个视频。","categories":[{"name":"音乐之声","slug":"音乐之声","permalink":"http://maxiaoyuelun.github.io/categories/音乐之声/"}],"tags":[{"name":"周杰伦","slug":"周杰伦","permalink":"http://maxiaoyuelun.github.io/tags/周杰伦/"}]},{"title":"电脑崩了之后hexo的处置","slug":"电脑崩了之后hexo的处置","date":"2017-04-21T12:47:55.000Z","updated":"2017-07-23T03:51:37.888Z","comments":true,"path":"2017/04/21/电脑崩了之后hexo的处置/","link":"","permalink":"http://maxiaoyuelun.github.io/2017/04/21/电脑崩了之后hexo的处置/","excerpt":"电脑崩溃之后，要重新更新博客是个麻烦的事，以下是个人的历程，现记录下来。","text":"电脑崩溃之后，要重新更新博客是个麻烦的事，以下是个人的历程，现记录下来。 既然电脑崩溃了，那么第一步是重新安装git和node.js。 之后初始化git，设置ssh并添加到github中。 另寻地方，新建文件夹Hexo。 右击git bash here。 1234npm install hexo-cli -ghexo init 将以前保存在github中的源文件下载下来，复制到Hexo文件夹中。 接下来： 123npm install hexo-deployer-git --savenpm install hexo-util --save 这样就可以进行上传到github pages中了。 至于上传源码到github中，我的处置方法是删除原来的源码repo并新建一个repo，然后先将Hexo：git init，再将其上传到repo中。","categories":[{"name":"技术堆栈","slug":"技术堆栈","permalink":"http://maxiaoyuelun.github.io/categories/技术堆栈/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"http://maxiaoyuelun.github.io/tags/hexo/"},{"name":"next","slug":"next","permalink":"http://maxiaoyuelun.github.io/tags/next/"}]},{"title":"你给我听好","slug":"你给我听好","date":"2017-04-21T12:01:01.000Z","updated":"2018-04-15T07:00:43.484Z","comments":true,"path":"2017/04/21/你给我听好/","link":"","permalink":"http://maxiaoyuelun.github.io/2017/04/21/你给我听好/","excerpt":"陈奕迅的《你给我听好》。","text":"陈奕迅的《你给我听好》。 音悦台 (function(){var player = new DPlayer({\"container\":document.getElementById(\"dplayer0\"),\"video\":{\"url\":\"http://hc.yinyuetai.com/uploads/videos/common/E5E20145DA11F0AC988D737DC01D85CB.flv?sc=916382da26ce80fb&br=769&vid=2047605&aid=157&area=HT&vst=0\"}});window.dplayers||(window.dplayers=[]);window.dplayers.push(player);})()","categories":[{"name":"音乐之声","slug":"音乐之声","permalink":"http://maxiaoyuelun.github.io/categories/音乐之声/"}],"tags":[{"name":"陈奕迅","slug":"陈奕迅","permalink":"http://maxiaoyuelun.github.io/tags/陈奕迅/"}]},{"title":"观眉山论剑","slug":"观眉山论剑","date":"2017-04-16T02:50:20.000Z","updated":"2017-07-23T03:51:37.888Z","comments":true,"path":"2017/04/16/观眉山论剑/","link":"","permalink":"http://maxiaoyuelun.github.io/2017/04/16/观眉山论剑/","excerpt":"腾讯观视频工作室出品的《眉山论剑》，很好的时事讲坛类节目，对自己是一个启迪。小时候自己什么都不懂，长大了之后目空一切，以为自己什么都懂，再到现在又发现自己还是什么都不懂。除了自己的专业知识以外，政治博弈这个知识在我这还是空白，也许这个节目能给自己和困惑的你一点启发。庆幸中国有如此一批超级大脑，才能为祖国人民创造如此安定的生活环境。他们用自己的大脑解析外国的阴谋阳谋，学以致用，这一点值得我辈学习。尤其想到节目中陈平研究员提到现在的媒体经济学者，估计就是大多数人，很容易被所谓新闻欺骗，联想到共产党人需要辩证的看待事情这一马克思原理，深有感触。以前的知识并没有白学，只是没有好好利用，活读书。再联想到有句话“半部论语治天下”，其实，人是真正活学了论语，而不是死靠论语来治理天下。回到起点来说，要活读书，化为己用，才能透过现象看到本质。","text":"腾讯观视频工作室出品的《眉山论剑》，很好的时事讲坛类节目，对自己是一个启迪。小时候自己什么都不懂，长大了之后目空一切，以为自己什么都懂，再到现在又发现自己还是什么都不懂。除了自己的专业知识以外，政治博弈这个知识在我这还是空白，也许这个节目能给自己和困惑的你一点启发。庆幸中国有如此一批超级大脑，才能为祖国人民创造如此安定的生活环境。他们用自己的大脑解析外国的阴谋阳谋，学以致用，这一点值得我辈学习。尤其想到节目中陈平研究员提到现在的媒体经济学者，估计就是大多数人，很容易被所谓新闻欺骗，联想到共产党人需要辩证的看待事情这一马克思原理，深有感触。以前的知识并没有白学，只是没有好好利用，活读书。再联想到有句话“半部论语治天下”，其实，人是真正活学了论语，而不是死靠论语来治理天下。回到起点来说，要活读书，化为己用，才能透过现象看到本质。 在此给出眉山论剑的视频链接，以供读者观看。 眉山论剑1：听其言不如观其行 眉山论剑2：不学经济，学孙子兵法 眉山论剑3：媒体经济学的伪命题 眉山论剑4：他们都错了 眉山论剑5：印度超越中国？ 眉山论剑6：中国是1900年的美国 要用科学的辩证眼光来看待问题，也许节目中的问题讲的是对的，也许讲的是不全面的，要有自己的认识，才能达到学习的目的。","categories":[{"name":"闲话桑麻","slug":"闲话桑麻","permalink":"http://maxiaoyuelun.github.io/categories/闲话桑麻/"}],"tags":[]},{"title":"摄影杂货铺","slug":"摄影杂货铺","date":"2017-04-07T10:51:37.000Z","updated":"2017-07-23T03:51:37.888Z","comments":true,"path":"2017/04/07/摄影杂货铺/","link":"","permalink":"http://maxiaoyuelun.github.io/2017/04/07/摄影杂货铺/","excerpt":"本文收集了平时看到的有关摄影的小知识，不定时更新。","text":"本文收集了平时看到的有关摄影的小知识，不定时更新。 好照片的秘诀 - 对比和冲突 新手学习摄影应该注意什么？ 所谓摄影眼，究竟是什么眼？ | 一点思路 学会调色，从理解HSL面板开始 如何突出画面中的主体？布拉德·皮特 告诉你 | 一点技巧","categories":[{"name":"琴棋书画","slug":"琴棋书画","permalink":"http://maxiaoyuelun.github.io/categories/琴棋书画/"}],"tags":[{"name":"摄影","slug":"摄影","permalink":"http://maxiaoyuelun.github.io/tags/摄影/"}]},{"title":"湖南","slug":"湖南行见","date":"2017-04-06T06:50:56.000Z","updated":"2018-05-04T05:19:24.316Z","comments":true,"path":"2017/04/06/湖南行见/","link":"","permalink":"http://maxiaoyuelun.github.io/2017/04/06/湖南行见/","excerpt":"TBD 留存，以后再写，简单说两句。","text":"TBD 留存，以后再写，简单说两句。 行程 南京到张家界 张家界到武陵源 武陵源到张家界 天门山 张家界到长沙 小建议想去玩的朋友需准备充足的时间，武陵源3天为宜。天门山完全是坐索道，其实没啥可玩的，时间仓促可以不去。长沙小吃还不错，时间匆忙，只去了橘子洲，还没玄武湖漂亮。好了就这么多，有空再写。","categories":[{"name":"琴棋书画","slug":"琴棋书画","permalink":"http://maxiaoyuelun.github.io/categories/琴棋书画/"}],"tags":[]},{"title":"一些感悟","slug":"一些感悟","date":"2017-04-06T06:46:17.000Z","updated":"2017-07-23T03:51:37.873Z","comments":true,"path":"2017/04/06/一些感悟/","link":"","permalink":"http://maxiaoyuelun.github.io/2017/04/06/一些感悟/","excerpt":"本文转载自：一些感悟，仅供本博留存观看，其它商业目的请与原文联系。","text":"本文转载自：一些感悟，仅供本博留存观看，其它商业目的请与原文联系。 首先要自律。这是最基本的。如果一个人不能控制自己的行为，那无法走出自己的路。像说到要做到，有规律地锻炼身体，勤奋努力，这些都是重要的。 接下来要跳出舒适区。举个例子，勤奋本来就是舒适区的一种。“勤能补拙”这个词是很好的，首先它说明现在处于“拙”的状态中，需要继续努力；其次，勤只能用来“补”拙，而不能让拙变巧，不是根本的解决方案。勤奋是一种惶惶然的状态，而不是一种满足的状态，勤奋意味着自己不如别人，于是得要花更多的时间去补救，别人干八小时就够了，自己得花十几个小时才能赶上。这种状态是不长久的，碰到出些小毛小病，或者家里有事，那就补不过来，就要掉队了。勤奋的用处是试错，是让自己在落后时可以多花点时间找到正确的方法，以达到和别人相当甚至更高的效率，从而提高自己的能力。别人是科班出身，我半路杀进来，当然要多花时间去补；别人学习效率高，我的效率不高，于是得要多花点时间去探索更好的方法。勤奋是暂态，它最终目的是找到更好的方法及时补上以离开这个状态，而不是以一直维持这个状态为荣。 不能按部就班，要随时作好把棋盘翻过来的准备，世事变化很快，以前的所有努力，不管经历过什么样的辛劳，全都是沉没成本，在必要时候都需要扔掉的，或许做了很多年方向A，时势告诉你情况不妙，要换成方向B，那就得坚决换。以前或许这个不常见，但是以后这样的事情会越来越多。干了十年方向A，人工智能把方向A吃掉了，然后马上转做方向B，做了五年，人工智能再把B吃掉，然后继续，如此往复。很多时候转变不是一朝一夕，而是靠滴水穿石的功夫，今天长进一点，明天长进一点，跟着领域一起变，若是一个人跑得比别人快，他就会在市场上稀缺并因此获得相对的安全。做研究的人都习惯这个，每天看新东西，每天打开思路，时刻承认自己老旧了几个月或者几周，马上拍拍屁股跟上。学会了这些再去教徒弟是饿不死师傅的，反而让师傅变得更厉害，因为师傅主动跳出来接受打脸，学得比徒弟快。对很多人来说这个比较难，特别是一直顺风顺水的。但若是一直不敢看外面的世界，那迟早有一天会被逼进去面对。与其被逼，不如提早一些主动跳进去。历史无数次以血的教训告诉了大家，适者生存乃永恒之铁律，人类在千万物种中杀出血路成为地球的主宰，也必将背负着这样的命运走向未来。一个人逃避，这个人会被淘汰，一个领域逃避，这个领域会被淘汰，一个国家逃避，这个国家就会被淘汰。 任何时候，自己一定是有错的，最可怕的不是自己错了，而是不知道自己哪里错，并且在错的方向上越走越远。如果周围有厉害的同事，这种感觉尤其强烈，碰上了随便讨论两句，就知道自己哪些知识不足，暗地里记下马上回去补。为此，主动发言积极讨论是很重要的，思维有碰撞才知道问题在哪里。我有时候觉得自己一直在悬崖边上走，也许之前走得还行，但那都过去了，下一步随时有可能踏进崖边的泥地即将摔倒。踏错了不要紧，及时发现自己错了收脚就行；怕的是一直走安稳的道，连悬崖长什么样都不知道了。前辈和老师们说的话，也非常有可能是错的，而身为后辈的我们，大任在于如何找出他们的错误来。找出了的话，能力就得到了提升。而自信，往往就是通过这种方式磨练出来的——为什么自己和别人不同？因为选了一条不一样的路。 再往上走，主次是要分清的。重要的要抓牢，不重要的要放手。有人读过很多文章看过很多书，勤勉自律好学爱问样样不缺，但门门都不精；有人事事亲为，务求完美，大事上往往把握不了。短木板理论是有问题的，大部分岗位不需要全才，要的是一专多能，要的是某方向很牛非常牛，相同程度的可以掰指头数过来，其它的过线就行，甚至不达标也无人关心。如果你不是专家，高薪聘请没有意义；如果你是专家，求全责备没有意义。人一天只有24小时，所以知道哪里要放弃是很重要的，很多时候，没有牺牲就没有得到，要得到就得付出代价，事前权衡利弊，事后愿赌服输。输了不要紧，再来一次。当然在现实中并没有那么惨烈的权衡，而往往是找到了自己的方向，自然而然地就向这个方向发展下去，这时候主要的阻力，就在于登顶之难而非选择之痛。然而，即便生于风平浪静的和平年代，觉悟依然要有，或许将来有一天，得要做出这样的决断。 最后，不要在优越感中停止自己的脚步。名利于人最可怕的莫过于此，分明刚刚启程，但欢呼声让你觉得已然冲线，本来要万里长征，却变成了百米短跑，接受完了鲜花之后，就再也看不见远处的风景。其实境界到了或是未到，只有自己知道。跋山涉水，风餐露宿，鼓掌的是别人，度化的是自己。","categories":[{"name":"闲话桑麻","slug":"闲话桑麻","permalink":"http://maxiaoyuelun.github.io/categories/闲话桑麻/"}],"tags":[{"name":"转载","slug":"转载","permalink":"http://maxiaoyuelun.github.io/tags/转载/"}]},{"title":"上传本地博客源码到git服务器","slug":"上传本地博客源码到git服务器","date":"2017-03-28T05:43:48.000Z","updated":"2017-07-23T03:51:37.873Z","comments":true,"path":"2017/03/28/上传本地博客源码到git服务器/","link":"","permalink":"http://maxiaoyuelun.github.io/2017/03/28/上传本地博客源码到git服务器/","excerpt":"本文主要想将本地的博客文件上传到github中，以备系统崩坏or不慎删除。","text":"本文主要想将本地的博客文件上传到github中，以备系统崩坏or不慎删除。 首先创建Repo，例如我创建了Blog（注意：不要添加readme.md） 然后在本地git bash中输入如下： 12345678910111213141516git remote rm origingit add -Agit commit -m '上传'git remote add origin https://github.com/maxiaoyuelun/Blog.gitgit push -u origin master#更新文件git status #查看已经更新哪些文件git add -u #把当前文件夹下中所有tracked文件中被修改过或已删除文件的信息添加到索引库，它不会处理untracked的文件。git commit -m '写出你的修改内容' #这一步必须有，否则下一步不成功git push -u origin mastergit add -A #添加文件时将untracked文件添加到更新索引中git commit -m '写出你的修改内容'git push","categories":[{"name":"技术堆栈","slug":"技术堆栈","permalink":"http://maxiaoyuelun.github.io/categories/技术堆栈/"}],"tags":[{"name":"blog","slug":"blog","permalink":"http://maxiaoyuelun.github.io/tags/blog/"},{"name":"git","slug":"git","permalink":"http://maxiaoyuelun.github.io/tags/git/"}]},{"title":"hexo插件收集","slug":"hexo插件收集","date":"2017-03-28T03:01:42.000Z","updated":"2018-04-17T01:59:10.180Z","comments":true,"path":"2017/03/28/hexo插件收集/","link":"","permalink":"http://maxiaoyuelun.github.io/2017/03/28/hexo插件收集/","excerpt":"本文主要记录收集的hexo插件，不定时更新。","text":"本文主要记录收集的hexo插件，不定时更新。 博文末尾加版权addlink博客加密blog-encrypt","categories":[{"name":"软件工具","slug":"软件工具","permalink":"http://maxiaoyuelun.github.io/categories/软件工具/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"http://maxiaoyuelun.github.io/tags/hexo/"},{"name":"next","slug":"next","permalink":"http://maxiaoyuelun.github.io/tags/next/"}]},{"title":"Windows文本快捷键","slug":"Windows快捷键","date":"2017-03-28T01:56:24.000Z","updated":"2017-07-23T03:51:37.873Z","comments":true,"path":"2017/03/28/Windows快捷键/","link":"","permalink":"http://maxiaoyuelun.github.io/2017/03/28/Windows快捷键/","excerpt":"本文简记Windows文本的快捷键，以备不时之需，不定期更新。","text":"本文简记Windows文本的快捷键，以备不时之需，不定期更新。 选取块左移 Shift+Tab 选取块右移 Tab 关闭当前程序 Alt+F4 切换程序 Alt+Tab 将当前行上移、下移一行 Ctrl+Shift+左右方向键 删除当前行 Ctrl+L 选中文字 Shift+方向键","categories":[{"name":"技术堆栈","slug":"技术堆栈","permalink":"http://maxiaoyuelun.github.io/categories/技术堆栈/"}],"tags":[{"name":"windows","slug":"windows","permalink":"http://maxiaoyuelun.github.io/tags/windows/"}]},{"title":"Git Bash不能输入中文解决办法","slug":"Git-Bash不能输入中文解决办法","date":"2017-03-14T03:47:34.000Z","updated":"2017-07-23T03:51:37.857Z","comments":true,"path":"2017/03/14/Git-Bash不能输入中文解决办法/","link":"","permalink":"http://maxiaoyuelun.github.io/2017/03/14/Git-Bash不能输入中文解决办法/","excerpt":"","text":"打开Git Bash后， 对窗口右键-&gt;Options-&gt;Text-&gt;Locale改为zh_CN，Character set改为UTF-8， 关闭再打开。","categories":[{"name":"技术堆栈","slug":"技术堆栈","permalink":"http://maxiaoyuelun.github.io/categories/技术堆栈/"}],"tags":[{"name":"git","slug":"git","permalink":"http://maxiaoyuelun.github.io/tags/git/"}]},{"title":"Dlib使用指南","slug":"Dlib使用指南","date":"2017-01-03T07:14:52.000Z","updated":"2018-01-03T07:37:43.716Z","comments":true,"path":"2017/01/03/Dlib使用指南/","link":"","permalink":"http://maxiaoyuelun.github.io/2017/01/03/Dlib使用指南/","excerpt":"最近搞人脸识别的程序，于是广泛搜索可复用代码，再加上以前就知道的工具，在此笔记。","text":"最近搞人脸识别的程序，于是广泛搜索可复用代码，再加上以前就知道的工具，在此笔记。 进入D:/github/dlib/，打开cmd。在此之前需要安装cmake 12345cd examplesmkdir buildcd buildcmake -G \"Visual Studio 14 2015 Win64\" -DCOMPILER_CAN_DO_CPP_11=ON -DCMAKE_PREFIX_PATH=\"D:/githun/cudnn/\" ..cmake --build . --config Release face_recognition是搭建在dlib之上的代码，一个很好的框架。 测试代码 参考资料 Dlib官网 Dlib github face_recognition github FaceSwap github Dlib CUDA安装","categories":[{"name":"技术堆栈","slug":"技术堆栈","permalink":"http://maxiaoyuelun.github.io/categories/技术堆栈/"}],"tags":[{"name":"cuda","slug":"cuda","permalink":"http://maxiaoyuelun.github.io/tags/cuda/"},{"name":"dlib","slug":"dlib","permalink":"http://maxiaoyuelun.github.io/tags/dlib/"},{"name":"face_recognition","slug":"face-recognition","permalink":"http://maxiaoyuelun.github.io/tags/face-recognition/"},{"name":"cudnn","slug":"cudnn","permalink":"http://maxiaoyuelun.github.io/tags/cudnn/"}]},{"title":"车站","slug":"车站","date":"2016-12-13T06:05:49.000Z","updated":"2018-05-05T13:15:41.057Z","comments":true,"path":"2016/12/13/车站/","link":"","permalink":"http://maxiaoyuelun.github.io/2016/12/13/车站/","excerpt":"","text":"写着论文，听到这首车站，不觉潸然。 读博已经到了第二年，前路可期但前路漫漫。 越来越明白一些道理，就像有了一定的阅历之后再读某一本书，深有同感。 回忆会伤人的，在李健歌声的烘托下，那一丝丝的情绪蔓延开来，断了思绪。 读书这些年，不免多了书生气，少了人生在这个时间段的某种阅历，所谓行万里路。况且，有失必有得，祸福相倚，书读多了，就越来越接近一种说不出的真理，亦或某种大道，亦或某种淡然，有种殊途同归的感觉。 不理解的人可能会说读傻了，产生一种难以交流的感觉，而这正是经历之后的一种觉悟，尽管我才刚刚开始，但此时才真正知道我需要什么，不需要什么，而不是被环境或者外力裹挟前进。 还要经历或者两年，写文章，做实验，最终完成毕业论文，天复一天，年复一年，似乎无聊。 这只是一种经历，经历了之后，会为你打开另外一扇门，不仅仅是苟且，也许是理想。 音乐作为一种勾起思绪的媒介，的确是个好东西，不然即使平时再无聊，也不会好好沉淀，想想，思考。 自从研究生开始学起了尤克里里，而后吉他，对其爱不释手，有时候只是简单的扫弦，也会得到某种放松。可惜，这么久才开始学，幸运是，我已经开始学了。","categories":[{"name":"闲话桑麻","slug":"闲话桑麻","permalink":"http://maxiaoyuelun.github.io/categories/闲话桑麻/"}],"tags":[{"name":"李健","slug":"李健","permalink":"http://maxiaoyuelun.github.io/tags/李健/"}]},{"title":"mxnet初步安装及使用指北","slug":"mxnet初步安装及使用指北","date":"2016-12-06T03:20:09.000Z","updated":"2017-07-23T03:51:37.873Z","comments":true,"path":"2016/12/06/mxnet初步安装及使用指北/","link":"","permalink":"http://maxiaoyuelun.github.io/2016/12/06/mxnet初步安装及使用指北/","excerpt":"开发环境 windows 10 visual studio 2013 community update 5 pycharm community edition 2016.3 anaconda 4.2.0 64 bit python 2.7.12 GTX 1070","text":"开发环境 windows 10 visual studio 2013 community update 5 pycharm community edition 2016.3 anaconda 4.2.0 64 bit python 2.7.12 GTX 1070 安装小记 博主安装在D盘上，路径为D:\\mxnet\\ 首先确保电脑上已经安装好官方Git，并已经配置成功。 确保电脑上已经安装好cuda(博主安装版本8.0)，并已经配置成功。 cuda必须在visual studio 2013之前安装，否则不能在visual studio中正确配置cuda。 用Git下载Github上的源文件至指定路径下。 1git colne https://github.com/dmlc/mxnet.git 安装编译前必备的库和软件：cudnn，opencv，openblas 以下参考官方文档Building and Installing Packages on Windows进行安装并进行补充。 由于博主已经安装了update5，所以不再需要安装visual c++ compiler nov 2013 ctp。如需安装请参考mxnet官方文档。 cmake 3.7.0 cmake官网下载安装最新版本，用来编译Visual Studio Solution。 cudnn cudnn官网下载最新版本5.0，存放在路径D:\\cudnn。 opencv opencv下载链接下载版本3.0.0，存放在路径D:\\opencv。 在系统属性&gt;环境变量&gt;用户环境变量中添加变量OpenCV_DIR，并赋值D:\\opencv\\build。 openblas OpenBLAS-v0.2.14-Win64-int64下载链接，存放在路径D:\\OpenBLAS-v0.2.14-Win64-int64。 在系统属性&gt;环境变量&gt;用户环境变量中添加变量OpenBLAS_HOME，并赋值D:\\OpenBLAS-v0.2.14-Win64-int64。 anaconda anaconda官网下载安装anaconda，博主安装路径为C:\\Program Files\\Anaconda2\\。 visual studio编译配置 首先在D:\\mxnet\\下新建文件夹build。 打开cmake。 在where is the source code中添加D:\\mxnet。在where to build the binaries中添加D:\\mxnet\\build。 点击Configure，进行配置，若出现配置不成功，则将需要的路径手动添加在cmake中，当然根据出现的问题针对改动。 配置成功后点击Generate生成solution。 生成完成后可以发现在D:\\mxnet\\build下出现solution文件，用visual studio 2013打开solution。 在visual studio 2013中编译Debug和Release文件，静待几分钟编译成功。 由于大多数使用在python环境下，需要配置python使用环境，在系统属性&gt;环境变量&gt;用户环境变量中添加变量PYTHONPATH，并添加值D:\\mxnet\\python。由于需要在python中使用opencv，所以在PYTHONPATH变量中继续添加D:\\opencv\\build\\python\\2.7\\x64。 范例测试 由于在pycharm中编写python代码，需要配置pycharm的编译环境，打开pycharm，在File&gt;Settings&gt;Interpreter中配置解释环境为C:\\Program Files\\Anaconda2\\python.exe。 在pycharm中打开文件train_mnist.py。该文件在D:\\mxnet\\example\\image-classification\\文件夹下，是官方自带示例。 在61行中将gpus=None改成gpus=&#39;0&#39;即可用gpu运行代码，最终发现结果约为：0.981190。 使用小记mxnet自带可以将net画成pdf图的工具，但是需要配置相关库。 下面需按顺序安装 graphviz graphviz下载链接，博主下载的是zip文件并解压到D:\\graphviz-2.38下。 接下来配置环境变量，在系统环境变量Path中添加值D:\\graphviz-2.38\\release\\bin，保存关闭。 接下来以管理员身份运行cmd，由于博主anaconda是安装在C盘中，所以必须以管理员身份运行安装相关软件。 确保已经用conda安装好pip。 接下来输入如下代码安装： 12pip install graphvizpip install pydot 重启电脑，graphviz安装成功，至此再次声明，上面的安装顺序不能乱。 博主在路径D:\\DLRVS\\train\\下创建自己的数据分类文件夹b和f，只有两类。 用mxnet自带的工具im2rec生成相关rec文件。im2rec.py在路径D:\\mxnet\\tools下。 在cmd中切换到路径D:\\mxnet\\tools下，使用im2rec.py先生成lst文件，然后再生成rec文件。 生成lst文件 1python im2rec.py --list True D:\\DLRVS\\yy D:\\DLRVS\\train\\ --recursive True --shuffle True --train-ratio=0.8 在路径D:\\DLRVS\\下生成yy_train.lst，yy_val.lst，yy_test.lst文件。 1python im2rec.py D:\\DLRVS\\yy_train.lst D:\\DLRVS\\train --quality=100 在路径D:\\DLRVS\\下生成yy_train.rec文件，同样可以生成yy_val.rec和yy_test.rec文件。 以下是本人的测试代码： 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182import mxnet as mximport loggingimport numpy as npimport cv2import matplotlib.pyplot as pltimport osimport argparseimport loggingimport fitimport gzip, structdef get_iterators(batch_size,data_shape=(1,27,27)): train=mx.io.ImageRecordIter( path_imgrec=\"D:\\DLRVS\\yy_train.rec\", mean_img=\"\\DLRVS\\mean.bin\", data_name='data', label_name='softmax_label', batch_size=batch_size, data_shape=data_shape, shuffle=True, rand_crop=False, rand_mirror=True ) val= mx.io.ImageRecordIter( path_imgrec=\"D:\\DLRVS\\yy_val.rec\", mean_img=\"D:\\DLRVS\\mean.bin\", data_name='data', label_name='softmax_label', batch_size=batch_size, data_shape=data_shape, shuffle=True, rand_crop=False, rand_mirror=True ) return (train,val)def get_symbol(num_classes=10, **kwargs): data = mx.symbol.Variable('data') # first conv conv1 = mx.symbol.Convolution(data=data, kernel=(5,5), num_filter=20) tanh1 = mx.symbol.Activation(data=conv1, act_type=\"tanh\") pool1 = mx.symbol.Pooling(data=tanh1, pool_type=\"max\", kernel=(2,2), stride=(2,2)) # second conv conv2 = mx.symbol.Convolution(data=pool1, kernel=(5,5), num_filter=50) tanh2 = mx.symbol.Activation(data=conv2, act_type=\"tanh\") pool2 = mx.symbol.Pooling(data=tanh2, pool_type=\"max\", kernel=(2,2), stride=(2,2)) # first fullc flatten = mx.symbol.Flatten(data=pool2) fc1 = mx.symbol.FullyConnected(data=flatten, num_hidden=500) tanh3 = mx.symbol.Activation(data=fc1, act_type=\"tanh\") # second fullc fc2 = mx.symbol.FullyConnected(data=tanh3, num_hidden=num_classes) # loss lenet = mx.symbol.SoftmaxOutput(data=fc2, name='softmax') return lenetdef fit(symbol,train,val,batch_size,num_gpus): devs=[mx.gpu(i) for i in range(num_gpus)] mod=mx.mod.Module(symbol=new_sym,context=devs) mod.bind(data_shapes=train.provide_data,label_shapes=train.provide_label) mod.init_params(initializer=mx.init.Xavier(rnd_type='gaussian',factor_type=\"in\",magnitude=2)) mod.fit(train,val, num_epoch=1000, batch_end_callback=mx.callback.Speedometer(batch_size,10), optimizer='sgd', optimizer_params=&#123;'learning_rate':0.01&#125;, eval_metric='acc')if __name__ == '__main__': num_classes=2 batch_per_gpu=600 num_gpus=1 new_sym=get_symbol(num_classes=2) batch_size=batch_per_gpu*num_gpus (train,val)=get_iterators(batch_size) mx.viz.plot_network(new_sym).view() fit(new_sym,train,val,batch_size,num_gpus) 参考资料 从零开始学MXnet(一) mxnet深度学习实战：跑自己的数据实验和一些问题总结 mxnet学习记录 Mxnet学习系列 mxnet官网","categories":[{"name":"技术堆栈","slug":"技术堆栈","permalink":"http://maxiaoyuelun.github.io/categories/技术堆栈/"}],"tags":[{"name":"mxnet","slug":"mxnet","permalink":"http://maxiaoyuelun.github.io/tags/mxnet/"}]},{"title":"我要你","slug":"我要你","date":"2016-11-26T14:23:41.000Z","updated":"2018-04-26T09:05:27.979Z","comments":true,"path":"2016/11/26/我要你/","link":"","permalink":"http://maxiaoyuelun.github.io/2016/11/26/我要你/","excerpt":"最近很喜欢听这首歌，主要是在学怎么弹啊，弹了好久都没连贯！！！","text":"最近很喜欢听这首歌，主要是在学怎么弹啊，弹了好久都没连贯！！！ 音悦台 (function(){var player = new DPlayer({\"container\":document.getElementById(\"dplayer2\"),\"video\":{\"url\":\"http://hc.yinyuetai.com/uploads/videos/common/740C01580E4D6EDDAB4DB0E4A1D1CE59.flv?sc=0428d8f24652d584&br=796&vid=2712084&aid=41699&area=ML&vst=0\"}});window.dplayers||(window.dplayers=[]);window.dplayers.push(player);})()","categories":[{"name":"音乐之声","slug":"音乐之声","permalink":"http://maxiaoyuelun.github.io/categories/音乐之声/"}],"tags":[]},{"title":"女人如政治","slug":"女人如政治","date":"2016-11-16T13:05:15.000Z","updated":"2017-07-23T03:51:37.888Z","comments":true,"path":"2016/11/16/女人如政治/","link":"","permalink":"http://maxiaoyuelun.github.io/2016/11/16/女人如政治/","excerpt":"女人如政治，自己想去吧！","text":"女人如政治，自己想去吧！ 政治是不需要道德的政治是暴力或者实力征服政治是虚伪的政治是说一套做一套政治是讲究表面的装饰政治是要掩盖残酷真相的政治是需要给人远大幻想的政治是做了再说的","categories":[{"name":"闲话桑麻","slug":"闲话桑麻","permalink":"http://maxiaoyuelun.github.io/categories/闲话桑麻/"}],"tags":[{"name":"转载","slug":"转载","permalink":"http://maxiaoyuelun.github.io/tags/转载/"}]},{"title":"在Hexo中嵌入图片之七牛插件指北","slug":"在Hexo中嵌入图片之七牛插件指北","date":"2016-11-13T14:36:04.000Z","updated":"2016-11-27T04:51:00.000Z","comments":true,"path":"2016/11/13/在Hexo中嵌入图片之七牛插件指北/","link":"","permalink":"http://maxiaoyuelun.github.io/2016/11/13/在Hexo中嵌入图片之七牛插件指北/","excerpt":"根据参考文献可以完成初步配置，不够完美，正在寻找新的替代插件（比较难用，博主已放弃）。 问题： 不能用hexo qiniu sync进行同步，在用hexo g -d也不能进行同步，需要将需要上传的image文件夹拷贝到public文件夹下，并在_config.yml文件中对sync_dir进行配置，则可以完成上传。 以上步骤还是麻烦，将待上传image文件夹拷贝到public文件夹下，在用hexo d命令时，图片也被上传到github中了，这违背了初始意愿，只能删除重复上传。","text":"根据参考文献可以完成初步配置，不够完美，正在寻找新的替代插件（比较难用，博主已放弃）。 问题： 不能用hexo qiniu sync进行同步，在用hexo g -d也不能进行同步，需要将需要上传的image文件夹拷贝到public文件夹下，并在_config.yml文件中对sync_dir进行配置，则可以完成上传。 以上步骤还是麻烦，将待上传image文件夹拷贝到public文件夹下，在用hexo d命令时，图片也被上传到github中了，这违背了初始意愿，只能删除重复上传。 参考文献 hexo-deployer-qiniu 使用七牛在 Hexo 文档中嵌入图片","categories":[{"name":"技术堆栈","slug":"技术堆栈","permalink":"http://maxiaoyuelun.github.io/categories/技术堆栈/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"http://maxiaoyuelun.github.io/tags/hexo/"},{"name":"七牛","slug":"七牛","permalink":"http://maxiaoyuelun.github.io/tags/七牛/"}]},{"title":"Django安装指北","slug":"Django安装指北","date":"2016-11-10T05:17:30.000Z","updated":"2017-11-20T02:43:06.284Z","comments":true,"path":"2016/11/10/Django安装指北/","link":"","permalink":"http://maxiaoyuelun.github.io/2016/11/10/Django安装指北/","excerpt":"前言近来突发兴致学习Django，初始根据教程学习，用内置服务器运行 1python manage.py runserver 在浏览器中输入 1http://127.0.0.1:8000","text":"前言近来突发兴致学习Django，初始根据教程学习，用内置服务器运行 1python manage.py runserver 在浏览器中输入 1http://127.0.0.1:8000 得到合适的页面，也是正确的页面。 但是，在Django的开发文档中也这么说明，runserver只作为开发用途，而不是发行用途。 所以，寻求用Apache来运行Django。 这也就带来了难题，即需要如题配置。经过大约一天的时间，各种谷歌、百度寻求帮助，排除一个个error终于配置成功。 现将过程介绍如下，防止以后再遇到此类问题。 我使用的是Ubuntu 14.04 LTS+Apache2.4+Python2或者3（根据mod_wsgi.so改变）+Django1.6或者以上 安装Apache等1sudo apt-get install apache2 libapache2-mod-wsgi python-django Apache配置 在/etc/apache2/中找到apache2.conf 在最后添加 1234567891011121314151617181920212223242526&lt;VirtualHost *:80&gt; ServerName hello.com DocumentRoot /var/www/yourproject &lt;Directory /var/www/yourprojec&gt; Order allow,deny Allow from all &lt;/Directory&gt; &lt;/VirtualHost&gt; 在/etc/apache2/sites-available/中添加wsgi.conf，在新创建的wsgi.conf中输入&lt;VirtualHost *:80&gt; ServerName wsgi.testserver DocumentRoot /var/www/yourproject &lt;Directory /var/www/yourproject&gt; Order allow,deny Allow from all &lt;/Directory&gt; WSGIScriptAlias / /var/www/django.wsgi &lt;/VirtualHost&gt; Django配置在/var/www/中创建django.wsgi，并在其中输入 1234567import osimport syssys.path.append('/var/www/yourproject')os.environ['DJANGO_SETTINGS_MODULE'] = 'yourproject.settings'from django.core.wsgi import get_wsgi_applicationapplication = get_wsgi_application() 测试输入 123sudo a2ensite wsgi.confsudo service apache2 reload 差不多成功了。","categories":[{"name":"技术堆栈","slug":"技术堆栈","permalink":"http://maxiaoyuelun.github.io/categories/技术堆栈/"}],"tags":[{"name":"django","slug":"django","permalink":"http://maxiaoyuelun.github.io/tags/django/"},{"name":"python","slug":"python","permalink":"http://maxiaoyuelun.github.io/tags/python/"},{"name":"blog","slug":"blog","permalink":"http://maxiaoyuelun.github.io/tags/blog/"}]},{"title":"月下漫步","slug":"月下漫步","date":"2016-11-10T05:15:28.000Z","updated":"2018-09-03T06:45:36.782Z","comments":true,"path":"2016/11/10/月下漫步/","link":"","permalink":"http://maxiaoyuelun.github.io/2016/11/10/月下漫步/","excerpt":"Welcome to my blog, enter password to read.","text":"Welcome to my blog, enter password to read. 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","categories":[{"name":"闲话桑麻","slug":"闲话桑麻","permalink":"http://maxiaoyuelun.github.io/categories/闲话桑麻/"}],"tags":[{"name":"诗词","slug":"诗词","permalink":"http://maxiaoyuelun.github.io/tags/诗词/"}]},{"title":"MatConvNet安装指北","slug":"MatConvNet安装指北","date":"2016-11-10T05:12:52.000Z","updated":"2017-07-23T03:51:37.857Z","comments":true,"path":"2016/11/10/MatConvNet安装指北/","link":"","permalink":"http://maxiaoyuelun.github.io/2016/11/10/MatConvNet安装指北/","excerpt":"开发环境 Windows 10 VS2015/VS2013 Matlab 2016 MatConvNet各个版本 步骤解压下载后的文件夹到指定路径。假定为D:\\matconvnet\\","text":"开发环境 Windows 10 VS2015/VS2013 Matlab 2016 MatConvNet各个版本 步骤解压下载后的文件夹到指定路径。假定为D:\\matconvnet\\ 在matconvnet下创建文件夹local，并将cudnn及文件夹下全部文件拷贝到local下。 在D:\\matconvnet\\matlab\\下创建mex文件夹。 将local\\cudnn\\bin下的dll文件拷贝至mex文件夹下。 在Matlab工作环境下切换路径至D:\\matconvnet\\文件夹下，运行如下代码： 123run ./matlab/vl_setupnn.mvl_compilenn(&apos;enableGpu&apos;,true,&apos;enableCudnn&apos;,true,&apos;cudnnRoot&apos;,&apos;.\\local\\cudnn\\&apos;); 至此安装成功。","categories":[{"name":"技术堆栈","slug":"技术堆栈","permalink":"http://maxiaoyuelun.github.io/categories/技术堆栈/"}],"tags":[{"name":"matconvnet","slug":"matconvnet","permalink":"http://maxiaoyuelun.github.io/tags/matconvnet/"},{"name":"matlab","slug":"matlab","permalink":"http://maxiaoyuelun.github.io/tags/matlab/"}]},{"title":"Vlfeat编译指北","slug":"Vlfeat编译指北","date":"2016-11-10T05:10:57.000Z","updated":"2017-07-23T03:51:37.857Z","comments":true,"path":"2016/11/10/Vlfeat编译指北/","link":"","permalink":"http://maxiaoyuelun.github.io/2016/11/10/Vlfeat编译指北/","excerpt":"首先下载源码文件解压至指定路径，例如C:\\Users\\colin\\Documents\\MATLAB。 查找C:\\Users\\colin\\Documents\\MATLAB\\vlfeat-0.9.20路径下发现有Makefile.mak文件。 打开菜单栏，找到Visual Studio Tools，双击打开VS2013 x64 本机工具命令提示。 在cmd中输入以下代码","text":"首先下载源码文件解压至指定路径，例如C:\\Users\\colin\\Documents\\MATLAB。 查找C:\\Users\\colin\\Documents\\MATLAB\\vlfeat-0.9.20路径下发现有Makefile.mak文件。 打开菜单栏，找到Visual Studio Tools，双击打开VS2013 x64 本机工具命令提示。 在cmd中输入以下代码 12cd C:\\Users\\colin\\Documents\\MATLAB\\vlfeat-0.9.20nmake /f Makefile.mak 至此，发现输出信息最后几行为： 1234.... CC [MEX] toolbox\\mex\\mexw64\\vl_aib.mexw64系统找不到指定的路径。NMAKE : fatal error U1077: “echo”: 返回代码“0x1”Stop. 不用管这些信息。 打开Matlab，切换路径至C:\\Users\\colin\\Documents\\MATLAB\\vlfeat-0.9.20\\toolbox\\。 在Matlab命令窗口中输入： 123vl_setupvl_compile 至此编译完成。 估计用nmake编译不成功是没有设置matlab路径。 切换matlab路径至C:\\Users\\colin\\Documents\\MATLAB\\。 新建startup.m文件，在其中输入： 1run(&apos;C:\\Users\\colin\\Documents\\MATLAB\\vlfeat-0.9.20\\toolbox\\vl_setup.m&apos;); 这样就可以让matlab每次都启动vlfeat库。","categories":[{"name":"技术堆栈","slug":"技术堆栈","permalink":"http://maxiaoyuelun.github.io/categories/技术堆栈/"}],"tags":[{"name":"matlab","slug":"matlab","permalink":"http://maxiaoyuelun.github.io/tags/matlab/"},{"name":"vlfeat","slug":"vlfeat","permalink":"http://maxiaoyuelun.github.io/tags/vlfeat/"}]},{"title":"visual-studio-2013编译64位boost","slug":"visual-studio-2013编译64位boost","date":"2016-11-09T13:17:11.000Z","updated":"2017-07-23T03:51:37.873Z","comments":true,"path":"2016/11/09/visual-studio-2013编译64位boost/","link":"","permalink":"http://maxiaoyuelun.github.io/2016/11/09/visual-studio-2013编译64位boost/","excerpt":"开发环境 windows 10 visual studio 2013 ultimate boost 1.58 由于本人用1.61版本编译不成功，所以转战1.58版本。原因在visual studio 2013上，也许你用其他版本vs就能编译成功。","text":"开发环境 windows 10 visual studio 2013 ultimate boost 1.58 由于本人用1.61版本编译不成功，所以转战1.58版本。原因在visual studio 2013上，也许你用其他版本vs就能编译成功。 编译步骤编译64位进入开始菜单visual studio tools，找到VS2013 x64 本机工具命令提示，双击打开。 你会发现这就是一个cmd，而编译boost不是随便打开一个cmd就行的。编译64位需要打开这个cmd，而编译32位的需要打开VS2013 x86 本机工具命令提示这个cmd。 切换到你的boost根目录，例如我的在 1C:\\local\\boost_1_58_0 至此，你会发现在此路径下存在bootstrap.bat，在windows环境中只需运行call bootstrap.bat就会生成64位的b2.exe和bjam.exe。 接下来就是利用bjam.exe来编译。 如果需要获取动态库，编译命令如下： 1bjam --build-type=complete toolset=msvc-9.0 threading=multi link=shared address-model=64 以上是生成全部的lib，如果只生成需要的库，例如date_time，命令如下： 1bjam --with-date_time toolset=msvc-12.0 threading=multi link=static address-model=64 要有address-model=64属性，如果没有这个属性，会默认生成32位的平台库，加入这个选项才能生成64位的DLL。 如果需要获取静态库，编译命令如下： 1bjam --build-type=complete toolset=msvc-9.0 threading=multi link=static address-model=64 你会发现，这就是将link属性变为static。 也可以指定生成库的文件目录，例如： 1bjam --build-type=complete toolset=msvc-9.0 --stagedir=\"C:\\boostLib\" threading=multi link=shared address-model=64 编译32位编译32位库只需要将cmd换为VS2013 x86 本机工具命令提示然后和64位进行相同操作。 测试实例打开visual studio，创建工程。 编辑属性，打开配置属性 &gt; VC++目录，配置包含目录和库目录，接着打开配置属性 &gt; 链接器 &gt; 输入，在附加依赖项中添加lib。 1234libboost_chrono-vc120-mt-gd-1_58.liblibboost_system-vc120-mt-gd-1_58.liblibboost_thread-vc120-mt-gd-1_58.liblibboost_date_time-vc120-mt-gd-1_58.lib 我是编译的静态库，所以只需要在此添加所需的lib就可以了。如果生成的是动态库，还需要将dll所在的路径添加到系统路径path属性中，==重启==电脑使路径生效。 将visual studio的编译器换成x64。 至此，可以说环境配置完成，可以贴上测试代码运行了。 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263#include &lt;boost/thread/condition.hpp&gt;#include &lt;boost/thread/mutex.hpp&gt;#include &lt;boost/thread/thread.hpp&gt;#include &lt;iostream&gt;#include &lt;vector&gt;class bounded_buffer : private boost::noncopyable&#123;public: typedef boost::mutex::scoped_lock lock; bounded_buffer(int n) : begin(0), end(0), buffered(0), circular_buf(n) &#123; &#125; void send(int m) &#123; lock lk(monitor); while (buffered == circular_buf.size()) buffer_not_full.wait(lk); circular_buf[end] = m; end = (end + 1) % circular_buf.size(); ++buffered; buffer_not_empty.notify_one(); &#125; int receive() &#123; lock lk(monitor); while (buffered == 0) buffer_not_empty.wait(lk); int i = circular_buf[begin]; begin = (begin + 1) % circular_buf.size(); --buffered; buffer_not_full.notify_one(); return i; &#125;private: int begin, end, buffered; std::vector&lt;int&gt; circular_buf; boost::condition buffer_not_full, buffer_not_empty; boost::mutex monitor;&#125;;bounded_buffer buf(2);void sender() &#123; int n = 0; while (n &lt; 100) &#123; buf.send(n); std::cout &lt;&lt; \"sent: \" &lt;&lt; n &lt;&lt; std::endl; ++n; &#125; buf.send(-1);&#125;void receiver() &#123; int n; do &#123; n = buf.receive(); std::cout &lt;&lt; \"received: \" &lt;&lt; n &lt;&lt; std::endl; &#125; while (n != -1); // -1 indicates end of buffer&#125;int main()&#123; boost::thread thrd1(&amp;sender); boost::thread thrd2(&amp;receiver); thrd1.join(); thrd2.join();&#125; 参考文献 编译64位boost 新手，Visual Studio 2013 配置Boost库。 如何编译和选择，遇到无法打开文件“libboost_thread-vc120-mt-gd-1_58.lib的解决办法 boost官网","categories":[{"name":"技术堆栈","slug":"技术堆栈","permalink":"http://maxiaoyuelun.github.io/categories/技术堆栈/"}],"tags":[{"name":"c","slug":"c","permalink":"http://maxiaoyuelun.github.io/tags/c/"},{"name":"boost","slug":"boost","permalink":"http://maxiaoyuelun.github.io/tags/boost/"}]},{"title":"git本地文件夹上传至github","slug":"git本地文件夹上传至github","date":"2016-11-09T13:14:44.000Z","updated":"2017-07-23T03:51:37.873Z","comments":true,"path":"2016/11/09/git本地文件夹上传至github/","link":"","permalink":"http://maxiaoyuelun.github.io/2016/11/09/git本地文件夹上传至github/","excerpt":"本文初衷是想将本地部分文件夹推送到github进行保存共享，折腾一番终于有所斩获，在此笔记以备后来参考。 开发环境 windows 10 git bash","text":"本文初衷是想将本地部分文件夹推送到github进行保存共享，折腾一番终于有所斩获，在此笔记以备后来参考。 开发环境 windows 10 git bash 步骤安装完git bash之后，就可以在git bash内进行各种操作。 右键Git Bash Here，你就会发现出现类似于linux的对话框，在这里你可以完全用linux指令来完成各种操作。 本文已经假设你已经安装好git bash，并且完成本地与远程账户的关联，如果还没有完成请右转google。 创建文件夹假设我的根路径在D盘，右键Git Bash Here。在其中输入： 123mkdir abccd abcgit init #这是用来初始化文件夹git 此时你会发现在D:/abc/下出现.git文件夹，这是用来与github关联的。 创建测试文件1234mkdir dirtouch aaatouch dir/aaagit add --all 添加远程Git1git remote add origin https://github.com/maxiaoyuelun/abc.git 假设你已经创建好远程名叫abc的仓库了，并且假设你在仓库你添加了README.md文件。 远程与本地合并12git commit -m 'merge'git pull origin master 至此你会在本地文件夹下发现多了README.md文件。 上传本地文件12git commit -m 'upload'git push -u origin master 在浏览器中打开就可以看到已经将本地文件夹内的内容上传至github中了。 在进行push和pull之前，必须进行commit，否则会有error。 删除文件1234git rm aaagit statusgit commit -m 'del aaa'git push -u origin master 其他对于文件的操作可在参考文献中寻找。 参考文献 Pro Git Git教程","categories":[{"name":"技术堆栈","slug":"技术堆栈","permalink":"http://maxiaoyuelun.github.io/categories/技术堆栈/"}],"tags":[{"name":"git","slug":"git","permalink":"http://maxiaoyuelun.github.io/tags/git/"}]},{"title":"Laravel5.1开发博客系列一","slug":"Laravel5-1开发博客系列一","date":"2016-11-09T13:12:23.000Z","updated":"2017-07-23T03:51:37.857Z","comments":true,"path":"2016/11/09/Laravel5-1开发博客系列一/","link":"","permalink":"http://maxiaoyuelun.github.io/2016/11/09/Laravel5-1开发博客系列一/","excerpt":"开发工具WampServer、PHPStorm、浏览器 开发前设置修改hosts文件打开“我的电脑”，进入 C:\\Windows\\System32\\drivers\\etc 目录，然后打开 hosts 文件，在最下面添加一行代码：127.0.0.1 maxiaoyuelun.cn，之后保存退出（可能需要管理员权限）。","text":"开发工具WampServer、PHPStorm、浏览器 开发前设置修改hosts文件打开“我的电脑”，进入 C:\\Windows\\System32\\drivers\\etc 目录，然后打开 hosts 文件，在最下面添加一行代码：127.0.0.1 maxiaoyuelun.cn，之后保存退出（可能需要管理员权限）。 启用WampServer虚拟域名功能进入 C:\\wamp\\bin\\apache\\apache2.4.9\\conf 目录，打开apache配置文件 httpd.conf ，在里面搜索 httpd-vhosts.conf ，会找到下面这样一行：#Include conf/extra/httpd-vhosts.conf把最前面的 # 去掉（没有 # 的话直接进行下一步），保存并退出。 添加虚拟域名进入 C:\\wamp\\bin\\apache\\apache2.4.9\\conf\\extra 目录，打开 httpd-vhosts.conf文件，添加下面的代码： &lt;VirtualHost *:80&gt; ServerAdmin webmaster@laravel.dev DocumentRoot &quot;d:/wamp/www/laravel5/public&quot; ServerName laravel.dev ErrorLog &quot;logs/laravel.dev-error.log&quot; CustomLog &quot;logs/laravel.dev-access.log&quot; common &lt;/VirtualHost&gt; 至此，已经启用虚拟域名并添加好了虚拟域名，重启apache服务，在浏览器输入http://laravel.dev/，可以看到已经可以正常访问本地的Laravel 5了。 开发必要资源添加make:view参考artisan-view进行添加 添加AdminLTE在此之前需安装好bower进入C:\\wamp\\www\\Laravel\\public目录中，右击运行Use Composer Here，添加如下代码：bower install admin-lte参考文献：Integrate AdminLTE with Laravel 5 至此，初步准备阶段完成。","categories":[{"name":"技术堆栈","slug":"技术堆栈","permalink":"http://maxiaoyuelun.github.io/categories/技术堆栈/"}],"tags":[{"name":"blog","slug":"blog","permalink":"http://maxiaoyuelun.github.io/tags/blog/"},{"name":"laravel","slug":"laravel","permalink":"http://maxiaoyuelun.github.io/tags/laravel/"}]},{"title":"Python爬虫抓取大伟吉他谱","slug":"Python爬虫抓取大伟吉他谱","date":"2016-11-09T13:09:13.000Z","updated":"2017-07-23T03:51:37.857Z","comments":true,"path":"2016/11/09/Python爬虫抓取大伟吉他谱/","link":"","permalink":"http://maxiaoyuelun.github.io/2016/11/09/Python爬虫抓取大伟吉他谱/","excerpt":"喜欢用最近开始，最近由于个人需要，利用爬虫爬了一些东西，不得不说python是一大利器，只要你熟练之后，就可以随意创造你想要的大部分东西。插播点牢骚话，最近看网上的某些言论，实在是不敢苟同，说到创新，就似乎要打碎一切东西，从头再来，我所理解的创新是站在别人的基础上再做出自己的东西。首先，就需要对自己的领域熟悉，然后基于特定的需要，借用某种技术来实现目的。实际上，大部分的创新都是基于某种应用需求，当然前瞻性的理论创新也很重要，这里说的不是简单的一元论。 这篇博文是用python来爬取大伟吉他教室谱子的例程，在此笔记，加深印象。 环境windows 10，pycharm，anaconda，scrapy，google chrome","text":"喜欢用最近开始，最近由于个人需要，利用爬虫爬了一些东西，不得不说python是一大利器，只要你熟练之后，就可以随意创造你想要的大部分东西。插播点牢骚话，最近看网上的某些言论，实在是不敢苟同，说到创新，就似乎要打碎一切东西，从头再来，我所理解的创新是站在别人的基础上再做出自己的东西。首先，就需要对自己的领域熟悉，然后基于特定的需要，借用某种技术来实现目的。实际上，大部分的创新都是基于某种应用需求，当然前瞻性的理论创新也很重要，这里说的不是简单的一元论。 这篇博文是用python来爬取大伟吉他教室谱子的例程，在此笔记，加深印象。 环境windows 10，pycharm，anaconda，scrapy，google chrome 前言本文因为有特定的爬取目的，所以在很多步骤上就有了简化的处理。在开始前，需要利用chrome浏览器的调试功能找到需要爬取内容的位置：就是xpath位置，然后再进行编码测试。 步骤创建项目scrapy startproject tutorial 创建spiderscrapy genspider guitar guitar.com 代码编写上面两部就创建了guitar.py文件。 打开guitar.py文件，所示如下： 123456789101112import scrapyclass GuitarSpider(scrapy.Spider): name = \"guitar\" allowed_domains = [\"guitar.com\"] start_urls = ( 'http://www.guitar.com/', ) def parse(self, response): pass 添加代码如下 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152# -*- coding: utf-8 -*-import scrapyimport requestsimport reclass GuitarSpider(scrapy.Spider): name = \"guitar\" allowed_domains = [\"guitar.com\"] start_urls = ( 'http://www.daweijita.com/59492.html', ) def parse(self, response): print \"=================2==================\" print response.headers for sel1 in response.xpath('//*[@id=\"main-content\"]/div[2]/div[2]/div/div[1]'): for sel in sel1.xpath('.//a/@href').re(r'.*.gif$'): print \"====\" print sel print re.match(r'.*fufei.*',sel) if re.match(r'.*fufei.*',sel) is not None: print \"$$$$$$$$$$$$$$$$$$$$$\" s=sel.split('/') s2=s[-1].split('_') print s2 for num in range(1,5): s3=u'tab_'+s2[1]+u'_'+s2[2]+u'_'+u'%d' % num +u'.gif' print s3 s4=s[:-1]+[s3] print s4 s5=s4[0]+u'//'+s4[2]+u'/'+s4[3]+u'/'+s4[4]+u'/'+s4[5] local_filename = s3 r = requests.get(s5, stream=True) print r.status_code if r.status_code==200: with open(local_filename, 'wb') as f: for chunk in r.iter_content(chunk_size=1024): if chunk: # filter out keep-alive new chunks f.write(chunk) f.flush() else: local_filename = sel.split('/')[-1] r = requests.get(sel, stream=True) with open(local_filename, 'wb') as f: for chunk in r.iter_content(chunk_size=1024): if chunk: # filter out keep-alive new chunks f.write(chunk) f.flush() print \"====\" print \"=================2==================\" 在此就算简单完成了爬取工作。 小结多次测试之后，其实可以发现，该网站中的图片都是以这样的形式命名： tab_演唱者_歌曲名_数字.gif 也就是说，修改上面代码中的start_urls，定位到需要爬取的网站，可以爬取大部分的歌曲，但是如果碰到部分不一样的格式，则需要自己手动调试。 那么可以先定位到全站教学资源列表爬取歌曲以及演唱者，根据中英文适当转化为拼音，记录到items中保存，然后可以提取items中的信息进行组合来爬取所有曲谱，这在下面的文章中会完善。 参考文档 python菜鸟教程 scrapy中文文档 大伟吉他教室","categories":[{"name":"技术堆栈","slug":"技术堆栈","permalink":"http://maxiaoyuelun.github.io/categories/技术堆栈/"}],"tags":[{"name":"python","slug":"python","permalink":"http://maxiaoyuelun.github.io/tags/python/"},{"name":"爬虫","slug":"爬虫","permalink":"http://maxiaoyuelun.github.io/tags/爬虫/"}]},{"title":"Protobuf安装使用指南","slug":"Protobuf安装使用指南","date":"2016-11-09T13:05:17.000Z","updated":"2017-07-23T03:51:37.857Z","comments":true,"path":"2016/11/09/Protobuf安装使用指南/","link":"","permalink":"http://maxiaoyuelun.github.io/2016/11/09/Protobuf安装使用指南/","excerpt":"网址 https://github.com/google/protobuf/ 开发环境 Windows 10 企业版 64 位（10.0，版本14393） Visual Studio 2013 Git-2.10.1-64-bit.exe cmake-3.6.2-win64-x64.msi","text":"网址 https://github.com/google/protobuf/ 开发环境 Windows 10 企业版 64 位（10.0，版本14393） Visual Studio 2013 Git-2.10.1-64-bit.exe cmake-3.6.2-win64-x64.msi 安装步骤下载在官网下载protubuf，我将其下载解压到D:\\Science\\Google下 创建和编译在开始菜单找到Visual Studio Tools，点击。 在出现的文件中，双击VS2013 x64 本机工具命令提示。 切换路径到D:\\Science\\Google下。 在windows下切换路径直接使用D:回车即可，不需要cd命令。 之后按照教程 https://github.com/google/protobuf/blob/master/cmake/README.md 输入如下指令。 123456789mkdir installcd protobuf-mastergit clone -b release-1.7.0 https://github.com/google/googlemock.git gmockcd gmokegit clone -b release-1.7.0 https://github.com/google/googletest.git gtest 至此，安装成功gmoke。 下面进行编译，输入如下指令。 123456789cd cmakemkdir build &amp; cd buildmkdir solution &amp; cd solutioncmake -G \"Visual Studio 12 2013 Win64\" ^ -DCMAKE_INSTALL_PREFIX=../../../../install ^ ../.. 将会在solution文件夹下创建protobuf.sln。 生成双击打开protobuf.sln。 在生成工具下打开批生成，选中INSTALL Debug，关闭选项卡。 之后生成解决方案，静待几分钟之后，生成成功，发现在D:\\Science\\Google\\install下出现需要的bin、include、lib等文件夹。 Release生成同理。 至此，install文件夹如下所示。 12345678910111213141516171819├─bin├─cmake├─include│ └─google│ └─protobuf│ ├─compiler│ │ ├─cpp│ │ ├─csharp│ │ ├─java│ │ ├─javanano│ │ ├─js│ │ ├─objectivec│ │ ├─php│ │ ├─python│ │ └─ruby│ ├─io│ ├─stubs│ └─util└─lib 上面的树状是用命令tree生成。 使用protobuf在此初步试用protobuf。 https://developers.google.com/protocol-buffers/ 中给出了使用指南。 本文简单给出一个例子，具体使用请查看手册。 为简单起见，在D:\\Science\\Google\\install\\bin下创建person.proto文件。 12345678910package Im;message helloworld&#123; requiredint32 id=1; requiredstring str=2; optionalint32 opt=3;&#125; 使用protoc.exe生成.h和.cc文件。 1protoc --cpp_out=D:\\Science\\Google\\install\\bin person.proto 即在D:\\Science\\Google\\install\\bin文件夹下生成person.pb.h和person.pb.cc文件。 打开visual studio 2013，创建空项目Person_。 新建main.cpp。在其中输入： 1234567891011121314151617181920#include &lt;iostream&gt;#include &lt;string&gt;#include \"person.pb.h\"using namespace std;int main()&#123; lm::helloworld msg1; msg1.set_id(100); msg1.set_str(\"200\"); msg1.set_opt(50); cout &lt;&lt; msg1.id() &lt;&lt; endl; cout &lt;&lt; msg1.str() &lt;&lt; endl; cout &lt;&lt; msg1.opt() &lt;&lt; endl; cin.get(); return 0;&#125; 将person.pb.h和person.pb.cc文件拷贝到和main.cpp同样的路径下，并将这两个文件添加到工程中。 之后需要打开工程属性选项卡。 选择VC++目录。在包含目录中添加D:\\Science\\Google\\install\\include，在库目录中添加D:\\Science\\Google\\install\\lib。 选择链接器&gt;输入。在附加依赖项中添加libprotobufd.lib、libprotobuf-lited.lib、libprotocd.lib。 选择C/C++&gt;代码生成。将运行库中的多线程调试DLL(/MDd)替换为多线程调试(/MTd)。 至此可以编译生成。 如下所示 12310020050 至此，整个安装教程结束。","categories":[{"name":"技术堆栈","slug":"技术堆栈","permalink":"http://maxiaoyuelun.github.io/categories/技术堆栈/"}],"tags":[{"name":"protobuf","slug":"protobuf","permalink":"http://maxiaoyuelun.github.io/tags/protobuf/"},{"name":"google","slug":"google","permalink":"http://maxiaoyuelun.github.io/tags/google/"}]},{"title":"C++输出到txt日志","slug":"C++输出到txt日志","date":"2016-11-09T12:52:07.000Z","updated":"2017-07-23T03:51:37.857Z","comments":true,"path":"2016/11/09/C++输出到txt日志/","link":"","permalink":"http://maxiaoyuelun.github.io/2016/11/09/C++输出到txt日志/","excerpt":"关于C++中使用fstream输出到文件中的部分操作 在编写程序的时候，常常需要将日志输出到类似txt的文件中，这时需要自己编写相关的代码。当用搜索引擎在网上进行搜索时，大多数给予的是有关C的代码，而对于C++的今天，何不用C++来简单实现这些功能呢？作为时代的进步，简化也就意味着高效。这以我在项目中的部分类似代码作为展示，请各位不吝赐教！抱拳！(用引用作为前言是不是不太好…)","text":"关于C++中使用fstream输出到文件中的部分操作 在编写程序的时候，常常需要将日志输出到类似txt的文件中，这时需要自己编写相关的代码。当用搜索引擎在网上进行搜索时，大多数给予的是有关C的代码，而对于C++的今天，何不用C++来简单实现这些功能呢？作为时代的进步，简化也就意味着高效。这以我在项目中的部分类似代码作为展示，请各位不吝赐教！抱拳！(用引用作为前言是不是不太好…) 工具： Visual Studio 2013 通常都会在工程中加入头文件#include 在这里是将日志输出到txt文件中。 例一 这是将数字输出到txt文件中，可供各位看官复制粘贴。 1234567891011void WriteToTxt(float value)&#123; ofstream outfile; outfile.open(\"D:\\\\log.txt\", ios_base::app); if (outfile.is_open())&#123; outfile &lt;&lt; value &lt;&lt; endl; &#125; else&#123; cout &lt;&lt; \"不能打开文件\" &lt;&lt; endl; &#125;&#125; 例二 这是将文字输出到txt文件中，可供各位看官复制粘贴。 1234567891011void WriteToTxt(string s)&#123; ofstream outfile; outfile.open(\"D:\\\\log.txt\", ios_base::app); if (outfile.is_open())&#123; outfile &lt;&lt; s &lt;&lt; endl; &#125; else&#123; cout &lt;&lt; \"不能打开文件\" &lt;&lt; endl; &#125;&#125; 例三 这是将文字和数字输出到txt文件中，可供各位看官复制粘贴。 12345678910void WriteToTxt(string s,float value)&#123; ofstream outfile; outfile.open(\"D:\\\\log.txt\", ios_base::app); if (outfile.is_open())&#123; outfile &lt;&lt; s &lt;&lt; \"=\"&lt;&lt;value&lt;&lt;endl; &#125; else&#123; cout &lt;&lt; \"不能打开文件\" &lt;&lt; endl; &#125;&#125; 鉴于以上组合，相信各位看官了解了如何利用C++进行文字的输出，输入请待下回分解。 关于C++中使用SYSTEMTIME获取当前时间的部分操作 在输出日志的时候，通常需要记录日志输出的发生时间，这就需要程序员自己调用内置函数。也许看官看到这已经发现这是有关调试的文章。好吧！我承认了！调试是软件开发过程中不可或缺的步骤，很重要！ 工具： Visual Studio 2013 通常都会在工程中加入头文件#include 在这里是将时间输出到txt文件中。 例子 这里只是简单实现，需要更好的看官可自行设计。 12345678910111213void GetTime()&#123; SYSTEMTIME sys; GetLocalTime(&amp;sys); ofstream outfile; outfile.open(\"D:\\\\log.txt\", ios_base::app); if (outfile.is_open())&#123; outfile &lt;&lt; sys.wYear &lt;&lt; \"/\" &lt;&lt; sys.wMonth &lt;&lt; \"/\" &lt;&lt; sys.wDay &lt;&lt; \" \" &lt;&lt; sys.wHour &lt;&lt; \"：\" &lt;&lt; sys.wMinute &lt;&lt; \"：\" &lt;&lt; sys.wSecond &lt;&lt; endl; &#125; else&#123; cout &lt;&lt; \"不能打开文件\" &lt;&lt; endl; &#125; &#125; 到这里，本节基本结束了，至于函数中各个参数什么意思，相信搜索引擎会帮你的忙的。","categories":[{"name":"技术堆栈","slug":"技术堆栈","permalink":"http://maxiaoyuelun.github.io/categories/技术堆栈/"}],"tags":[{"name":"c","slug":"c","permalink":"http://maxiaoyuelun.github.io/tags/c/"},{"name":"c++","slug":"c","permalink":"http://maxiaoyuelun.github.io/tags/c/"}]},{"title":"CUDA均值滤波","slug":"CUDA均值滤波","date":"2016-11-09T12:50:36.000Z","updated":"2017-07-23T03:51:37.857Z","comments":true,"path":"2016/11/09/CUDA均值滤波/","link":"","permalink":"http://maxiaoyuelun.github.io/2016/11/09/CUDA均值滤波/","excerpt":"cuda进行均值滤波，主要blockIdx、blockDim、threadIdx等知识点。","text":"cuda进行均值滤波，主要blockIdx、blockDim、threadIdx等知识点。 main.h123#include&lt;time.h&gt;//时间相关头文件，可用其中函数计算图像处理速度 #include &lt;iostream&gt;#define datasize 80000 main.cpp1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859#include &lt;iostream&gt;#include &lt;opencv2\\opencv.hpp&gt;#include \"main.h\"using namespace std;using namespace cv;extern \"C\" int runtest_img(int* host_a, int* host_b, int h, int w);int main()&#123; cout &lt;&lt; \"Hello OpenCV CUDA\" &lt;&lt; endl; Mat img = imread(\"me.jpg\"); if (img.empty())&#123; cout &lt;&lt; \"No \\\"me.jpg\\\"\" &lt;&lt; endl; return -1; &#125; Mat gray_img; cvtColor(img, gray_img, CV_RGB2GRAY); imshow(\"Gray Image\", gray_img); int rows = gray_img.rows; int cols = gray_img.cols; int channels = gray_img.channels(); cout &lt;&lt; \"rows : \" &lt;&lt; rows &lt;&lt; endl; cout &lt;&lt; \"cols : \" &lt;&lt; cols &lt;&lt; endl; cout &lt;&lt; \"channels : \" &lt;&lt; channels &lt;&lt; endl; int* host_img = new int[rows*cols]; int* host_output_img = new int[rows*cols]; for (int i = 0; i &lt; rows; i++)&#123; uchar* data = gray_img.ptr&lt;uchar&gt;(i); for (int j = 0; j &lt; cols ; j++)&#123; host_img[i*cols+j] = data[j]; &#125; &#125; cout &lt;&lt; host_img[(rows - 1)*cols + cols - 1] &lt;&lt; endl; long now1 = clock();//存储图像处理开始时间 runtest_img(host_img, host_output_img, rows, cols); printf(\"GPU运行时间为：%dms\\n\", int(((double)(clock() - now1)) / CLOCKS_PER_SEC * 1000));//输出GPU处理时间 Mat mean_filter_img(Size(cols, rows), CV_8U); for (int i = 0; i &lt; rows; i++)&#123; uchar* data = mean_filter_img.ptr&lt;uchar&gt;(i); for (int j = 0; j &lt; cols; j++)&#123; data[j]=host_output_img[i*cols + j]; &#125; &#125; imshow(\"Mean Filter Image\", mean_filter_img); cvWaitKey(); return 0;&#125; kernel.cu123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263#include \"cuda_runtime.h\"#include \"device_launch_parameters.h\"#include \"main.h\"inline void checkCudaErrors(cudaError err)//错误处理函数&#123; if (cudaSuccess != err) &#123; fprintf(stderr, \"CUDA Runtime API error: %s.\\n\", cudaGetErrorString(err)); return; &#125;&#125;__global__ void meanFilter(int *a, int *b, int h,int w)//处理核函数&#123; int tid = blockIdx.x*blockDim.x + threadIdx.x; int nx = blockIdx.x; int ny = threadIdx.x; if (nx &gt; 0 &amp;&amp; nx &lt; h-1 &amp;&amp; ny&gt;0 &amp;&amp; ny &lt; w-1)&#123; b[tid] = int((a[(blockIdx.x - 1)*blockDim.x + threadIdx.x - 1] + a[(blockIdx.x - 1)*blockDim.x + threadIdx.x +1] + a[(blockIdx.x +1)*blockDim.x + threadIdx.x - 1] + a[(blockIdx.x +1)*blockDim.x + threadIdx.x + 1]) / 4); &#125; //b[tid] = a[tid];&#125; extern \"C\" int runtest_img(int* host_a, int* host_b, int h, int w)&#123; int num = 0; cudaDeviceProp prop; checkCudaErrors(cudaGetDeviceCount(&amp;num)); for (int i = 0; i&lt;num; i++) &#123; cudaGetDeviceProperties(&amp;prop, i); &#125; int *dev_a, *dev_b; //int *dev_h, *dev_w; checkCudaErrors(cudaMalloc((void**)&amp;dev_a, sizeof(int)* h*w));//分配显卡内存 checkCudaErrors(cudaMalloc((void**)&amp;dev_b, sizeof(int)* h*w)); //checkCudaErrors(cudaMalloc((void**)&amp;dev_h, sizeof(int)));//分配显卡内存 //checkCudaErrors(cudaMalloc((void**)&amp;dev_w, sizeof(int))); checkCudaErrors(cudaMemcpy(dev_a, host_a, sizeof(int)* h*w, cudaMemcpyHostToDevice));//将主机待处理数据内存块复制到显卡内存中 checkCudaErrors(cudaMemcpy(dev_b, host_b, sizeof(int)* h*w, cudaMemcpyHostToDevice)); //checkCudaErrors(cudaMemcpy(dev_h, &amp;h, sizeof(int), cudaMemcpyHostToDevice));//将主机待处理数据内存块复制到显卡内存中 //checkCudaErrors(cudaMemcpy(dev_w, &amp;w, sizeof(int), cudaMemcpyHostToDevice)); meanFilter &lt;&lt;&lt;h, w &gt;&gt;&gt;(dev_a, dev_b, h,w);//调用显卡处理数据 checkCudaErrors(cudaMemcpy(host_b, dev_b, sizeof(int)* h*w, cudaMemcpyDeviceToHost));//将显卡处理完数据拷回来 cudaFree(dev_a);//清理显卡内存 cudaFree(dev_b); /*cudaFree(dev_h); cudaFree(dev_w);*/ return 0;&#125;","categories":[{"name":"技术堆栈","slug":"技术堆栈","permalink":"http://maxiaoyuelun.github.io/categories/技术堆栈/"}],"tags":[{"name":"c","slug":"c","permalink":"http://maxiaoyuelun.github.io/tags/c/"},{"name":"c++","slug":"c","permalink":"http://maxiaoyuelun.github.io/tags/c/"},{"name":"cuda","slug":"cuda","permalink":"http://maxiaoyuelun.github.io/tags/cuda/"}]},{"title":"Hexo静态站点搭建","slug":"Hexo静态站点搭建","date":"2016-11-09T12:42:42.000Z","updated":"2017-07-23T03:51:37.857Z","comments":true,"path":"2016/11/09/Hexo静态站点搭建/","link":"","permalink":"http://maxiaoyuelun.github.io/2016/11/09/Hexo静态站点搭建/","excerpt":"开发工具Windows，Notepad++，Node 搭建步骤安装前提安装 Hexo 相当简单。然而在安装前，您必须检查电脑中是否已安装下列应用程序： Node.js Git 如果您的电脑中尚未安装所需要的程序，请自行安装。","text":"开发工具Windows，Notepad++，Node 搭建步骤安装前提安装 Hexo 相当简单。然而在安装前，您必须检查电脑中是否已安装下列应用程序： Node.js Git 如果您的电脑中尚未安装所需要的程序，请自行安装。 其次需要创建Github Pages。至于如何创建，可自行谷歌，如博主有时间再更。 安装Hexo使用Git Bash输入： 1npm install -g hexo-cli 安装完成后，请执行下列命令，Hexo 将会在指定文件夹中新建所需要的文件。 123hexo init &lt;folder&gt;cd &lt;folder&gt;npm install 新建完成后，指定文件目录如下： 12345678.├── _config.yml #网站配置信息，您可以在此配置大部分的参数。├── package.json #应用程序的信息。EJS, Stylus 和 Markdown renderer 已默认安装，您可以自由移除。├── scaffolds #模版 文件夹。当您新建文章时，Hexo 会根据 scaffold 来建立文件。├── source #资源文件夹是存放用户资源的地方。| ├── _drafts| └── _posts└── themes #主题 文件夹。Hexo 会根据主题来生成静态页面。 安装Next主题Hexo 安装主题的方式非常简单，只需要将主题文件拷贝至站点目录的 themes 目录下， 然后修改下配置文件即可。具体到 NexT 来说，安装步骤如下。 下载主题如果你熟悉 Git， 建议你使用 克隆最新版本 的方式，之后的更新可以通过 git pull 来快速更新， 而不用再次下载压缩包替换。 在终端窗口下，定位到 Hexo 站点目录themes下。使用 Git Bash代码： 12cd your-hexo-sitegit clone https://github.com/iissnan/hexo-theme-next themes/next 启用主题与所有 Hexo 主题启用的模式一样。 当 克隆/下载 完成后，打开 站点配置文件， 找到 theme 字段，并将其值更改为 next。 1theme: next 验证主题hexo自带服务器，输入： 1hexo server 即可在浏览器中查看。 Hexo部署Git命令123hexo cleanhexo ghexo d 其余部分可参考给出的参考文献，至于在Github Pages中使用自己的域名，需要在Repository中部署CNAME文件。 参考文档Hexo快速、简洁且高效的博客框架 Next精于心，简于形 hexo你的博客 知乎：如何搭建个人独立博客？","categories":[{"name":"技术堆栈","slug":"技术堆栈","permalink":"http://maxiaoyuelun.github.io/categories/技术堆栈/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"http://maxiaoyuelun.github.io/tags/hexo/"},{"name":"next","slug":"next","permalink":"http://maxiaoyuelun.github.io/tags/next/"}]},{"title":"opencv指针读取图片","slug":"opencv指针读取图片","date":"2016-08-28T04:40:27.000Z","updated":"2018-05-04T04:41:42.247Z","comments":true,"path":"2016/08/28/opencv指针读取图片/","link":"","permalink":"http://maxiaoyuelun.github.io/2016/08/28/opencv指针读取图片/","excerpt":"一段代码","text":"一段代码 123456789101112131415161718192021222324252627282930313233343536373839#include &lt;iostream&gt;#include &lt;opencv2\\opencv.hpp&gt;using namespace std;using namespace cv;int main()&#123; cout &lt;&lt; &quot;Hello OpenCV!&quot; &lt;&lt; endl; Mat img = imread(&quot;me.jpg&quot;); if (img.empty())&#123; cout &lt;&lt; &quot;No \\&quot;me.jpg\\&quot;&quot; &lt;&lt; endl; return -1; &#125; int channels = img.channels(); int rows = img.rows; int cols = img.cols; cout &lt;&lt; img.isContinuous() &lt;&lt; endl; cout &lt;&lt; img.depth() &lt;&lt; endl; cout &lt;&lt; img.type() &lt;&lt; endl; cout &lt;&lt; &quot;channels = &quot; &lt;&lt; channels &lt;&lt; endl; cout &lt;&lt; &quot;rows = &quot; &lt;&lt; rows &lt;&lt; endl; cout &lt;&lt; &quot;cols = &quot; &lt;&lt; cols &lt;&lt; endl; imshow(&quot;这是我啊&quot;, img); Mat r(Size(cols, rows), CV_8U); int a[296][207]; //imshow(&quot;Blue&quot;, r); for (int i = 0; i &lt; rows; i++)&#123; uchar* data = img.ptr&lt;uchar&gt;(i); uchar* red = r.ptr&lt;uchar&gt;(i); for (int j = 0; j &lt; cols*3; j=j+3)&#123; red[j/3] = data[j]; a[i][j / 3] = data[j]; &#125; &#125; imshow(&quot;Blue&quot;, r); cout &lt;&lt; a[0][0] &lt;&lt; endl; waitKey(); return 0;&#125;","categories":[{"name":"技术堆栈","slug":"技术堆栈","permalink":"http://maxiaoyuelun.github.io/categories/技术堆栈/"}],"tags":[{"name":"opencv","slug":"opencv","permalink":"http://maxiaoyuelun.github.io/tags/opencv/"}]},{"title":"中国通胀、汇率、楼市、股市有啥关系","slug":"中国通胀汇率楼市股市有啥关系","date":"2016-05-03T05:33:05.000Z","updated":"2018-05-04T05:39:55.932Z","comments":true,"path":"2016/05/03/中国通胀汇率楼市股市有啥关系/","link":"","permalink":"http://maxiaoyuelun.github.io/2016/05/03/中国通胀汇率楼市股市有啥关系/","excerpt":"演讲人：邱晓华，著名经济学家，国家统计局原局长现在，我把眼光回到今天，看一看今年中国经济的一些主要方面的变化。","text":"演讲人：邱晓华，著名经济学家，国家统计局原局长现在，我把眼光回到今天，看一看今年中国经济的一些主要方面的变化。 一、增长的问题中国经济从增长的角度，从今年看未来，一个基本的结论是：有底，但是没有高度。未来一段时间，中国经济很可能就像人们说的，是一个”L”形的发展态势，不会是一个”V”形的发展态势，也不会是一个”U”形的发展态势，也不会是”W”形的发展态势，它就是一个”L”形的发展态势。它是一个有底部的增长态势，由底要往上走，在未来若干年都不是那么容易。这个”底”在哪里？就是”十三五”提出来的”6.5%”左右，这是我们党提出来第一个百年目标要实现的最基本的速度，也就是说今年也好、明后年也好，中国经济都将在6.5%这个底线上面来增长。不会明显跌破6.5%，也不会明显高于6.5%。因此，政府会想方设法都要让这个”底”守住。而中国又是一个相对独特的国家，它的独特性表现在两方面：第一，它有一个很健全的行政组织体系，从中央到村一级，有一个很健全的行政组织体系，这在世界范围之内除了朝鲜都是少有的。因此，一声令下，能够快速地在全国形成一个巨大的行政推力，这是别的国家所没有的。如果只有这样一个组织体系可能还不行。第二，中国是一个政府还掌握着相当要素资源的国家，从土地、银行到矿产，甚至到人——比如说我们中国所有的聪明人、能人，大多数掌握在政府的手上，哪怕是民营企业家都挂上了各种的社会职务，他也纳入到政府的体系里面。所以，它能够运用强有力的行政手段，运用自身所掌握的要素资源，来实现短期的发展。这是别的国家所没有的，所以它不会轻易地让GDP增速跌破6.5%这个底部。从货币政策、财政政策等一些政策面上来看，我们同样能够看到中国经济在政策面上还是有一定的控制力。货币政策方面，虽然利率杠杆的使用是越来越接近天花板，但是在其他货币工具方面的使用还是有很大的空间，降准这是一个还有很大空间的工具，现在18%左右，你降到10%左右的正常水平还有8%，降到15%的安全线，稍微这里要宽松一点，也还有3%，每降1%就可以增加超过1万亿的商业银行的高能货币，从这个角度来说还是有货币政策灵活运用的一定的空间。财政政策方面，尽管前面讲地方政府债台高筑，但从整个中国政府的角度来看，目前的负债率高的测算50%左右，政府自己说40%左右。不管是40%还是50%，甚至如果再加一块，也在世界正常范围之内，在大的经济体里面，中国政府的负债率也还是低的，美国接近100%，欧洲接近100%，日本超过200%，中国现在在60%以内。所以从这个角度来说，政府还可以加杠杆。从基本面上来看，中国经济的基本面第一是工业化，第二是城市化，第三是信息化，第四是农业现代化。过去是，现在是，今后一样也还会是中国经济的基本面。完成工业化、完成城市化、完成信息化、完成农业现代化，是整个中国经济发展的最基本的方面，它能够创造出很多的需求，能够创造出很大的供给，这几个领域里面目前这个趋势还没有完结，只是现在提出来要有更多的新型的分量。从这个角度来说，也还有一个增长的惯性。大家知道城市化每增加一个农民变为市民，县一级大概是5万左右的公共投入，包括基础设施，包括科教文卫；中等城市15万左右，大中城市20到更高一点不同。因此，从城市化水平，从目前户籍人口占40%左右要在未来5年提高到45—50%之间，有3亿人要变为市民，即已进城的1亿人要由农民变为市民，要解决户口落地的问题，城中村的还有棚户区的1亿人要变为市民，中部地区的工作了了城市群建设涉及到1亿农民要变为市民，3亿人在未来5年变为市民。大家可以想像他们的市民化一定意味着要有一个巨大的投入，粗略估计都是40万亿以上的投入力度，才能解决3亿人市民化的问题。从基本面的角度来说，它有一个增长惯性，守住底部应当说是有能力、有条件，也是可以实现的。但是它确实没有高度，或者很难达到昨日的高度，几乎已经不可能回到昨日的高度，某个季度、某个时段可能会，但是趋势上已经不大可能。因此，制约中国经济的这些因素不解决，它就很难恢复到之前的高度，而且即使解决了也很难，资源问题、环境问题都很难解决。过去可以容忍的”带血的GDP”、”黑色的GDP”、”无效的GDP”，或者是”低效的GDP”，今后都不可能再实现，或者不可能再追求。GDP增长今年一季度是6.7%，这是一个官方公布的数据，投资增长了10.7%，零售增长了10.3%，外贸还是下降的，但是它是靠信贷的大力度地扩张。大家知道整个社会融资的规模超过6万亿，银行的信贷投入超过4万亿，都比去年同期明显增长。换句话说是靠钱堆出来的。但是这个钱也还没有完全到位，还走在路上，还没有完全地成为现实的推动力，但是有一部分已经进入了。不管怎么说，一季度6.7%总体上还是一个下行，低于去年6.9%，也低于上一季的6.8%，但是大家可以看到，减缓的速度是放慢了，某些方面出现了一定程度的改善。二季度会怎么样？我想中国经济的增长，这几个因素如果没有明显的改善，它很难扭转下行。第一是投资，投资如果不能稳定增长，经济也很难稳下来。眼下看投资是10.7%已经处于稳定了，比去年同期还略高了一点，高了0.3—0.4%。第二是工业，工业从3月份的角度来看已经比1、2月份要回升了，但是从1—3月份来看这个5.8%应该说跟去年没有太大的变化，跟去年同期相比还略有回落。但是从趋势看，看到它有一点抬头的迹象。第三是出口，一季度下降4.2%，3月份似乎有一点季节性和技术性两个因素影响回升，全年能不能扭转下降的局面也关乎到今年的增长。按目前的趋势推断，二季度有可能出现”阶段性的回稳，二季度有可能经济不再下行，可能在6.8%左右的区间，至少不会低于一季度6.7%。这就出现了阶段性的趋稳。下半年，如果目前的稳增长的政策效应能够进一步放大，那么下半年有可能在二季度的基础上面还会略有回升。全年就是6.7—7%之间，平均速度可能全年就是6.8%，有可能是这样一个增长态势。有一个因素需要特别指出，非经济因素对中国经济的影响有可能在今年开始会变得更有利一些，而不是不利一些。非经济因素一方面是指反腐败的这种非经济因素。前一时期更多是以治理乱作为作为反腐败的主线，未来除了继续不放松对乱作为的治理之外，将会把更多的精力或者是更多的注意力放到治理不作为。因为前一段在治理乱作为中间，派生出了一些不作为的倾向。去年我到各个地方去走，跟一些老朋友见面，和地方政府的一些朋友见面，普遍得到的印象就是发展是第二位的，安全是第一位的。所以，以前那种扩张的冲劲、那种发展的热情明显地有所改变，就是心态改变了。我也在政府呆过，也遇到过这种挫折，其实在政府部门呆过的人，在目前这个社会下要抓你一点问题，可以说90%以上的人都会被抓了，不可能没有问题。吃一顿饭可以抓你，你接受了5千块钱的礼品他可以抓你，以前我估计官员收个5千块钱的礼品可能不会是少数的，它可以追溯历史，现在肯定不能收了，但是历史上肯定收过，这个卡那个卡肯定都有。第二，今年是换届开始的一年，地方政府开始换届，从乡政府到县、到市，陆陆续续进入到省一级，都已经进入到换届，新的一轮政治周期开启了。政治周期的开启一定意味着在一线干的同志，肯定要以经济层面、社会层面的一张成绩单去迎来政治国理政上的一定的保障度，这肯定是一个政治周期所带来的一个效应。换句话说，这个地区无论是市还是省的领导人，特别是主要的领导人，都有一种”不能让这个地方出现太多的问题，不能让这个地方的经济太糟糕，要不然就入不了委，要不然就进不了局”，他就有这种政治的冲动，推动着他要把短期的经济尽可能地完成得好一点。第三，今年是”十三五”的开局之年，”十三五”开好局又是大家一个普遍的心态，一些事情可能在开局之年不能太糟糕，也会转化为一定的经济发展的推动力。所以我们看中国经济的2016，不能仅从经济面上去讨论问题，可能还要从非经济面上进一步地来分析问题，这样我们能够看到2016年的中国经济虽然是困难的一年，但是在困难中还是能够实现不跌破底部的发展。所以6.5—7%作为今年的目标守住，估计概率是比较大的，这就是增长的部分。 二、通胀问题通胀，通胀的问题从整个中国经济各方面的环境来看，始终是一个问题。一方面大量的钞票肯定会转换为通胀的压力，这些年的广义货币数量确实是明显增加，从2008年之前的可能就是40、50万亿，现在是已经超过100万亿，那确实有很大的增长。他始终就会对物价形成一定的压力，最终一定会通过通胀来消化掉这些超发的货币，这是一个客观规律，哪个国家都改变不了的。你超发的货币最终就是这个钱不值钱，不值钱不就是通货膨胀吗？第二，这些年各种各样的坏账、各种各样的债务，最终的解决也要通过通胀来冲销，这是始终存在的一个因素。第三，我们很多价格不合理，肯定也还要调整一些价格，涨价的一些因素也还存在。第四，各种不可预见的因素，气候问题、外部世界的问题等等，也可能会造成一定的通胀问题。所以对”通胀不掉以轻心”这句话我认为时刻还是要记在心理，对于政府主要的领导人来说，对于我们企业来说，对于老百姓来说都要记住。也就是说我们始终面临着钱可能贬的风险，所以对于通胀不能掉以轻心。对于眼下中国来说：第一，市场供求关系还是供大于求。目前通胀压力更多的还是由于气候的问题和某些商品的问题造成的，猪肉价格、蔬菜价格大幅度地上涨，造成了短期通胀由1%到2%的变化，现在一季度是2.1%的通胀水平，比去年的1.4%提高了0.7%。应当说，短期是由于这些因素都释放出来。长期的一些因素并没有释放出来，但是始终还是有压力，但是从未来几年来看，中国更大的问题还不是通货膨胀。换句话说，通胀还构不成中国经济的主要问题，因为从总体上看，中国现在还是供给大于需求，因此在这样一个市场环境下面，不大容易出现严重的通货膨胀。第二，中国目前从总体上看，上游产品还没有改变下降的局面，PPI工业品出厂价格已经连续49个月还处于下降，一季度下降为4%多一点，3月份当月下降为4.3%，未来要由降转为增还要一定的时间，来自上游涨价的压力眼下也还不大。第三，外部世界虽然变化了，一些大宗商品价格短期有些波动，但总体上看，相对于过去来自国际的涨价压力，应当说还不是很大，输入性的通胀压力不是很大，美元属于相对的强势，所以大宗商品的价格还是受到强势美元的压制。第四，中国目前的通胀从性质上看属于成本推进型，而不是需求拉动型，两者对通胀释放的机理不一样的。成本推进型是渐进释放，需求拉动型是急剧释放，性质上看也不会短期快速地释放出来。结论就是，未来一段时间里面，中国依然还处于温和通胀型，也就是2—3%之间变化的概率相对大一些，明显高于3%的概率小，明显高于5%的概率更小，这是从温和到中度还需要一定时间，中度到高度那就更需要时间。对于通胀问题，短期还不需要作为一个主要的问题。作为长期来看，你还是要防范，要去划界，要逐步地来解决这些超发的货币、这些债务，这些去产能，去掉这些方面的一些问题所带来的通胀因素，这些问题可能还是需要去解决。 三、房地产问题房地产的问题大家很关心，房价到底会怎么样变化，房地产的形势到底会怎么样的变化。从总体上看两句话：第一，房地产增长时期还没有结束，但是黄金期可能已经结束了。第二，房价上涨趋势也还没有结束，但是大幅度上涨的这种暴涨的趋势，或者是暴利的时期已经结束了。基本的理由是，从房地产的形势来看，只要工业化、城市化、人口增长这三个趋势没有结束，中国的房地产就依然还处于一个增长时期，只是增长率在回落，而不是进入到一个增长率由正转为负的长期趋势。从房价的角度来看，主要是因为基本的消费需求依然还比较强烈，改善性的消费需求还更强烈，投资投机性的需求受到了抑制，因此，这样一个角度来看它还会推动房价的上涨。但是暴涨暴利的时期确实已经结束了，一方面房地产的成本已经大幅度上升，因此它的利润空间也被成本挤掉了一块，另外一方面各项政策的完善也相应地压制了一块价格的上涨和暴利的获得，特别是未来随着房产税的出台，一定会极大地抑制投资、投机型的住房需求。未来房地产的变化，更多会随不同的区域、不同的经济发展水平、不同的居住环境，而发生差异性的变化，一线城市房地产总体上还是处于供不应求的发展状态，因此，它的增长如果有相应的政策，肯定还是会增长比较快的。问题是由于土地等诸多制约条件，因此他们的增长也受到一定的抑制。房地产什么时候会结束增长，房价什么时候会真正转入下降？就是工业化、城市化、人口增长，这三个趋势结束之后就会发生变化。这三个趋势什么时候结束，我估计5—10年之后就会发生改变。5—10年之后中国的工业化大致完成，中国的城市化也接近了一个相对稳定的水平，中国人口也由增长转为下降，那个时候死亡人口大于出生人口，所以中国人口的总量可能到14.5亿或者是14.7亿的时候，开始转为逐步的下降了，而不是再往上涨15亿、16亿……。到那个阶段，那就意味着卖房的人大于买房的人，市场就会发生根本性的逆转。而眼下这个趋势是可以预见到的，因为对于大多数的城里人来说，未来的家庭住房会由目前的一套变为两套、三套，它会多出来，一个年轻的家庭将来会接收自己父母的两套住房，女方、男方各接收一套，这是未来房地产会多出来的发展趋势。至于最近一段炒出来的温州20年的期限这些东西，那完全是因为对政策理解的不正确、不全面。70年不变、70年到期自动延期，至少是政策上明确的。中国虽然土地不是私有的，但是在这70年之内确实是不会变。70年之后会不会变化？我想告诉大家的是，中国的住房至少没有多少住房它的使用寿命能够达到70年，所以这是一个肯定就没有发生变化的可能性，在没有到70年之前就要重新建设、重新改变。第二，70年以后中国的政策也一定会改变，也不会像今天这个政策。所以未来政策也一定会有变化，变化是什么变化？未来住宅土地一定会逐步地私有化，这是肯定的一个局面，至少现在不会，基本国情决定的。但是到未来住宅的土地一定是会变成私有化，因为农民本身宅基地已经鼓励它可以流通、可以抵押，这已经属于私有化的一个趋势。未来城里面的宅基地当然也要完全解决给个人，而不是城里人买的只有地面上的所有权，没有地下的所有权，这都不对的。因为目前大家都已经交过钱了。从这个角度去说大家也不用去担心70年以后，像现在温州说的按房价的1/3补交土地出让金，这是不对的，这也不大可能发生。只是现在温州可能也只是一个炒作，土地主管部门，目前经济困难下面可能想向消费者去要一点钱，但是这种做法肯定是不对的。 四、汇率问题现在我们最需要防范的风险当然就是汇率风险，汇率风险肯是一个现实摆在我们面前的一个问题，这里面提出来了自己的钱和别人的钱都要出去的这样一个判断，意味着我们的外汇储备将会逐步减少，意味着人们对外汇的需求将会逐步增多，这样一个基本的判断。自己的钱包括两方面，一方面是政府的钱要出去，”一带一路”战略的实施，政府鼓励外汇要用于对外的投资。第二方面是个人的钱，企业和个人在海外资产配置中的比例会逐步上升，海外资产占居民可投资资产的比重，中国相比欧洲、中东和非洲、日本、拉丁美洲、北美的比重都要低，换句话说将来富裕起来的人他的资产配制会有一个国际配置的需求。更何况有一些政策的不完善，还有一部分钱会更多地转移出去，这些都存在。所以从这个角度来说，自己的钱出去，这是一个趋势。另一方面别人的钱也要出去，那就是随着中国投资环境的一些改变，整个世界格局的一些调整，以前到中国来投资的一些外商的钱，正在逐步地转移、逐步地撤退，到那些投资环境更有利、投资回报更高的地方，特别是过去在中国制造的很多转移到了周边的领域，转移到了非洲、转移到了拉丁美洲，这个趋势也在发生。甚至回流发达国家的趋势也在发生，美国再工业化，欧洲强调工业化，等等这些问题已经造成一部分资金回流。再加上对人民币汇率一些预期的改变，一些热钱的流动也有一个变化，从这个角度来说，中国确实面临着对外汇的需求有一个越来越强的趋势，那就意味着外汇的价格会越来越贵。这就是一个结论，需求强之后，一定意味着它的价格会更贵，本币会更便宜。这是一个客观存在的发展趋势，中国从发展层面到了一个资本输出的阶段，在人民币没有完全国际化之前，一定意味着 外汇的需求会更大地增加。只有到了人民币完全国际化了，这就会去有一个改变了，这是从一个大的宏观环境来看。从外部的角度来看，美元处于一个加息的周期，自然就对我们人民币形成一定的贬值压力。他的钱更值钱，我们的钱就有可能贬值。再加上一些国家竞争性的货币贬值，也会诱发或者是改变人民币汇率方面的一些变化。所以对外部有一个诱导或者是推升人民币贬值的压力。内部由于中国经济整体上还处于下行阶段，各种调整的任务还比较重，因此整个经济的基本面应当说还处于相对的不景气的状况。经济不景气一定意味着货币的弱势，只有经济的景气，这个国家的货币才会更强势。人们从北京外部世界看一个国家的货币的时候，一定是跟你经济的基本面挂钩起来的，当看到你目前还处在转型升级的痛苦阶段，你的基本面困难比较多，当然他们看空人民币的这种预期就会强化。另一方面中国的出口还处于下降的局面，因此来自出口企业和相应的主管部门对弱势人民币的这种期待也比较高，期望人民币能贬一点不要升值，来帮助企业出口。所以从这几个方面来看，中国确实还面临着阶段性的人民币贬值的压力。但是从一个发展过程来看，从一个长期趋势来看，中国人民币的汇率也不大可能出现长期的、趋势性的贬值。一方面中国经济目前从增长的角度来看，还处于相对高的水平，中国跟国际比较还有一个增长差，你6%多跟世界3%左右，跟美国1%、跟欧洲、日本百分之零点几的增长相比，还是有一个很大的增长差，因此从增长差看问题，人民币不可能表现得比那些更差的国家更弱势。第二，中国的外汇储备加上商业银行的外汇头寸都还比较充裕，即使从4万亿美元已经降到3.2万亿，但是至少中国的外汇储备还高达3万亿以上，还是世界最大的储备国。商业银行也还有超过1万亿美元的头寸，中国商业银行绝大多数都是国有，因此在一定意义上也能够扮演协助政府发挥调控作用的角色。从中国目前发展阶段所需要的正常外汇储备来说，估计也还有将近1万亿美元左右的余地，可以用来应对短期做空人民币的一些行为，不大可能出现短期就把人民币整垮。从去年的”8.11”以后到今年年初，这两轮央行的”汇率保卫战”来看，还是有手段、有力量，能够有作用。从外汇储备的角度来说，政府还是有能力。更何况政府还可以根据目前中国人民币还不完全是个自由市场的这种汇率，它是个有管理的浮动汇率，因此它可以在政策上、法律上对资本的流动进行必要的管理，对外汇资产的应用进行必要的调节。也就是说它还可以采取一些限制的措施。第三，外部虽然美元处于加息的周期，但是这一轮美元还是一个弱加息的周期，另外美元强势的市场预期已经透支了，或者基本上已经接近天花板，所以美元也不可能有更大的升值空间，更何况欧元还继续弱势，日元也没有太大的强势可能性。所以从这个角度来说，人民币受主要发达国家货币的影响，在未来也不是那么强烈。第四，目前中国的利率水平还高于国际发达国家水平的利率水平，利率的正利差还存在，所以也不至于出现大量的资本套利跑出去。从目前各方面的情况综合来看，政府的政策目标或者是央行的政策目标，很有可能是把它定在不轻易突破7元，作为一个政策的底线来考量。因此那种认为人民币可能跌到8以上，那种可能性很小，几乎不存在。至于长期人民币的汇率怎么看，我想涉及到咱们自己对这个国家经济的前景怎么看，如果对国家经济的前景有信心，你就不要轻易动摇对人民币汇率的信心，反之如果你认为国家的前景不看好，你就可以不对人民币汇率有太强的信心和太强的期待。从眼下中国各方面的情况看，前者的概率明显大于后者，即中国经济好转的前景大于坏的前景，所以大家也用不着对人民币失去信心。作为个人、作为企业，在现阶段适当地调整自己的货币资产，做出一些对冲风险的阶段性的安排那还是非常必要的。 五、股市问题深圳是资本市场比较活跃的一个地方，我想讲的是两点：第一，短期中国的资本市场目前正处于一个振荡的阶段，振荡行情可能构成了短期的资本市场一个主要的行情，换句话说，前期的那种单边市场的阶段已经结束了，那种疯牛的行情已经没有了，”猪已死去”，那种会飞的猪已经没有了，已经死去了。这主要是因为整个资本市场的一些因素如杠杆牛等这些短期的投机性的因素，或者是短期的这种单边的因素越来越弱化了。一方面中国经济跟资本市场的关系不可能长期地脱钩，也就是说基本面不可能长期与资本市场脱钩，对于股票市场要回归基本面他也是一个必然的趋势，短期他肯定受到目前这种经济下行等等这方面的一些因素的影响。第二方面，前期救市之后的一些后遗症始终是短期资本市场需要消化的一个元素，1万多亿救市的资金总有一天是要从资本市场退出，或者有一个调整，这个概率是存在的，只是眼前不是那么迫切，眼下政策还不允许。再就是中国资本市场先天的不足带来的那种企业业绩不好的一些问题，他也是影响到资本市场短期的因素，不可能那些亏损企业的股票能够卖到好的价格，那是不可能长期有这样的趋势，除非疯了。像去年6月份以前那是疯了。还有就是上市公司冻结或者放缓之后积累下来的一些问题总有一天也要解决。现在有六七百家在排队，对短期的资本市场也会产生一些影响。此外，一些改革，注册制、国际板、战略新兴板也好，这些改革虽然暂时没有时间表，但是始终也是对短期资本市场有一个心理影响的因素。所以综合这些方面，再加上货币政策宽松的天花板已经越来越接近，降息的空间越来越小。2016年最多有一次，而且概率在降低，人民币利率很可能就要结束这一轮的降息周期，因此对资本市场肯定也会产生短期的稍微流动性减弱的影响。第二，中国资本市场的长期面还是值得期待的，”牛”还没死去，主要是基于中国资本市场的地位、中国资本市场影响力、中国资本市场作用，在现阶段和未来中国经济的转型升级和发展中的影响力会越来越大，未来中国经济的发展离不开资本市场的逻辑越来越强。因此，政府对于资本市场的态度越来越重视、越来越友好，这个基本面没有改变，这也是从2014年年底开始资本市场逐步结束长达7年的低迷期之后的最基本的一个逻辑。主要是五个方面：第一，要解决企业融资难、融资贵的问题。由过去的主要由信贷驱动转到资本市场驱动，由间接融资为主到逐步提高直接融资比重，这样一个发展政策已经成为国家层面的共识。要通过发展资本市场为企业解决融资难、融资贵的矛盾，减轻企业的财务成本，缓解企业杠杆比较高的一些问题。第二，中国的资产负债表也需要逐步地修复，而修复资产负债表最有效的内容就是资产证券化。而资产证券化需要的载体就是资本市场，美国2008年之后之所以摆脱困难，靠的就是资本市场提供的帮助，修复了银行的资产负债表，修复了家庭的资产负债表，修复了企业的资产负债表。当然政府的资产负债表是不需要修复的，所以它变得更坏，因为政府的资产负债表是由全球买单，所以它用不着去担心，是由美元的国际地位决定的。现在中国资产负债表从政府到企业、到银行也出问题了，所以也需要修复，就要用资本市场来修复，通过资产证券化去解决。第三，转型升级必然意味着存量资产需要重组，增量资产需要重配。重组重配无非是两条路，第一是政府主导，第二是市场主导。而实践已经告诉我们，政府主导是不可能完成转型升级的，而只有市场主导才能够完成转型升级，而市场主导就需要靠资本市场。通过资本市场实现资源的配置更合理、更优化，因此，对已经上市的公司，对大量的传统产业，资产的重组是未来一个重要的内容，对于各种新兴产业包括新三板这些新兴产业，进一步的资本市场化也是一个必然的趋势。所以从这个角度来说，资本市场不可或缺。第四，民众的财富配置也有一个更优化的过程，要逐步地由以实体经济、房地产配置财富，到逐步地提高金融资产的比重。而金融资产的比重过去更多是银行储蓄，各种各样的理财产品，未来要更多地配置到资本市场。通过财富的专业管理，通过财富的市场运作，来保值增值，而资本市场是一个重要的通道。第五，人民币国际化意味着中国资本市场要开放，意味着由一国市场变成多国市场，变成全球市场，因此来自全球的流动性将极大地补充一国的流动性。全球投资中国资本市场，一定意味着中国资本市场会更加地活跃。这就是”牛没有死去”最基本的一个逻辑。只是资本市场毕竟是市场，因此是市场它就必定有风险，而中国又是在很大程度上还没有完全改变政策市的这样一个特点，因此，就又多了一个政策性的风险。所以对市场风险的防范，对政策风险的防范，也还是投资者时刻不能忘记的定律，不要因为”牛还活着”就麻木了，还是要在防范风险下面去观察、去投资资本市场。未来的三条线是要注意的：第一，要更多关注并购重组这条线，去发现重组的机会，去防范重组的风险。第二，新兴产业发展这条线，去发现新材料、新能源，智能制造，生物医疗、环境保护治理等等方面，以及文化、健康这方面的产业，发现新的投资机会。第三，要丰富自己的对冲风险的工具，要从单边的市场，单一的市场、单一的品种如何转为多元化，一级市场、二级市场联动，国际国内联动，现货期货联动，以及商品市场、资本市场、汇率市场、房地产市场各种市场兼顾，这样去增加投资的对冲风险的能力，获得绝对的收益。","categories":[{"name":"闲话桑麻","slug":"闲话桑麻","permalink":"http://maxiaoyuelun.github.io/categories/闲话桑麻/"}],"tags":[]},{"title":"回首","slug":"回首","date":"2016-04-28T03:33:30.000Z","updated":"2018-05-04T04:39:06.372Z","comments":true,"path":"2016/04/28/回首/","link":"","permalink":"http://maxiaoyuelun.github.io/2016/04/28/回首/","excerpt":"其实，不知道该写什么题目，本想写无题，又是那么的重名，刚刚看了某人的日记，然后就蹦出来回首这个词。","text":"其实，不知道该写什么题目，本想写无题，又是那么的重名，刚刚看了某人的日记，然后就蹦出来回首这个词。 也许看到题目是个怀旧的文章，也许并且可能吧，主要现在论文不想写，然后给自己找点事做，不能总是刷微博豆瓣，一遍遍的刷新，索性就写点什么。 至于回首，其实刚刚是看了琪的以前的日志，回首到以前的事情，想想以前还真是那么年少无知到那种程度，以至于那么点的关心都变成她的奢侈，可想当时伤她多深，至于后来的种种，也不好说谁对谁错了。 从这件事上，可以看出我是个怀旧的人，总喜欢挖掘点有价值的文字来弥补如今空虚的心灵。 这篇日记也只是天马行空，想到哪就写到哪。 近期干的一件事就是写论文，做了这么大约一个多月的实验，也着实累了这么长的时间，接下来的工作就是收尾，完成这最后的篇章。以前没写过论文，相对于自己匮乏的词汇，写一篇论文很难。幸亏近期看了很多的文章，所谓熟读唐诗三百首，不会吟诗也会偷。那么，我的第一篇论文只能是偷了，博采众家之长，至少能写一个令自己满意的论文。所以，近期要尽快完成初稿。 好像这段时间除了这么一件事可以说的，然后就是不断的做实验然后那么三点一线的重复的劳动，期间，收获了孤独和信心。至于其他方面的事，感情亦或自己其他方面的提升也是自己比较关注的。 感情，哎，到了这么的年纪，总是要起床每天面对的事情。这阴雨连绵的天气，给自己的感情道路也蒙上一层阴雨。有那么一个人，也许该自己主动去追。她不是很漂亮，但是很优秀，有着自内而外散发出的光芒，这也让我不得不承认家庭因素带来的固有的差距，这个差距就是我现在需要弥补的。不知道从哪看到的数据，德国近几十年的阶层并没有发生很大的变化，由此可以看出，如果不主动跳出这固有的阶层僵化，以当今社会的发展更难完成阶层的跳跃，而我可以说是幸运的，幸运的是，抓住了机会的尾巴，至少现在看来还是有可能完成阶层的翻越，也可以说是不幸的，因为在我们前面的那些人比我们更幸运，他们处在变革的大时代下，只要稍微有些资本就可以很快的完成翻越，所以，综合考量来说，我还是觉得幸运的，因为我毕竟是少数中的那么些人，人生是一场马拉松，不必在意这一城一池的得失。坚信自己现在所走的道路，也许后面会变得更好。 那么后面的可以说顺其自然，当然自己得争取，如果有个好的结果，可以说是感谢上苍，当然需要培养自己的吸引力。 人一定要有自己的爱好，记得高中的时候，跟着大家爱上了足球，所以成了四小狼之一。后来，大家都去打篮球了，我也跟着去打篮球了，不过至今篮球都没有成为我喜爱的一项运动。足球倒是成了我在繁忙的工作之余可以用来消遣的方式。至于到后来的大学，那时候还是那么幼稚，可以说和普通人一样，逃课，打游戏，因为没有什么钱，所以只能用这种方式来消遣无聊的大学时光，也许有那段时间喜欢上了吉他，但是由于觉得吉他很贵，又不得不放弃了这么一项爱好，以至于现在我终于又拿起吉他，可以说不是那么的晚，学习从来没有晚的时候，尤其是自己的兴趣爱好。游戏打了整个大学，也没见自己的技术有很大的提升，可以说大学真是混过来的，要么有那么点可以谈资的话就是交了两个女朋友，一个是高中同学，现在已嫁作他人妇，一个是大学同学，现在我也不知道近况。可以说家庭情况影响了我整个大学，并不是我不知道感恩，而是现在回首看看，细细比较之后发现，这些都是点滴之间的影响。我很感谢我的父母，是他们无私的奉献才早就如今的我，而现在的我由于学会了很多东西，渐渐发现了很多的问题，这也并不影响我以成年人的视角来审视这么些年的我。至于第二个女朋友，则是幼稚的综合体，最后到病入膏肓了为时已晚。就这样进入研究生阶段，分手也是在研究生阶段发生的，然后就是感情的空窗期直到现在，可以说到现在我都没有能力去爱别人。研究生阶段也有人跟我表白过，但是自己拒绝了，总以为自己能遇到更好的，而放弃当前可以得到的。也是有自己的固执，希望给自己和自己的孩子以更好的，而不是凑合。爱情是美好的东西，而不是将就。在研究生的最后一年，我开始学起了尤克里里，这么的小乐器终于弥补了我一直以来的音乐梦，可以说现在一般的曲子都能拿来谈，给自己的无聊生活添加那么点乐趣。吉他也是在博士期间开始的，总是自认为吉他的音色更加好听，所以开始了，但是由于学习的时间不是那么多，所以到现在吉他还是半吊子的水平，一首完整的歌都弹不起来，每天没有时间练习也就没有收获。博士开始，按揭买了台相机，这算培养自己的第二爱好，可是一直没有机会进行学习，相机也一直尘封在那里，希望能找到一个女孩，每周能带着她去采风之类的，也不至于款差不多都还了，到现在相机还只是会那么点的知识。研究生期间喜欢上了羽毛球，于是一有时间就去打，只是喜欢酣畅淋漓之后的感觉，只是现在随着进入博士期间，圈子也是越来越窄，所以打球的人也越来越少，好长时间荒废了，于是开始了跑步，记得以前连一千米都跑不下来，现在每次至少五千米的跑，想想也真是自己长大了，加上近期跑步这项运动很火啊，于是就有了现在的自己，还指望着跑步能减肥。 其实哪里有那么多的没时间，只是自己懒罢了。所以跑步这项运动还是要继续下去，没事少看点无聊的电视剧，多做些有益的运动，多走出去看看。 今天下雨，其实很喜欢在下雨天出去走走，呼吸新鲜空气，亦或者淋雨，尽管雨很脏，但是还是想这么做。 今天就写到这吧，后面有什么再写。 好吧，本来不想写的，但是后面的师姐又在焦躁的抱怨，所以顺便就接着写。 对于自己的情绪控制，我通常都是自己想，而不是怨天尤人，现在已经这样了，凡事要看的开，要学会控制自己的情绪，这我发现在实验室弥漫着这种情绪，大家都喜欢抱怨，抱怨这抱怨那，而不是去想想如何能改变这种情况，所以最终也只能成为碌碌无为的人，所以自己得到的教训就是不抱怨，有什么事自己解决，而不是向别人传递负能量。 好了，以后再写如何跟别人打交道吧。","categories":[{"name":"琴棋书画","slug":"琴棋书画","permalink":"http://maxiaoyuelun.github.io/categories/琴棋书画/"}],"tags":[]},{"title":"杭州","slug":"杭州","date":"2016-03-29T04:32:16.000Z","updated":"2019-03-13T13:31:02.164Z","comments":true,"path":"2016/03/29/杭州/","link":"","permalink":"http://maxiaoyuelun.github.io/2016/03/29/杭州/","excerpt":"Welcome to my blog, enter password to read.","text":"Welcome to my blog, enter password to read. ","categories":[{"name":"琴棋书画","slug":"琴棋书画","permalink":"http://maxiaoyuelun.github.io/categories/琴棋书画/"}],"tags":[]},{"title":"matlab坐标系疑云","slug":"matlab坐标系疑云","date":"2015-12-20T03:08:44.000Z","updated":"2017-12-22T14:41:00.606Z","comments":true,"path":"2015/12/20/matlab坐标系疑云/","link":"","permalink":"http://maxiaoyuelun.github.io/2015/12/20/matlab坐标系疑云/","excerpt":"编程中总会被matlab的奇怪坐标系坐标搞晕，在此笔记。","text":"编程中总会被matlab的奇怪坐标系坐标搞晕，在此笔记。 如上图所示，即是matlab图像格式，假设图像用I表示，那么在x轴100和y轴50处，读取图像的像素为I(50,100)，此即为matlab的坐标系格式。一般在figure中点击某点显示像素坐标，显示的是x轴和y轴的坐标，但是编写代码的时候就要反过来，注意注意。 另外，matlab的坐标系是从1开始的，而不是从0开始。","categories":[{"name":"技术堆栈","slug":"技术堆栈","permalink":"http://maxiaoyuelun.github.io/categories/技术堆栈/"}],"tags":[{"name":"matlab","slug":"matlab","permalink":"http://maxiaoyuelun.github.io/tags/matlab/"}]},{"title":"只缘身在此山中","slug":"只缘身在此山中","date":"2015-03-17T12:34:40.000Z","updated":"2019-03-17T15:33:12.988Z","comments":true,"path":"2015/03/17/只缘身在此山中/","link":"","permalink":"http://maxiaoyuelun.github.io/2015/03/17/只缘身在此山中/","excerpt":"The article has been encrypted, please enter your password to view.","text":"Please enter the password to read the blog. ","categories":[{"name":"琴棋书画","slug":"琴棋书画","permalink":"http://maxiaoyuelun.github.io/categories/琴棋书画/"}],"tags":[]},{"title":"Hello World","slug":"hello-world","date":"2015-01-01T12:52:07.000Z","updated":"2017-11-18T06:29:08.993Z","comments":true,"path":"2015/01/01/hello-world/","link":"","permalink":"http://maxiaoyuelun.github.io/2015/01/01/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]},{"title":"黄山","slug":"黄山","date":"2015-01-01T03:24:28.000Z","updated":"2019-03-13T13:30:38.340Z","comments":true,"path":"2015/01/01/黄山/","link":"","permalink":"http://maxiaoyuelun.github.io/2015/01/01/黄山/","excerpt":"Welcome to my blog, enter password to read.","text":"Welcome to my blog, enter password to read. ","categories":[{"name":"琴棋书画","slug":"琴棋书画","permalink":"http://maxiaoyuelun.github.io/categories/琴棋书画/"}],"tags":[]},{"title":"癸巳十月三十","slug":"癸巳十月三十","date":"2013-10-30T08:35:19.000Z","updated":"2018-05-04T12:44:49.531Z","comments":true,"path":"2013/10/30/癸巳十月三十/","link":"","permalink":"http://maxiaoyuelun.github.io/2013/10/30/癸巳十月三十/","excerpt":"日始霜露重， 晓寒雾喧天。 由来出征早， 笑对梦中人。","text":"日始霜露重， 晓寒雾喧天。 由来出征早， 笑对梦中人。","categories":[{"name":"琴棋书画","slug":"琴棋书画","permalink":"http://maxiaoyuelun.github.io/categories/琴棋书画/"}],"tags":[]},{"title":"癸巳十月十八于上班途中","slug":"癸巳十月十八于上班途中","date":"2013-10-18T08:33:44.000Z","updated":"2018-05-04T12:44:56.059Z","comments":true,"path":"2013/10/18/癸巳十月十八于上班途中/","link":"","permalink":"http://maxiaoyuelun.github.io/2013/10/18/癸巳十月十八于上班途中/","excerpt":"秋深抬眼对望窗，却惊天际已泛黄。 无奈匆匆浮桥去，切肤片片晨风凉。 与君信言诗一首，叹笑学堂搜肚肠。 求得子安灵附体，遥想终曲满庭芳。","text":"秋深抬眼对望窗，却惊天际已泛黄。 无奈匆匆浮桥去，切肤片片晨风凉。 与君信言诗一首，叹笑学堂搜肚肠。 求得子安灵附体，遥想终曲满庭芳。","categories":[{"name":"琴棋书画","slug":"琴棋书画","permalink":"http://maxiaoyuelun.github.io/categories/琴棋书画/"}],"tags":[]},{"title":"贺友人入职一周年记","slug":"贺友人入职一周年记","date":"2013-04-28T08:31:32.000Z","updated":"2018-05-04T12:44:39.388Z","comments":true,"path":"2013/04/28/贺友人入职一周年记/","link":"","permalink":"http://maxiaoyuelun.github.io/2013/04/28/贺友人入职一周年记/","excerpt":"","text":"癸巳夏正浓，蝉嘒喋不休。 徐行微月起，不见皓长空。 谁云万里不惜君，恰似旧年，音笑犹身边。 也学词人作，摇首出古今。 一岁初峥嵘，风雨但任啾。 道南国何妨故土，正好长驱，俯仰点东风。","categories":[{"name":"琴棋书画","slug":"琴棋书画","permalink":"http://maxiaoyuelun.github.io/categories/琴棋书画/"}],"tags":[]}]}